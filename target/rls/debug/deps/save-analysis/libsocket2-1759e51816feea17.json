{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2","program":"/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","socket2","--edition=2018","/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=1759e51816feea17","-C","extra-filename=-1759e51816feea17","--out-dir","/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","-L","dependency=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","--extern","libc=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/liblibc-fb9ef40ac061536a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libsocket2-1759e51816feea17.rmeta"},"prelude":{"crate_id":{"name":"socket2","disambiguator":[16219535596666155370,0]},"crate_root":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src","external_crates":[{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","num":17,"id":{"name":"libc","disambiguator":[10523018658660346655,0]}}],"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":351,"byte_end":13032,"line_start":9,"line_end":435,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4172,"byte_end":4180,"line_start":131,"line_end":131,"column_start":19,"column_end":27},"alias_span":null,"name":"SockAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4198,"byte_end":4204,"line_start":132,"line_end":132,"column_start":17,"column_end":23},"alias_span":null,"name":"Socket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4223,"byte_end":4230,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"alias_span":null,"name":"SockRef","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":351,"byte_end":13032,"line_start":9,"line_end":435,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":24},{"krate":0,"index":102},{"krate":0,"index":321},{"krate":0,"index":358},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":759},{"krate":0,"index":835},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":762}],"decl_id":null,"docs":" Utilities for creating and using sockets.","sig":null,"attributes":[{"value":"/ Utilities for creating and using sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":351,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":397,"byte_end":400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The goal of this crate is to create and use a socket using advanced","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":401,"byte_end":472,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ configuration options (those that are not available in the types in the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":473,"byte_end":548,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ standard library) without using any unsafe code.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":549,"byte_end":601,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":602,"byte_end":605,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This crate provides as direct as possible access to the system's","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":606,"byte_end":674,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ functionality for sockets, this means little effort to provide","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":675,"byte_end":741,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ cross-platform utilities. It is up to the user to know how to use sockets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":742,"byte_end":819,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ when using this crate. *If you don't know how to create a socket using","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":820,"byte_end":894,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ libc/system calls then this crate is not for you*. Most, if not all,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":895,"byte_end":967,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ functions directly relate to the equivalent system call with no error","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":968,"byte_end":1041,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ handling applied, so no handling errors such as [`EINTR`]. As a result using","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1042,"byte_end":1122,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ this crate can be a little wordy, but it should give you maximal flexibility","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1123,"byte_end":1203,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ over configuration of sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1204,"byte_end":1238,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`EINTR`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1243,"byte_end":1289,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1290,"byte_end":1293,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1294,"byte_end":1308,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1309,"byte_end":1312,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1313,"byte_end":1326,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1327,"byte_end":1367,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1368,"byte_end":1412,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ use socket2::{Socket, Domain, Type};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1413,"byte_end":1453,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1454,"byte_end":1457,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a TCP listener bound to two addresses.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1458,"byte_end":1510,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let socket = Socket::new(Domain::IPV6, Type::STREAM, None)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1511,"byte_end":1575,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1576,"byte_end":1579,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ socket.set_only_v6(false)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1580,"byte_end":1611,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ let address: SocketAddr = \"[::1]:12345\".parse().unwrap();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1612,"byte_end":1673,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ socket.bind(&address.into())?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1674,"byte_end":1708,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ socket.listen(128)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1709,"byte_end":1733,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener: TcpListener = socket.into();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1738,"byte_end":1784,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ // ...","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1785,"byte_end":1795,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1796,"byte_end":1817,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1818,"byte_end":1832,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1833,"byte_end":1840,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1841,"byte_end":1844,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1845,"byte_end":1860,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1861,"byte_end":1864,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This crate has a single feature `all`, which enables all functions even ones","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1865,"byte_end":1945,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ that are not available on all OSs.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":1946,"byte_end":1984,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":2041,"byte_end":2112,"line_start":54,"line_end":54,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13535,"byte_end":13543,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"SockAddr","qualname":"::sockaddr::SockAddr","value":"SockAddr {  }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" The address of a socket.","sig":null,"attributes":[{"value":"/ The address of a socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13348,"byte_end":13376,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13377,"byte_end":13380,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `SockAddr`s may be constructed directly to and from the standard library","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13381,"byte_end":13457,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ [`SocketAddr`], [`SocketAddrV4`], and [`SocketAddrV6`] types.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13458,"byte_end":13523,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15220,"byte_end":15223,"line_start":68,"line_end":68,"column_start":25,"column_end":28},"name":"new","qualname":"<SockAddr>::new","value":"pub const unsafe fn new(sockaddr_storage, socklen_t) -> SockAddr","parent":null,"children":[],"decl_id":null,"docs":" Create a `SockAddr` from the underlying storage and its length.","sig":null,"attributes":[{"value":"/ Create a `SockAddr` from the underlying storage and its length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13659,"byte_end":13726,"line_start":23,"line_end":23,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13731,"byte_end":13734,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13739,"byte_end":13751,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13756,"byte_end":13759,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure that the address family and length match the type of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13764,"byte_end":13839,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ storage address. For example if `storage.ss_family` is set to `AF_INET`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13844,"byte_end":13919,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ the `storage` must be initialised as `sockaddr_in`, setting the content","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13924,"byte_end":13999,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ and length appropriately.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14004,"byte_end":14033,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14038,"byte_end":14041,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14046,"byte_end":14060,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14065,"byte_end":14068,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14073,"byte_end":14080,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14085,"byte_end":14125,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14130,"byte_end":14150,"line_start":36,"line_end":36,"column_start":5,"column_end":25}},{"value":"/ use std::io;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14155,"byte_end":14171,"line_start":37,"line_end":37,"column_start":5,"column_end":21}},{"value":"/ use std::mem;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14176,"byte_end":14193,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14198,"byte_end":14233,"line_start":39,"line_end":39,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14238,"byte_end":14241,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ use socket2::{SockAddr, Socket, Domain, Type};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14246,"byte_end":14296,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14301,"byte_end":14304,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14309,"byte_end":14373,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14378,"byte_end":14381,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // Initialise a `SocketAddr` byte calling `getsockname(2)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14386,"byte_end":14449,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ let mut addr_storage: libc::sockaddr_storage = unsafe { mem::zeroed() };","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14454,"byte_end":14530,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ let mut len = mem::size_of_val(&addr_storage) as libc::socklen_t;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14535,"byte_end":14604,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14609,"byte_end":14612,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // The `getsockname(2)` system call will intiliase `storage` for","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14617,"byte_end":14685,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ // us, setting `len` to the correct length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14690,"byte_end":14737,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ let res = unsafe {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14742,"byte_end":14764,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/     libc::getsockname(","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14769,"byte_end":14795,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"/         socket.as_raw_fd(),","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14800,"byte_end":14831,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/         (&mut addr_storage as *mut libc::sockaddr_storage).cast(),","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14836,"byte_end":14906,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/         &mut len,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14911,"byte_end":14932,"line_start":55,"line_end":55,"column_start":5,"column_end":26}},{"value":"/     )","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14937,"byte_end":14946,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14951,"byte_end":14957,"line_start":57,"line_end":57,"column_start":5,"column_end":11}},{"value":"/ if res == -1 {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14962,"byte_end":14980,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/     return Err(io::Error::last_os_error());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":14985,"byte_end":15032,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15037,"byte_end":15042,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15047,"byte_end":15050,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let address = unsafe { SockAddr::new(addr_storage, len) };","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15055,"byte_end":15117,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/ # drop(address);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15122,"byte_end":15142,"line_start":63,"line_end":63,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15147,"byte_end":15154,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15159,"byte_end":15171,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15176,"byte_end":15183,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15188,"byte_end":15195,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16962,"byte_end":16966,"line_start":117,"line_end":117,"column_start":19,"column_end":23},"name":"init","qualname":"<SockAddr>::init","value":"pub unsafe fn init<F, T>(F) -> io::Result<(T, SockAddr)> where\nF: FnOnce(*mut sockaddr_storage, *mut socklen_t) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Initialise a `SockAddr` by calling the function `init`.","sig":null,"attributes":[{"value":"/ Initialise a `SockAddr` by calling the function `init`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15326,"byte_end":15385,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15390,"byte_end":15393,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The type of the address storage and length passed to the function `init`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15398,"byte_end":15474,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ is OS/architecture specific.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15479,"byte_end":15511,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15516,"byte_end":15519,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The address is zeroed before `init` is called and is thus valid to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15524,"byte_end":15594,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ dereference and read from. The length initialised to the maximum length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15599,"byte_end":15674,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ of the storage.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15679,"byte_end":15698,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15703,"byte_end":15706,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15711,"byte_end":15723,"line_start":81,"line_end":81,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15728,"byte_end":15731,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure that the address family and length match the type of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15736,"byte_end":15811,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ storage address. For example if `storage.ss_family` is set to `AF_INET`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15816,"byte_end":15891,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ the `storage` must be initialised as `sockaddr_in`, setting the content","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15896,"byte_end":15971,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ and length appropriately.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":15976,"byte_end":16005,"line_start":86,"line_end":86,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16010,"byte_end":16013,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16018,"byte_end":16032,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16037,"byte_end":16040,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16045,"byte_end":16052,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16057,"byte_end":16097,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16102,"byte_end":16122,"line_start":92,"line_end":92,"column_start":5,"column_end":25}},{"value":"/ use std::io;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16127,"byte_end":16143,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16148,"byte_end":16183,"line_start":94,"line_end":94,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16188,"byte_end":16191,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ use socket2::{SockAddr, Socket, Domain, Type};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16196,"byte_end":16246,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16251,"byte_end":16254,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16259,"byte_end":16323,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16328,"byte_end":16331,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Initialise a `SocketAddr` byte calling `getsockname(2)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16336,"byte_end":16399,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/ let (_, address) = unsafe {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16404,"byte_end":16435,"line_start":101,"line_end":101,"column_start":5,"column_end":36}},{"value":"/     SockAddr::init(|addr_storage, len| {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16440,"byte_end":16484,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/         // The `getsockname(2)` system call will intiliase `storage` for","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16489,"byte_end":16565,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/         // us, setting `len` to the correct length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16570,"byte_end":16625,"line_start":104,"line_end":104,"column_start":5,"column_end":60}},{"value":"/         if libc::getsockname(socket.as_raw_fd(), addr_storage.cast(), len) == -1 {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16630,"byte_end":16716,"line_start":105,"line_end":105,"column_start":5,"column_end":91}},{"value":"/             Err(io::Error::last_os_error())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16721,"byte_end":16768,"line_start":106,"line_end":106,"column_start":5,"column_end":52}},{"value":"/         } else {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16773,"byte_end":16793,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/             Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16798,"byte_end":16820,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16825,"byte_end":16838,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16843,"byte_end":16853,"line_start":110,"line_end":110,"column_start":5,"column_end":15}},{"value":"/ }?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16858,"byte_end":16865,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # drop(address);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16870,"byte_end":16890,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16895,"byte_end":16902,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16907,"byte_end":16919,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16924,"byte_end":16931,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":16936,"byte_end":16943,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18059,"byte_end":18065,"line_start":142,"line_end":142,"column_start":18,"column_end":24},"name":"family","qualname":"<SockAddr>::family","value":"pub const fn family(&Self) -> sa_family_t","parent":null,"children":[],"decl_id":null,"docs":" Returns this address's family.\n","sig":null,"attributes":[{"value":"/ Returns this address's family.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18007,"byte_end":18041,"line_start":141,"line_end":141,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18196,"byte_end":18199,"line_start":147,"line_end":147,"column_start":18,"column_end":21},"name":"len","qualname":"<SockAddr>::len","value":"pub const fn len(&Self) -> socklen_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of this address in bytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of this address in bytes.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18132,"byte_end":18178,"line_start":146,"line_end":146,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18309,"byte_end":18315,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"as_ptr","qualname":"<SockAddr>::as_ptr","value":"pub const fn as_ptr(&Self) -> *const sockaddr","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the address.\n","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18250,"byte_end":18291,"line_start":151,"line_end":151,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18757,"byte_end":18766,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"as_socket","qualname":"<SockAddr>::as_socket","value":"pub fn as_socket(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a `SocketAddr` if it is in the `AF_INET` (IPv4)\n or `AF_INET6` (IPv6) family, otherwise returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns this address as a `SocketAddr` if it is in the `AF_INET` (IPv4)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18607,"byte_end":18682,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ or `AF_INET6` (IPv6) family, otherwise returns `None`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":18687,"byte_end":18745,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20073,"byte_end":20087,"line_start":196,"line_end":196,"column_start":12,"column_end":26},"name":"as_socket_ipv4","qualname":"<SockAddr>::as_socket_ipv4","value":"pub fn as_socket_ipv4(&Self) -> Option<SocketAddrV4>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a [`SocketAddrV4`] if it is in the `AF_INET`\n family.\n","sig":null,"attributes":[{"value":"/ Returns this address as a [`SocketAddrV4`] if it is in the `AF_INET`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":19973,"byte_end":20045,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ family.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20050,"byte_end":20061,"line_start":195,"line_end":195,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20353,"byte_end":20367,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"as_socket_ipv6","qualname":"<SockAddr>::as_socket_ipv6","value":"pub fn as_socket_ipv6(&Self) -> Option<SocketAddrV6>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a [`SocketAddrV6`] if it is in the `AF_INET6`\n family.\n","sig":null,"attributes":[{"value":"/ Returns this address as a [`SocketAddrV6`] if it is in the `AF_INET6`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20252,"byte_end":20325,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ family.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20330,"byte_end":20341,"line_start":204,"line_end":204,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":188},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28092,"byte_end":28098,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Socket","qualname":"::socket::Socket","value":"Socket {  }","parent":null,"children":[{"krate":0,"index":189}],"decl_id":null,"docs":" Owned wrapper around a system socket.","sig":null,"attributes":[{"value":"/ Owned wrapper around a system socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26363,"byte_end":26404,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26405,"byte_end":26408,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This type simply wraps an instance of a file descriptor (`c_int`) on Unix","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26409,"byte_end":26486,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ and an instance of `SOCKET` on Windows. This is the main type exported by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26487,"byte_end":26564,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ this crate and is intended to mirror the raw semantics of sockets on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26565,"byte_end":26637,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ platforms as closely as possible. Almost all methods correspond to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26638,"byte_end":26708,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ precisely one libc or OS API call which is essentially just a \"Rustic","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26709,"byte_end":26782,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ translation\" of what's below.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26783,"byte_end":26816,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26817,"byte_end":26820,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type can be freely converted into the network primitives provided by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26821,"byte_end":26898,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the standard library, such as [`TcpStream`] or [`UdpSocket`], using the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26899,"byte_end":26974,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ [`Into`] trait, see the example below.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":26975,"byte_end":27017,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27018,"byte_end":27021,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: std::net::TcpStream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27022,"byte_end":27060,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ [`UdpSocket`]: std::net::UdpSocket","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27061,"byte_end":27099,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27100,"byte_end":27103,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27104,"byte_end":27115,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27116,"byte_end":27119,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Some methods that set options on `Socket` require two system calls to set","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27120,"byte_end":27197,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ there options without overwriting previously set options. We do this by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27198,"byte_end":27273,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ first getting the current settings, applying the desired changes and than","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27274,"byte_end":27351,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ updating the settings. This means that the operation is **not** atomic. This","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27352,"byte_end":27432,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ can lead to a data race when two threads are changing options in parallel.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27433,"byte_end":27511,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27512,"byte_end":27515,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27516,"byte_end":27530,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27531,"byte_end":27544,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27545,"byte_end":27585,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27586,"byte_end":27630,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ use socket2::{Socket, Domain, Type};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27631,"byte_end":27671,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27672,"byte_end":27675,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // create a TCP listener bound to two addresses","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27676,"byte_end":27727,"line_start":56,"line_end":56,"column_start":1,"column_end":52}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27728,"byte_end":27792,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27793,"byte_end":27796,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"[::1]:12345\".parse().unwrap();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27797,"byte_end":27858,"line_start":59,"line_end":59,"column_start":1,"column_end":62}},{"value":"/ let address = address.into();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27859,"byte_end":27892,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ socket.bind(&address)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27893,"byte_end":27920,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/ socket.bind(&address)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27921,"byte_end":27948,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/ socket.listen(128)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27949,"byte_end":27973,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27974,"byte_end":27977,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let listener: TcpListener = socket.into();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":27978,"byte_end":28024,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ // ...","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28025,"byte_end":28035,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28036,"byte_end":28057,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28058,"byte_end":28072,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28073,"byte_end":28080,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30366,"byte_end":30369,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Socket>::new","value":"pub fn new(Domain, Type, Option<Protocol>) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket and sets common flags.","sig":null,"attributes":[{"value":"/ Creates a new socket and sets common flags.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":29907,"byte_end":29954,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":29959,"byte_end":29962,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socket(2)` on Unix and `WSASocketW` on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":29967,"byte_end":30039,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ Windows.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30044,"byte_end":30056,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30061,"byte_end":30064,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ On Unix-like systems, the close-on-exec flag is set on the new socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30069,"byte_end":30143,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ Additionally, on Apple platforms `SOCK_NOSIGPIPE` is set. On Windows,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30148,"byte_end":30221,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ the socket is made non-inheritable.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30226,"byte_end":30265,"line_start":122,"line_end":122,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30270,"byte_end":30273,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`Socket::new_raw`] can be used if you don't want these flags to be set.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30278,"byte_end":30354,"line_start":124,"line_end":124,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30796,"byte_end":30803,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"new_raw","qualname":"<Socket>::new_raw","value":"pub fn new_raw(Domain, Type, Option<Protocol>) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket ready to be configured.","sig":null,"attributes":[{"value":"/ Creates a new socket ready to be configured.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30570,"byte_end":30618,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30623,"byte_end":30626,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socket(2)` on Unix and `WSASocketW` on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30631,"byte_end":30703,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ Windows and simply creates a new socket, no other configuration is done.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":30708,"byte_end":30784,"line_start":133,"line_end":133,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32492,"byte_end":32496,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"bind","qualname":"<Socket>::bind","value":"pub fn bind(&Self, &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Binds this socket to the specified address.","sig":null,"attributes":[{"value":"/ Binds this socket to the specified address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32327,"byte_end":32374,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32379,"byte_end":32382,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `bind(2)` function on Windows","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32387,"byte_end":32462,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ and Unix.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32467,"byte_end":32480,"line_start":177,"line_end":177,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33230,"byte_end":33237,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"connect","qualname":"<Socket>::connect","value":"pub fn connect(&Self, &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address.","sig":null,"attributes":[{"value":"/ Initiate a connection on this socket to the specified address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32597,"byte_end":32663,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32668,"byte_end":32671,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `connect(2)` function on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32676,"byte_end":32746,"line_start":184,"line_end":184,"column_start":5,"column_end":75}},{"value":"/ Windows and Unix.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32751,"byte_end":32772,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32777,"byte_end":32780,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if `listen` or `connect` has already been","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32785,"byte_end":32856,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ called on this builder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32861,"byte_end":32888,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32893,"byte_end":32896,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32901,"byte_end":32912,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32917,"byte_end":32920,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ When using a non-blocking connect (by setting the socket into","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32925,"byte_end":32990,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ non-blocking mode before calling this function), socket option can't be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":32995,"byte_end":33070,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ set *while connecting*. This will cause errors on Windows. Socket","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33075,"byte_end":33144,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/ options can be safely set before and after connecting the socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33149,"byte_end":33218,"line_start":195,"line_end":195,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34326,"byte_end":34341,"line_start":219,"line_end":219,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Socket>::connect_timeout","value":"pub fn connect_timeout(&Self, &SockAddr, Duration) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address, only\n only waiting for a certain period of time for the connection to be\n established.","sig":null,"attributes":[{"value":"/ Initiate a connection on this socket to the specified address, only","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33341,"byte_end":33412,"line_start":200,"line_end":200,"column_start":5,"column_end":76}},{"value":"/ only waiting for a certain period of time for the connection to be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33417,"byte_end":33487,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ established.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33492,"byte_end":33508,"line_start":202,"line_end":202,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33513,"byte_end":33516,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Unlike many other methods on `Socket`, this does *not* correspond to a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33521,"byte_end":33595,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ single C function. It sets the socket to nonblocking mode, connects via","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33600,"byte_end":33675,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ connect(2), and then waits for the connection to complete with poll(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33680,"byte_end":33754,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ on Unix and select on Windows. When the connection is complete, the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33759,"byte_end":33830,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/ socket is set back to blocking mode. On Unix, this will loop over","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33835,"byte_end":33904,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ `EINTR` errors.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33909,"byte_end":33928,"line_start":209,"line_end":209,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33933,"byte_end":33936,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Warnings","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33941,"byte_end":33955,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33960,"byte_end":33963,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The non-blocking state of the socket is overridden by this function -","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":33968,"byte_end":34041,"line_start":213,"line_end":213,"column_start":5,"column_end":78}},{"value":"/ it will be returned in blocking mode on success, and in an indeterminate","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34046,"byte_end":34122,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ state on failure.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34127,"byte_end":34148,"line_start":215,"line_end":215,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34153,"byte_end":34156,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If the connection request times out, it may still be processing in the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34161,"byte_end":34235,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ background - a second call to `connect` or `connect_timeout` may fail.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34240,"byte_end":34314,"line_start":218,"line_end":218,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35184,"byte_end":35190,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"listen","qualname":"<Socket>::listen","value":"pub fn listen(&Self, c_int) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Mark a socket as ready to accept incoming connection requests using\n [`Socket::accept()`].","sig":null,"attributes":[{"value":"/ Mark a socket as ready to accept incoming connection requests using","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34847,"byte_end":34918,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ [`Socket::accept()`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34923,"byte_end":34948,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34953,"byte_end":34956,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `listen(2)` function on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":34961,"byte_end":35030,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/ Windows and Unix.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35035,"byte_end":35056,"line_start":239,"line_end":239,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35061,"byte_end":35064,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if `listen` or `connect` has already been","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35069,"byte_end":35140,"line_start":241,"line_end":241,"column_start":5,"column_end":76}},{"value":"/ called on this builder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35145,"byte_end":35172,"line_start":242,"line_end":242,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35644,"byte_end":35650,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"accept","qualname":"<Socket>::accept","value":"pub fn accept(&Self) -> io::Result<(Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35289,"byte_end":35345,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35350,"byte_end":35353,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function uses `accept4(2)` on platforms that support it and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35358,"byte_end":35426,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/ `accept(2)` platforms that do not.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35431,"byte_end":35469,"line_start":250,"line_end":250,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35474,"byte_end":35477,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ This function sets the same flags as in done for [`Socket::new`],","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35482,"byte_end":35551,"line_start":252,"line_end":252,"column_start":5,"column_end":74}},{"value":"/ [`Socket::accept_raw`] can be used if you don't want to set those flags.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":35556,"byte_end":35632,"line_start":253,"line_end":253,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37099,"byte_end":37109,"line_start":294,"line_end":294,"column_start":12,"column_end":22},"name":"accept_raw","qualname":"<Socket>::accept_raw","value":"pub fn accept_raw(&Self) -> io::Result<(Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":36923,"byte_end":36979,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":36984,"byte_end":36987,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `accept(2)` function on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":36992,"byte_end":37061,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"/ Windows and Unix.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37066,"byte_end":37087,"line_start":293,"line_end":293,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37489,"byte_end":37499,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Socket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this socket.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37252,"byte_end":37316,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37321,"byte_end":37324,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37329,"byte_end":37340,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37345,"byte_end":37348,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Depending on the OS this may return an error if the socket is not","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37353,"byte_end":37422,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ [bound].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37427,"byte_end":37439,"line_start":303,"line_end":303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37444,"byte_end":37447,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [bound]: Socket::bind","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37452,"byte_end":37477,"line_start":305,"line_end":305,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37806,"byte_end":37815,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<Socket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this socket.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37584,"byte_end":37649,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37654,"byte_end":37657,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37662,"byte_end":37673,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37678,"byte_end":37681,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This returns an error if the socket is not [`connect`ed].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37686,"byte_end":37747,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37752,"byte_end":37755,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`connect`ed]: Socket::connect","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37760,"byte_end":37794,"line_start":316,"line_end":316,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38008,"byte_end":38014,"line_start":323,"line_end":323,"column_start":12,"column_end":18},"name":"type","qualname":"<Socket>::type","value":"pub fn r#type(&Self) -> io::Result<Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Type`] of this socket by checking the `SO_TYPE` option on\n this socket.\n","sig":null,"attributes":[{"value":"/ Returns the [`Type`] of this socket by checking the `SO_TYPE` option on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37900,"byte_end":37975,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":37980,"byte_end":37996,"line_start":322,"line_end":322,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38690,"byte_end":38699,"line_start":340,"line_end":340,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Socket>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38150,"byte_end":38220,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38225,"byte_end":38228,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38233,"byte_end":38244,"line_start":329,"line_end":329,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38249,"byte_end":38252,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ On Unix this uses `F_DUPFD_CLOEXEC` and thus sets the `FD_CLOEXEC` on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38257,"byte_end":38330,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ the returned socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38335,"byte_end":38359,"line_start":332,"line_end":332,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38364,"byte_end":38367,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ On Windows this uses `WSA_FLAG_NO_HANDLE_INHERIT` setting inheriting to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38372,"byte_end":38447,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ false.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38452,"byte_end":38462,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38467,"byte_end":38470,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ On Windows this can **not** be used function cannot be used on a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38475,"byte_end":38543,"line_start":337,"line_end":337,"column_start":5,"column_end":73}},{"value":"/ QOS-enabled socket, see","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38548,"byte_end":38575,"line_start":338,"line_end":338,"column_start":5,"column_end":32}},{"value":"/ <https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsaduplicatesocketw>.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38580,"byte_end":38678,"line_start":339,"line_end":339,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39082,"byte_end":39097,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Socket>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves this TCP stream into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves this TCP stream into or out of nonblocking mode.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38802,"byte_end":38860,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38865,"byte_end":38868,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38873,"byte_end":38884,"line_start":346,"line_end":346,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38889,"byte_end":38892,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to calling `fcntl` (un)setting `O_NONBLOCK`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38897,"byte_end":38970,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38975,"byte_end":38978,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ On Windows this corresponds to calling `ioctlsocket` (un)setting","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":38983,"byte_end":39051,"line_start":350,"line_end":350,"column_start":5,"column_end":73}},{"value":"/ `FIONBIO`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39056,"byte_end":39070,"line_start":351,"line_end":351,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39441,"byte_end":39449,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Socket>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39212,"byte_end":39278,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39283,"byte_end":39286,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39291,"byte_end":39363,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39368,"byte_end":39429,"line_start":359,"line_end":359,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40487,"byte_end":40491,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"recv","qualname":"<Socket>::recv","value":"pub fn recv(&Self, &mut [MaybeUninit<u8>]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39545,"byte_end":39615,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ connected.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39620,"byte_end":39634,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39639,"byte_end":39642,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39647,"byte_end":39719,"line_start":367,"line_end":367,"column_start":5,"column_end":77}},{"value":"/ This method might fail if the socket is not connected.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39724,"byte_end":39782,"line_start":368,"line_end":368,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39787,"byte_end":39790,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: Socket::connect","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39795,"byte_end":39827,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39832,"byte_end":39835,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39840,"byte_end":39852,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39857,"byte_end":39860,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Normally casting a `&mut [u8]` to `&mut [MaybeUninit<u8>]` would be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39865,"byte_end":39936,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ unsound, as that allows us to write uninitialised bytes to the buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":39941,"byte_end":40015,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/ However this implementation promises to not write uninitialised bytes to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40020,"byte_end":40096,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ the `buf`fer and passes it directly to `recv(2)` system call. This","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40101,"byte_end":40171,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ promise ensures that this function can be called using a `buf`fer of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40176,"byte_end":40248,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ type `&mut [u8]`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40253,"byte_end":40274,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40279,"byte_end":40282,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Note that the [`io::Read::read`] implementation calls this function with","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40287,"byte_end":40363,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ a `buf`fer of type `&mut [u8]`, allowing initialised buffers to be used","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40368,"byte_end":40443,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ without using `unsafe`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40448,"byte_end":40475,"line_start":383,"line_end":383,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40936,"byte_end":40952,"line_start":395,"line_end":395,"column_start":12,"column_end":28},"name":"recv_out_of_band","qualname":"<Socket>::recv_out_of_band","value":"pub fn recv_out_of_band(&Self, &mut [MaybeUninit<u8>]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives out-of-band (OOB) data on the socket from the remote address to\n which it is connected by setting the `MSG_OOB` flag for this call.","sig":null,"attributes":[{"value":"/ Receives out-of-band (OOB) data on the socket from the remote address to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40599,"byte_end":40675,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ which it is connected by setting the `MSG_OOB` flag for this call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40680,"byte_end":40750,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40755,"byte_end":40758,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`recv`], [`out_of_band_inline`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40763,"byte_end":40826,"line_start":391,"line_end":391,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40831,"byte_end":40834,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40839,"byte_end":40865,"line_start":393,"line_end":393,"column_start":5,"column_end":31}},{"value":"/ [`out_of_band_inline`]: Socket::out_of_band_inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":40870,"byte_end":40924,"line_start":394,"line_end":394,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41234,"byte_end":41249,"line_start":403,"line_end":403,"column_start":12,"column_end":27},"name":"recv_with_flags","qualname":"<Socket>::recv_with_flags","value":"pub fn recv_with_flags(&Self, &mut [MaybeUninit<u8>], sys::c_int)\n-> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv`] but allows for specification of arbitrary flags to\n the underlying `recv` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv`] but allows for specification of arbitrary flags to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41071,"byte_end":41147,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ the underlying `recv` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41152,"byte_end":41183,"line_start":400,"line_end":400,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41188,"byte_end":41191,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41196,"byte_end":41222,"line_start":402,"line_end":402,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42748,"byte_end":42761,"line_start":438,"line_end":438,"column_start":12,"column_end":25},"name":"recv_vectored","qualname":"<Socket>::recv_vectored","value":"pub fn recv_vectored(&Self, &mut [MaybeUninitSlice])\n-> io::Result<(usize, RecvFlags)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected. Unlike [`recv`] this allows passing multiple buffers.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41415,"byte_end":41485,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected. Unlike [`recv`] this allows passing multiple buffers.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41490,"byte_end":41558,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41563,"byte_end":41566,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41571,"byte_end":41643,"line_start":414,"line_end":414,"column_start":5,"column_end":77}},{"value":"/ This method might fail if the socket is not connected.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41648,"byte_end":41706,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41711,"byte_end":41714,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ In addition to the number of bytes read, this function returns the flags","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41719,"byte_end":41795,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ for the received message. See [`RecvFlags`] for more information about","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41800,"byte_end":41874,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ the returned flags.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41879,"byte_end":41902,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41907,"byte_end":41910,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41915,"byte_end":41941,"line_start":421,"line_end":421,"column_start":5,"column_end":31}},{"value":"/ [`connect`]: Socket::connect","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41946,"byte_end":41978,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41983,"byte_end":41986,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":41991,"byte_end":42003,"line_start":424,"line_end":424,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42008,"byte_end":42011,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Normally casting a `IoSliceMut` to `MaybeUninitSlice` would be unsound,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42016,"byte_end":42091,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ as that allows us to write uninitialised bytes to the buffer. However","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42096,"byte_end":42169,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ this implementation promises to not write uninitialised bytes to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42174,"byte_end":42246,"line_start":428,"line_end":428,"column_start":5,"column_end":77}},{"value":"/ `bufs` and passes it directly to `recvmsg(2)` system call. This promise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42251,"byte_end":42326,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ ensures that this function can be called using `bufs` of type `&mut","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42331,"byte_end":42402,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ [IoSliceMut]`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42407,"byte_end":42425,"line_start":431,"line_end":431,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42430,"byte_end":42433,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Note that the [`io::Read::read_vectored`] implementation calls this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42438,"byte_end":42509,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ function with `buf`s of type `&mut [IoSliceMut]`, allowing initialised","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42514,"byte_end":42588,"line_start":434,"line_end":434,"column_start":5,"column_end":79}},{"value":"/ buffers to be used without using `unsafe`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42593,"byte_end":42639,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42644,"byte_end":42676,"line_start":436,"line_end":436,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43420,"byte_end":43444,"line_start":458,"line_end":458,"column_start":12,"column_end":36},"name":"recv_vectored_with_flags","qualname":"<Socket>::recv_vectored_with_flags","value":"pub fn recv_vectored_with_flags(&Self, &mut [MaybeUninitSlice], c_int)\n-> io::Result<(usize, RecvFlags)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_vectored`] but allows for specification of arbitrary\n flags to the underlying `recvmsg`/`WSARecv` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_vectored`] but allows for specification of arbitrary","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":42921,"byte_end":42997,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ flags to the underlying `recvmsg`/`WSARecv` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43002,"byte_end":43055,"line_start":446,"line_end":446,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43060,"byte_end":43063,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43068,"byte_end":43112,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43117,"byte_end":43120,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43125,"byte_end":43137,"line_start":450,"line_end":450,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43142,"byte_end":43145,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ `recv_from_vectored` makes the same safety guarantees regarding `bufs`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43150,"byte_end":43224,"line_start":452,"line_end":452,"column_start":5,"column_end":79}},{"value":"/ as [`recv_vectored`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43229,"byte_end":43254,"line_start":453,"line_end":453,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43259,"byte_end":43262,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43267,"byte_end":43311,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43316,"byte_end":43348,"line_start":456,"line_end":456,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44151,"byte_end":44155,"line_start":479,"line_end":479,"column_start":12,"column_end":16},"name":"peek","qualname":"<Socket>::peek","value":"pub fn peek(&Self, &mut [MaybeUninit<u8>]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote adress to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote adress to which it is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43634,"byte_end":43703,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43708,"byte_end":43777,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43782,"byte_end":43821,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43826,"byte_end":43829,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43834,"byte_end":43908,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recv` system call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43913,"byte_end":43975,"line_start":471,"line_end":471,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43980,"byte_end":43983,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":43988,"byte_end":44000,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44005,"byte_end":44008,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ `peek` makes the same safety guarantees regarding the `buf`fer as","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44013,"byte_end":44082,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/ [`recv`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44087,"byte_end":44100,"line_start":476,"line_end":476,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44105,"byte_end":44108,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44113,"byte_end":44139,"line_start":478,"line_end":478,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44586,"byte_end":44595,"line_start":492,"line_end":492,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<Socket>::recv_from","value":"pub fn recv_from(&Self, &mut [MaybeUninit<u8>])\n-> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44275,"byte_end":44349,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44354,"byte_end":44405,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44410,"byte_end":44413,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44418,"byte_end":44430,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44435,"byte_end":44438,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ `recv_from` makes the same safety guarantees regarding the `buf`fer as","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44443,"byte_end":44517,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ [`recv`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44522,"byte_end":44535,"line_start":489,"line_end":489,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44540,"byte_end":44543,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44548,"byte_end":44574,"line_start":491,"line_end":491,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44902,"byte_end":44922,"line_start":500,"line_end":500,"column_start":12,"column_end":32},"name":"recv_from_with_flags","qualname":"<Socket>::recv_from_with_flags","value":"pub fn recv_from_with_flags(&Self, &mut [MaybeUninit<u8>], c_int)\n-> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_from`] but allows for specification of arbitrary\n flags to the underlying `recvfrom` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_from`] but allows for specification of arbitrary","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44720,"byte_end":44792,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/ flags to the underlying `recvfrom` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44797,"byte_end":44841,"line_start":497,"line_end":497,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44846,"byte_end":44849,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [`recv_from`]: Socket::recv_from","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":44854,"byte_end":44890,"line_start":499,"line_end":499,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45666,"byte_end":45684,"line_start":522,"line_end":522,"column_start":12,"column_end":30},"name":"recv_from_vectored","qualname":"<Socket>::recv_from_vectored","value":"pub fn recv_from_vectored(&Self, &mut [MaybeUninitSlice])\n-> io::Result<(usize, RecvFlags, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. Returns the amount of bytes read, the\n [`RecvFlags`] and the remote address from the data is coming. Unlike\n [`recv_from`] this allows passing multiple buffers.","sig":null,"attributes":[{"value":"/ Receives data from the socket. Returns the amount of bytes read, the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45100,"byte_end":45172,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ [`RecvFlags`] and the remote address from the data is coming. Unlike","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45177,"byte_end":45249,"line_start":509,"line_end":509,"column_start":5,"column_end":77}},{"value":"/ [`recv_from`] this allows passing multiple buffers.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45254,"byte_end":45309,"line_start":510,"line_end":510,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45314,"byte_end":45317,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`recv_from`]: Socket::recv_from","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45322,"byte_end":45358,"line_start":512,"line_end":512,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45363,"byte_end":45366,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45371,"byte_end":45383,"line_start":514,"line_end":514,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45388,"byte_end":45391,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ `recv_from_vectored` makes the same safety guarantees regarding `bufs`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45396,"byte_end":45470,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ as [`recv_vectored`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45475,"byte_end":45500,"line_start":517,"line_end":517,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45505,"byte_end":45508,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45513,"byte_end":45557,"line_start":519,"line_end":519,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45562,"byte_end":45594,"line_start":520,"line_end":520,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46377,"byte_end":46406,"line_start":542,"line_end":542,"column_start":12,"column_end":41},"name":"recv_from_vectored_with_flags","qualname":"<Socket>::recv_from_vectored_with_flags","value":"pub fn recv_from_vectored_with_flags(&Self, &mut [MaybeUninitSlice], c_int)\n-> io::Result<(usize, RecvFlags, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_from_vectored`] but allows for specification of\n arbitrary flags to the underlying `recvmsg`/`WSARecvFrom` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_from_vectored`] but allows for specification of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45859,"byte_end":45930,"line_start":529,"line_end":529,"column_start":5,"column_end":76}},{"value":"/ arbitrary flags to the underlying `recvmsg`/`WSARecvFrom` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":45935,"byte_end":46002,"line_start":530,"line_end":530,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46007,"byte_end":46010,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [`recv_from_vectored`]: Socket::recv_from_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46015,"byte_end":46069,"line_start":532,"line_end":532,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46074,"byte_end":46077,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46082,"byte_end":46094,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46099,"byte_end":46102,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ `recv_from_vectored` makes the same safety guarantees regarding `bufs`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46107,"byte_end":46181,"line_start":536,"line_end":536,"column_start":5,"column_end":79}},{"value":"/ as [`recv_vectored`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46186,"byte_end":46211,"line_start":537,"line_end":537,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46216,"byte_end":46219,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46224,"byte_end":46268,"line_start":539,"line_end":539,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46273,"byte_end":46305,"line_start":540,"line_end":540,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47134,"byte_end":47143,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<Socket>::peek_from","value":"pub fn peek_from(&Self, &mut [MaybeUninit<u8>])\n-> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the queue.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46611,"byte_end":46681,"line_start":550,"line_end":550,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46686,"byte_end":46689,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46694,"byte_end":46768,"line_start":552,"line_end":552,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recvfrom` system call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46773,"byte_end":46839,"line_start":553,"line_end":553,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46844,"byte_end":46847,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the address from","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46852,"byte_end":46923,"line_start":555,"line_end":555,"column_start":5,"column_end":76}},{"value":"/ whence the data came.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46928,"byte_end":46953,"line_start":556,"line_end":556,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46958,"byte_end":46961,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46966,"byte_end":46978,"line_start":558,"line_end":558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46983,"byte_end":46986,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ `peek_from` makes the same safety guarantees regarding the `buf`fer as","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":46991,"byte_end":47065,"line_start":560,"line_end":560,"column_start":5,"column_end":79}},{"value":"/ [`recv`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47070,"byte_end":47083,"line_start":561,"line_end":561,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47088,"byte_end":47091,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47096,"byte_end":47122,"line_start":563,"line_end":563,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47521,"byte_end":47525,"line_start":574,"line_end":574,"column_start":12,"column_end":16},"name":"send","qualname":"<Socket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to a connected peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to a connected peer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47280,"byte_end":47329,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47334,"byte_end":47337,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is typically used on TCP sockets or datagram sockets which have","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47342,"byte_end":47414,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ been connected.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47419,"byte_end":47438,"line_start":571,"line_end":571,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47443,"byte_end":47446,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ On success returns the number of bytes that were sent.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47451,"byte_end":47509,"line_start":573,"line_end":573,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47779,"byte_end":47794,"line_start":582,"line_end":582,"column_start":12,"column_end":27},"name":"send_with_flags","qualname":"<Socket>::send_with_flags","value":"pub fn send_with_flags(&Self, &[u8], c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send`] but allows for specification of arbitrary flags to the underlying\n `send` call.","sig":null,"attributes":[{"value":"/ Identical to [`send`] but allows for specification of arbitrary flags to the underlying","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47616,"byte_end":47707,"line_start":578,"line_end":578,"column_start":5,"column_end":96}},{"value":"/ `send` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47712,"byte_end":47728,"line_start":579,"line_end":579,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47733,"byte_end":47736,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47741,"byte_end":47767,"line_start":581,"line_end":581,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48089,"byte_end":48102,"line_start":589,"line_end":589,"column_start":12,"column_end":25},"name":"send_vectored","qualname":"<Socket>::send_vectored","value":"pub fn send_vectored(&Self, &[IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send data to the connected peer. Returns the amount of bytes written.\n","sig":null,"attributes":[{"value":"/ Send data to the connected peer. Returns the amount of bytes written.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47907,"byte_end":47980,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":47985,"byte_end":48017,"line_start":587,"line_end":587,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48513,"byte_end":48537,"line_start":599,"line_end":599,"column_start":12,"column_end":36},"name":"send_vectored_with_flags","qualname":"<Socket>::send_vectored_with_flags","value":"pub fn send_vectored_with_flags(&Self, &[IoSlice], c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_vectored`] but allows for specification of arbitrary\n flags to the underlying `sendmsg`/`WSASend` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_vectored`] but allows for specification of arbitrary","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48213,"byte_end":48289,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ flags to the underlying `sendmsg`/`WSASend` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48294,"byte_end":48347,"line_start":594,"line_end":594,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48352,"byte_end":48355,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`send_vectored`]: Socket::send_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48360,"byte_end":48404,"line_start":596,"line_end":596,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48409,"byte_end":48441,"line_start":597,"line_end":597,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49004,"byte_end":49020,"line_start":614,"line_end":614,"column_start":12,"column_end":28},"name":"send_out_of_band","qualname":"<Socket>::send_out_of_band","value":"pub fn send_out_of_band(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends out-of-band (OOB) data on the socket to connected peer\n by setting the `MSG_OOB` flag for this call.","sig":null,"attributes":[{"value":"/ Sends out-of-band (OOB) data on the socket to connected peer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48701,"byte_end":48765,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/ by setting the `MSG_OOB` flag for this call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48770,"byte_end":48818,"line_start":608,"line_end":608,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48823,"byte_end":48826,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`send`], [`out_of_band_inline`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48831,"byte_end":48894,"line_start":610,"line_end":610,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48899,"byte_end":48902,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48907,"byte_end":48933,"line_start":612,"line_end":612,"column_start":5,"column_end":31}},{"value":"/ [`out_of_band_inline`]: #method.out_of_band_inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":48938,"byte_end":48992,"line_start":613,"line_end":613,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49317,"byte_end":49324,"line_start":622,"line_end":622,"column_start":12,"column_end":19},"name":"send_to","qualname":"<Socket>::send_to","value":"pub fn send_to(&Self, &[u8], &SockAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49122,"byte_end":49196,"line_start":618,"line_end":618,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49201,"byte_end":49229,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49234,"byte_end":49237,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is typically used on UDP or datagram-oriented sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49242,"byte_end":49305,"line_start":621,"line_end":621,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49615,"byte_end":49633,"line_start":630,"line_end":630,"column_start":12,"column_end":30},"name":"send_to_with_flags","qualname":"<Socket>::send_to_with_flags","value":"pub fn send_to_with_flags(&Self, &[u8], &SockAddr, c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_to`] but allows for specification of arbitrary flags\n to the underlying `sendto` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_to`] but allows for specification of arbitrary flags","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49441,"byte_end":49517,"line_start":626,"line_end":626,"column_start":5,"column_end":81}},{"value":"/ to the underlying `sendto` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49522,"byte_end":49558,"line_start":627,"line_end":627,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49563,"byte_end":49566,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ [`send_to`]: Socket::send_to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49571,"byte_end":49603,"line_start":629,"line_end":629,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50009,"byte_end":50025,"line_start":643,"line_end":643,"column_start":12,"column_end":28},"name":"send_to_vectored","qualname":"<Socket>::send_to_vectored","value":"pub fn send_to_vectored(&Self, &[IoSlice], &SockAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send data to a peer listening on `addr`. Returns the amount of bytes\n written.\n","sig":null,"attributes":[{"value":"/ Send data to a peer listening on `addr`. Returns the amount of bytes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49811,"byte_end":49883,"line_start":639,"line_end":639,"column_start":5,"column_end":77}},{"value":"/ written.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49888,"byte_end":49900,"line_start":640,"line_end":640,"column_start":5,"column_end":17}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":49905,"byte_end":49937,"line_start":641,"line_end":641,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50473,"byte_end":50500,"line_start":653,"line_end":653,"column_start":12,"column_end":39},"name":"send_to_vectored_with_flags","qualname":"<Socket>::send_to_vectored_with_flags","value":"pub fn send_to_vectored_with_flags(&Self, &[IoSlice], &SockAddr, c_int)\n-> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_to_vectored`] but allows for specification of\n arbitrary flags to the underlying `sendmsg`/`WSASendTo` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_to_vectored`] but allows for specification of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50162,"byte_end":50231,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/ arbitrary flags to the underlying `sendmsg`/`WSASendTo` call.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50236,"byte_end":50301,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50306,"byte_end":50309,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ [`send_to_vectored`]: Socket::send_to_vectored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50314,"byte_end":50364,"line_start":650,"line_end":650,"column_start":5,"column_end":55}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":50369,"byte_end":50401,"line_start":651,"line_end":651,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52596,"byte_end":52605,"line_start":725,"line_end":725,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Socket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52385,"byte_end":52448,"line_start":720,"line_end":720,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52453,"byte_end":52456,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52461,"byte_end":52527,"line_start":722,"line_end":722,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52532,"byte_end":52535,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: Socket::set_broadcast","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52540,"byte_end":52584,"line_start":724,"line_end":724,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52981,"byte_end":52994,"line_start":736,"line_end":736,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<Socket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52805,"byte_end":52868,"line_start":732,"line_end":732,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52873,"byte_end":52876,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52881,"byte_end":52952,"line_start":734,"line_end":734,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52957,"byte_end":52969,"line_start":735,"line_end":735,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53503,"byte_end":53513,"line_start":752,"line_end":752,"column_start":12,"column_end":22},"name":"take_error","qualname":"<Socket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53250,"byte_end":53308,"line_start":747,"line_end":747,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53313,"byte_end":53316,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53321,"byte_end":53395,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53400,"byte_end":53476,"line_start":750,"line_end":750,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53481,"byte_end":53491,"line_start":751,"line_end":751,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54018,"byte_end":54027,"line_start":765,"line_end":765,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<Socket>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_KEEPALIVE` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53808,"byte_end":53870,"line_start":760,"line_end":760,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53875,"byte_end":53878,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53883,"byte_end":53949,"line_start":762,"line_end":762,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53954,"byte_end":53957,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: Socket::set_keepalive","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":53962,"byte_end":54006,"line_start":764,"line_end":764,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54383,"byte_end":54396,"line_start":775,"line_end":775,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<Socket>::set_keepalive","value":"pub fn set_keepalive(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_KEEPALIVE` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54226,"byte_end":54285,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54290,"byte_end":54293,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Enable sending of keep-alive messages on connection-oriented sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54298,"byte_end":54371,"line_start":774,"line_end":774,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54850,"byte_end":54856,"line_start":791,"line_end":791,"column_start":12,"column_end":18},"name":"linger","qualname":"<Socket>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_LINGER` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_LINGER` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54652,"byte_end":54711,"line_start":786,"line_end":786,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54716,"byte_end":54719,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54724,"byte_end":54787,"line_start":788,"line_end":788,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54792,"byte_end":54795,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: Socket::set_linger","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":54800,"byte_end":54838,"line_start":790,"line_end":790,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55738,"byte_end":55748,"line_start":812,"line_end":812,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<Socket>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_LINGER` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_LINGER` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55056,"byte_end":55112,"line_start":798,"line_end":798,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55117,"byte_end":55120,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ If `linger` is not `None`, a close(2) or shutdown(2) will not return","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55125,"byte_end":55197,"line_start":800,"line_end":800,"column_start":5,"column_end":77}},{"value":"/ until all queued messages for the socket have been successfully sent or","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55202,"byte_end":55277,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/ the linger timeout has been reached. Otherwise, the call returns","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55282,"byte_end":55350,"line_start":802,"line_end":802,"column_start":5,"column_end":73}},{"value":"/ immediately and the closing is done in the background. When the socket","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55355,"byte_end":55429,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ is closed as part of exit(2), it always lingers in the background.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55434,"byte_end":55504,"line_start":804,"line_end":804,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55509,"byte_end":55512,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55517,"byte_end":55528,"line_start":806,"line_end":806,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55533,"byte_end":55536,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ On most OSs the duration only has a precision of seconds and will be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55541,"byte_end":55613,"line_start":808,"line_end":808,"column_start":5,"column_end":77}},{"value":"/ silently truncated.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55618,"byte_end":55641,"line_start":809,"line_end":809,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55646,"byte_end":55649,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ On Apple platforms (e.g. macOS, iOS, etc) this uses `SO_LINGER_SEC`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55654,"byte_end":55726,"line_start":811,"line_end":811,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56272,"byte_end":56290,"line_start":824,"line_end":824,"column_start":12,"column_end":30},"name":"out_of_band_inline","qualname":"<Socket>::out_of_band_inline","value":"pub fn out_of_band_inline(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_OOBINLINE` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_OOBINLINE` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":55941,"byte_end":56000,"line_start":817,"line_end":817,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56005,"byte_end":56008,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_out_of_band_inline`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56013,"byte_end":56088,"line_start":819,"line_end":819,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56093,"byte_end":56096,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ [`set_out_of_band_inline`]: Socket::set_out_of_band_inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56101,"byte_end":56163,"line_start":821,"line_end":821,"column_start":5,"column_end":67}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56168,"byte_end":56200,"line_start":822,"line_end":822,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56973,"byte_end":56995,"line_start":839,"line_end":839,"column_start":12,"column_end":34},"name":"set_out_of_band_inline","qualname":"<Socket>::set_out_of_band_inline","value":"pub fn set_out_of_band_inline(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_OOBINLINE` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_OOBINLINE` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56492,"byte_end":56551,"line_start":831,"line_end":831,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56556,"byte_end":56559,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ If this option is enabled, out-of-band data is directly placed into the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56564,"byte_end":56639,"line_start":833,"line_end":833,"column_start":5,"column_end":80}},{"value":"/ receive data stream. Otherwise, out-of-band data is passed only when the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56644,"byte_end":56720,"line_start":834,"line_end":834,"column_start":5,"column_end":81}},{"value":"/ `MSG_OOB` flag is set during receiving. As per RFC6093, TCP sockets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56725,"byte_end":56796,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ using the Urgent mechanism are encouraged to set this flag.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56801,"byte_end":56864,"line_start":836,"line_end":836,"column_start":5,"column_end":68}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":56869,"byte_end":56901,"line_start":837,"line_end":837,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57478,"byte_end":57494,"line_start":855,"line_end":855,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<Socket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57253,"byte_end":57309,"line_start":850,"line_end":850,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57314,"byte_end":57317,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57322,"byte_end":57395,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57400,"byte_end":57403,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: Socket::set_recv_buffer_size","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57408,"byte_end":57466,"line_start":854,"line_end":854,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57864,"byte_end":57884,"line_start":866,"line_end":866,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<Socket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57686,"byte_end":57742,"line_start":862,"line_end":862,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57747,"byte_end":57750,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57755,"byte_end":57827,"line_start":864,"line_end":864,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":57832,"byte_end":57852,"line_start":865,"line_end":865,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58311,"byte_end":58323,"line_start":881,"line_end":881,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<Socket>::read_timeout","value":"pub fn read_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_RCVTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_RCVTIMEO` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58128,"byte_end":58186,"line_start":877,"line_end":877,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58191,"byte_end":58194,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ If the returned timeout is `None`, then `read` and `recv` calls will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58199,"byte_end":58271,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ block indefinitely.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58276,"byte_end":58299,"line_start":880,"line_end":880,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58623,"byte_end":58639,"line_start":889,"line_end":889,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Socket>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_RCVTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_RCVTIMEO` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58451,"byte_end":58509,"line_start":885,"line_end":885,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58514,"byte_end":58517,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ If `timeout` is `None`, then `read` and `recv` calls will block","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58522,"byte_end":58589,"line_start":887,"line_end":887,"column_start":5,"column_end":72}},{"value":"/ indefinitely.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58594,"byte_end":58611,"line_start":888,"line_end":888,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59017,"byte_end":59030,"line_start":898,"line_end":898,"column_start":12,"column_end":25},"name":"reuse_address","qualname":"<Socket>::reuse_address","value":"pub fn reuse_address(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_REUSEADDR` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58795,"byte_end":58857,"line_start":893,"line_end":893,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58862,"byte_end":58865,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_reuse_address`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58870,"byte_end":58940,"line_start":895,"line_end":895,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58945,"byte_end":58948,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ [`set_reuse_address`]: Socket::set_reuse_address","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":58953,"byte_end":59005,"line_start":897,"line_end":897,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59514,"byte_end":59531,"line_start":910,"line_end":910,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<Socket>::set_reuse_address","value":"pub fn set_reuse_address(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_REUSEADDR` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59222,"byte_end":59281,"line_start":905,"line_end":905,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59286,"byte_end":59289,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This indicates that futher calls to `bind` may allow reuse of local","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59294,"byte_end":59365,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ addresses. For IPv4 sockets this means that a socket may bind even when","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59370,"byte_end":59445,"line_start":908,"line_end":908,"column_start":5,"column_end":80}},{"value":"/ there's a socket already listening on this port.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59450,"byte_end":59502,"line_start":909,"line_end":909,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60007,"byte_end":60023,"line_start":926,"line_end":926,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<Socket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59779,"byte_end":59838,"line_start":921,"line_end":921,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59843,"byte_end":59846,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59851,"byte_end":59924,"line_start":923,"line_end":923,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59929,"byte_end":59932,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: Socket::set_send_buffer_size","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":59937,"byte_end":59995,"line_start":925,"line_end":925,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60390,"byte_end":60410,"line_start":937,"line_end":937,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<Socket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60215,"byte_end":60271,"line_start":933,"line_end":933,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60276,"byte_end":60279,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60284,"byte_end":60358,"line_start":935,"line_end":935,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60363,"byte_end":60378,"line_start":936,"line_end":936,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60838,"byte_end":60851,"line_start":952,"line_end":952,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<Socket>::write_timeout","value":"pub fn write_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_SNDTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_SNDTIMEO` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60654,"byte_end":60712,"line_start":948,"line_end":948,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60717,"byte_end":60720,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ If the returned timeout is `None`, then `write` and `send` calls will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60725,"byte_end":60798,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ block indefinitely.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60803,"byte_end":60826,"line_start":951,"line_end":951,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":61152,"byte_end":61169,"line_start":960,"line_end":960,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Socket>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_SNDTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_SNDTIMEO` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":60979,"byte_end":61037,"line_start":956,"line_end":956,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":61042,"byte_end":61045,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ If `timeout` is `None`, then `write` and `send` calls will block","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":61050,"byte_end":61118,"line_start":958,"line_end":958,"column_start":5,"column_end":73}},{"value":"/ indefinitely.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":61123,"byte_end":61140,"line_start":959,"line_end":959,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64460,"byte_end":64477,"line_start":1041,"line_end":1041,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<Socket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Join a multicast group using `IP_ADD_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Join a multicast group using `IP_ADD_MEMBERSHIP` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":63994,"byte_end":64069,"line_start":1034,"line_end":1034,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64074,"byte_end":64077,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64082,"byte_end":64156,"line_start":1036,"line_end":1036,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64161,"byte_end":64234,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64239,"byte_end":64311,"line_start":1038,"line_end":1038,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's [`Ipv4Addr::UNSPECIFIED`] (`INADDR_ANY`) then","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64316,"byte_end":64390,"line_start":1039,"line_end":1039,"column_start":5,"column_end":79}},{"value":"/ an appropriate interface is chosen by the system.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64395,"byte_end":64448,"line_start":1040,"line_end":1040,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65043,"byte_end":65061,"line_start":1054,"line_end":1054,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<Socket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Leave a multicast group using `IP_DROP_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Leave a multicast group using `IP_DROP_MEMBERSHIP` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64806,"byte_end":64883,"line_start":1049,"line_end":1049,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64888,"byte_end":64891,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64896,"byte_end":64966,"line_start":1051,"line_end":1051,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64971,"byte_end":64974,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: Socket::join_multicast_v4","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":64979,"byte_end":65031,"line_start":1053,"line_end":1053,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65722,"byte_end":65737,"line_start":1074,"line_end":1074,"column_start":12,"column_end":27},"name":"multicast_if_v4","qualname":"<Socket>::multicast_if_v4","value":"pub fn multicast_if_v4(&Self) -> io::Result<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_MULTICAST_IF` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65490,"byte_end":65556,"line_start":1069,"line_end":1069,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65561,"byte_end":65564,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_if_v4`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65569,"byte_end":65641,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65646,"byte_end":65649,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_if_v4`]: Socket::set_multicast_if_v4","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65654,"byte_end":65710,"line_start":1073,"line_end":1073,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66065,"byte_end":66084,"line_start":1083,"line_end":1083,"column_start":12,"column_end":31},"name":"set_multicast_if_v4","qualname":"<Socket>::set_multicast_if_v4","value":"pub fn set_multicast_if_v4(&Self, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_MULTICAST_IF` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65909,"byte_end":65975,"line_start":1080,"line_end":1080,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65980,"byte_end":65983,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Specifies the interface to use for routing multicast packets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":65988,"byte_end":66053,"line_start":1082,"line_end":1082,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66631,"byte_end":66648,"line_start":1100,"line_end":1100,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<Socket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66391,"byte_end":66459,"line_start":1095,"line_end":1095,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66464,"byte_end":66467,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66472,"byte_end":66546,"line_start":1097,"line_end":1097,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66551,"byte_end":66554,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: Socket::set_multicast_loop_v4","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66559,"byte_end":66619,"line_start":1099,"line_end":1099,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67080,"byte_end":67101,"line_start":1111,"line_end":1111,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<Socket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66849,"byte_end":66917,"line_start":1107,"line_end":1107,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66922,"byte_end":66925,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":66930,"byte_end":67004,"line_start":1109,"line_end":1109,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67009,"byte_end":67068,"line_start":1110,"line_end":1110,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67594,"byte_end":67610,"line_start":1127,"line_end":1127,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<Socket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67358,"byte_end":67425,"line_start":1122,"line_end":1122,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67430,"byte_end":67433,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67438,"byte_end":67511,"line_start":1124,"line_end":1124,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67516,"byte_end":67519,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: Socket::set_multicast_ttl_v4","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67524,"byte_end":67582,"line_start":1126,"line_end":1126,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68183,"byte_end":68203,"line_start":1141,"line_end":1141,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<Socket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67803,"byte_end":67870,"line_start":1134,"line_end":1134,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67875,"byte_end":67878,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67883,"byte_end":67953,"line_start":1136,"line_end":1136,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":67958,"byte_end":68032,"line_start":1137,"line_end":1137,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68037,"byte_end":68099,"line_start":1138,"line_end":1138,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68104,"byte_end":68107,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68112,"byte_end":68171,"line_start":1140,"line_end":1140,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68637,"byte_end":68640,"line_start":1157,"line_end":1157,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Socket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68450,"byte_end":68507,"line_start":1152,"line_end":1152,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68512,"byte_end":68515,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68520,"byte_end":68580,"line_start":1154,"line_end":1154,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68585,"byte_end":68588,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: Socket::set_ttl","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68593,"byte_end":68625,"line_start":1156,"line_end":1156,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68990,"byte_end":68997,"line_start":1167,"line_end":1167,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Socket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68806,"byte_end":68863,"line_start":1163,"line_end":1163,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68868,"byte_end":68871,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68876,"byte_end":68952,"line_start":1165,"line_end":1165,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":68957,"byte_end":68978,"line_start":1166,"line_end":1166,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69646,"byte_end":69653,"line_start":1184,"line_end":1184,"column_start":12,"column_end":19},"name":"set_tos","qualname":"<Socket>::set_tos","value":"pub fn set_tos(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_TOS` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_TOS` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69135,"byte_end":69192,"line_start":1171,"line_end":1171,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69197,"byte_end":69200,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ This value sets the type-of-service field that is used in every packet","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69205,"byte_end":69279,"line_start":1173,"line_end":1173,"column_start":5,"column_end":79}},{"value":"/ sent from this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69284,"byte_end":69310,"line_start":1174,"line_end":1174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69315,"byte_end":69318,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ NOTE: <https://docs.microsoft.com/en-us/windows/win32/winsock/ipproto-ip-socket-options>","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69323,"byte_end":69415,"line_start":1176,"line_end":1176,"column_start":5,"column_end":97}},{"value":"/ documents that not all versions of windows support `IP_TOS`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69420,"byte_end":69484,"line_start":1177,"line_end":1177,"column_start":5,"column_end":69}},{"value":"cfg(not(any(target_os = \"fuschia\", target_os = \"redox\", target_os =\n              \"solaris\", target_os = \"illumos\",)))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69489,"byte_end":69634,"line_start":1178,"line_end":1183,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70294,"byte_end":70297,"line_start":1201,"line_end":1201,"column_start":12,"column_end":15},"name":"tos","qualname":"<Socket>::tos","value":"pub fn tos(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_TOS` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_TOS` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69791,"byte_end":69848,"line_start":1188,"line_end":1188,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69853,"byte_end":69856,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_tos`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69861,"byte_end":69921,"line_start":1190,"line_end":1190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69926,"byte_end":69929,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ NOTE: <https://docs.microsoft.com/en-us/windows/win32/winsock/ipproto-ip-socket-options>","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":69934,"byte_end":70026,"line_start":1192,"line_end":1192,"column_start":5,"column_end":97}},{"value":"/ documents that not all versions of windows support `IP_TOS`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70031,"byte_end":70095,"line_start":1193,"line_end":1193,"column_start":5,"column_end":69}},{"value":"/ [`set_tos`]: Socket::set_tos","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70100,"byte_end":70132,"line_start":1194,"line_end":1194,"column_start":5,"column_end":37}},{"value":"cfg(not(any(target_os = \"fuschia\", target_os = \"redox\", target_os =\n              \"solaris\", target_os = \"illumos\",)))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70137,"byte_end":70282,"line_start":1195,"line_end":1200,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71182,"byte_end":71199,"line_start":1221,"line_end":1221,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<Socket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Join a multicast group using `IPV6_ADD_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Join a multicast group using `IPV6_ADD_MEMBERSHIP` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70785,"byte_end":70862,"line_start":1214,"line_end":1214,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70867,"byte_end":70870,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ Some OSs use `IPV6_JOIN_GROUP` for this option.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70875,"byte_end":70926,"line_start":1216,"line_end":1216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70931,"byte_end":70934,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70939,"byte_end":71013,"line_start":1218,"line_end":1218,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71018,"byte_end":71091,"line_start":1219,"line_end":1219,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71096,"byte_end":71170,"line_start":1220,"line_end":1220,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71990,"byte_end":72008,"line_start":1244,"line_end":1244,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<Socket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Leave a multicast group using `IPV6_DROP_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Leave a multicast group using `IPV6_DROP_MEMBERSHIP` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71686,"byte_end":71765,"line_start":1237,"line_end":1237,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71770,"byte_end":71773,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ Some OSs use `IPV6_LEAVE_GROUP` for this option.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71778,"byte_end":71830,"line_start":1239,"line_end":1239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71835,"byte_end":71838,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71843,"byte_end":71913,"line_start":1241,"line_end":1241,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71918,"byte_end":71921,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: Socket::join_multicast_v6","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":71926,"byte_end":71978,"line_start":1243,"line_end":1243,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72737,"byte_end":72754,"line_start":1265,"line_end":1265,"column_start":12,"column_end":29},"name":"multicast_hops_v6","qualname":"<Socket>::multicast_hops_v6","value":"pub fn multicast_hops_v6(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_MULTICAST_HOPS` option for this socket","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_MULTICAST_HOPS` option for this socket","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72496,"byte_end":72565,"line_start":1260,"line_end":1260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72570,"byte_end":72573,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_hops_v6`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72578,"byte_end":72652,"line_start":1262,"line_end":1262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72657,"byte_end":72660,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_hops_v6`]: Socket::set_multicast_hops_v6","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72665,"byte_end":72725,"line_start":1264,"line_end":1264,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73266,"byte_end":73287,"line_start":1277,"line_end":1277,"column_start":12,"column_end":33},"name":"set_multicast_hops_v6","qualname":"<Socket>::set_multicast_hops_v6","value":"pub fn set_multicast_hops_v6(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IPV6_MULTICAST_HOPS` option for this socket","sig":null,"attributes":[{"value":"/ Set the value of the `IPV6_MULTICAST_HOPS` option for this socket","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":72954,"byte_end":73023,"line_start":1272,"line_end":1272,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73028,"byte_end":73031,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Indicates the number of \"routers\" multicast packets will transit for","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73036,"byte_end":73108,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73113,"byte_end":73187,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73192,"byte_end":73254,"line_start":1276,"line_end":1276,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73775,"byte_end":73790,"line_start":1293,"line_end":1293,"column_start":12,"column_end":27},"name":"multicast_if_v6","qualname":"<Socket>::multicast_if_v6","value":"pub fn multicast_if_v6(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_MULTICAST_IF` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73541,"byte_end":73609,"line_start":1288,"line_end":1288,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73614,"byte_end":73617,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_if_v6`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73622,"byte_end":73694,"line_start":1290,"line_end":1290,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73699,"byte_end":73702,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_if_v6`]: Socket::set_multicast_if_v6","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73707,"byte_end":73763,"line_start":1292,"line_end":1292,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74273,"byte_end":74292,"line_start":1305,"line_end":1305,"column_start":12,"column_end":31},"name":"set_multicast_if_v6","qualname":"<Socket>::set_multicast_if_v6","value":"pub fn set_multicast_if_v6(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IPV6_MULTICAST_IF` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":73998,"byte_end":74066,"line_start":1300,"line_end":1300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74071,"byte_end":74074,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ Specifies the interface to use for routing multicast packets. Unlike","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74079,"byte_end":74151,"line_start":1302,"line_end":1302,"column_start":5,"column_end":77}},{"value":"/ ipv4, this is generally required in ipv6 contexts where network routing","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74156,"byte_end":74231,"line_start":1303,"line_end":1303,"column_start":5,"column_end":80}},{"value":"/ prefixes may overlap.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74236,"byte_end":74261,"line_start":1304,"line_end":1304,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74796,"byte_end":74813,"line_start":1321,"line_end":1321,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<Socket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74554,"byte_end":74624,"line_start":1316,"line_end":1316,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74629,"byte_end":74632,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74637,"byte_end":74711,"line_start":1318,"line_end":1318,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74716,"byte_end":74719,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: Socket::set_multicast_loop_v6","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":74724,"byte_end":74784,"line_start":1320,"line_end":1320,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75253,"byte_end":75274,"line_start":1332,"line_end":1332,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<Socket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75018,"byte_end":75088,"line_start":1328,"line_end":1328,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75093,"byte_end":75096,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75101,"byte_end":75177,"line_start":1330,"line_end":1330,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75182,"byte_end":75241,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75680,"byte_end":75695,"line_start":1346,"line_end":1346,"column_start":12,"column_end":27},"name":"unicast_hops_v6","qualname":"<Socket>::unicast_hops_v6","value":"pub fn unicast_hops_v6(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_UNICAST_HOPS` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_UNICAST_HOPS` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75535,"byte_end":75603,"line_start":1343,"line_end":1343,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75608,"byte_end":75611,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ Specifies the hop limit for ipv6 unicast packets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75616,"byte_end":75668,"line_start":1345,"line_end":1345,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76038,"byte_end":76057,"line_start":1356,"line_end":1356,"column_start":12,"column_end":31},"name":"set_unicast_hops_v6","qualname":"<Socket>::set_unicast_hops_v6","value":"pub fn set_unicast_hops_v6(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value for the `IPV6_UNICAST_HOPS` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value for the `IPV6_UNICAST_HOPS` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75893,"byte_end":75961,"line_start":1353,"line_end":1353,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75966,"byte_end":75969,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Specifies the hop limit for ipv6 unicast packets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":75974,"byte_end":76026,"line_start":1355,"line_end":1355,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76513,"byte_end":76520,"line_start":1372,"line_end":1372,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<Socket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76309,"byte_end":76371,"line_start":1367,"line_end":1367,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76376,"byte_end":76379,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_only_v6`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76384,"byte_end":76448,"line_start":1369,"line_end":1369,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76453,"byte_end":76456,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ [`set_only_v6`]: Socket::set_only_v6","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76461,"byte_end":76501,"line_start":1371,"line_end":1371,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":77147,"byte_end":77158,"line_start":1387,"line_end":1387,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<Socket>::set_only_v6","value":"pub fn set_only_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value for the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76717,"byte_end":76779,"line_start":1379,"line_end":1379,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76784,"byte_end":76787,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ If this is set to `true` then the socket is restricted to sending and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76792,"byte_end":76865,"line_start":1381,"line_end":1381,"column_start":5,"column_end":78}},{"value":"/ receiving IPv6 packets only. In this case two IPv4 and IPv6 applications","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76870,"byte_end":76946,"line_start":1382,"line_end":1382,"column_start":5,"column_end":81}},{"value":"/ can bind the same port at the same time.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":76951,"byte_end":76995,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":77000,"byte_end":77003,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ If this is set to `false` then the socket can be used to send and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":77008,"byte_end":77077,"line_start":1385,"line_end":1385,"column_start":5,"column_end":74}},{"value":"/ receive packets from an IPv4-mapped IPv6 address.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":77082,"byte_end":77135,"line_start":1386,"line_end":1386,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82500,"byte_end":82517,"line_start":1549,"line_end":1549,"column_start":12,"column_end":29},"name":"set_tcp_keepalive","qualname":"<Socket>::set_tcp_keepalive","value":"pub fn set_tcp_keepalive(&Self, &TcpKeepalive) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set parameters configuring TCP keepalive probes for this socket.","sig":null,"attributes":[{"value":"/ Set parameters configuring TCP keepalive probes for this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":80914,"byte_end":80982,"line_start":1511,"line_end":1511,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":80987,"byte_end":80990,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ The supported parameters depend on the operating system, and are","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":80995,"byte_end":81063,"line_start":1513,"line_end":1513,"column_start":5,"column_end":73}},{"value":"/ configured using the [`TcpKeepalive`] struct. At a minimum, all systems","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81068,"byte_end":81143,"line_start":1514,"line_end":1514,"column_start":5,"column_end":80}},{"value":"/ support configuring the [keepalive time]: the time after which the OS","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81148,"byte_end":81221,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ will start sending keepalive messages on an idle connection.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81226,"byte_end":81290,"line_start":1516,"line_end":1516,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81295,"byte_end":81298,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ [keepalive time]: TcpKeepalive::with_time","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81303,"byte_end":81348,"line_start":1518,"line_end":1518,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81353,"byte_end":81356,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81361,"byte_end":81372,"line_start":1520,"line_end":1520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81377,"byte_end":81380,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ * This will enable `SO_KEEPALIVE` on this socket, if it is not already","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81385,"byte_end":81459,"line_start":1522,"line_end":1522,"column_start":5,"column_end":79}},{"value":"/   enabled.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81464,"byte_end":81478,"line_start":1523,"line_end":1523,"column_start":5,"column_end":19}},{"value":"/ * On some platforms, such as Windows, any keepalive parameters *not*","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81483,"byte_end":81555,"line_start":1524,"line_end":1524,"column_start":5,"column_end":77}},{"value":"/   configured by the `TcpKeepalive` struct passed to this function may be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81560,"byte_end":81636,"line_start":1525,"line_end":1525,"column_start":5,"column_end":81}},{"value":"/   overwritten with their default values. Therefore, this function should","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81641,"byte_end":81717,"line_start":1526,"line_end":1526,"column_start":5,"column_end":81}},{"value":"/   either only be called once per socket, or the same parameters should","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81722,"byte_end":81796,"line_start":1527,"line_end":1527,"column_start":5,"column_end":79}},{"value":"/   be passed every time it is called.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81801,"byte_end":81841,"line_start":1528,"line_end":1528,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81846,"byte_end":81849,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81854,"byte_end":81868,"line_start":1530,"line_end":1530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81873,"byte_end":81876,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81881,"byte_end":81888,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81893,"byte_end":81921,"line_start":1533,"line_end":1533,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81926,"byte_end":81929,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ use socket2::{Socket, TcpKeepalive, Domain, Type};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81934,"byte_end":81988,"line_start":1535,"line_end":1535,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":81993,"byte_end":81996,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82001,"byte_end":82041,"line_start":1537,"line_end":1537,"column_start":5,"column_end":45}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82046,"byte_end":82110,"line_start":1538,"line_end":1538,"column_start":5,"column_end":69}},{"value":"/ let keepalive = TcpKeepalive::new()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82115,"byte_end":82154,"line_start":1539,"line_end":1539,"column_start":5,"column_end":44}},{"value":"/     .with_time(Duration::from_secs(4));","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82159,"byte_end":82202,"line_start":1540,"line_end":1540,"column_start":5,"column_end":48}},{"value":"/     // Depending on the target operating system, we may also be able to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82207,"byte_end":82282,"line_start":1541,"line_end":1541,"column_start":5,"column_end":80}},{"value":"/     // configure the keepalive probe interval and/or the number of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82287,"byte_end":82357,"line_start":1542,"line_end":1542,"column_start":5,"column_end":75}},{"value":"/     // retries here as well.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82362,"byte_end":82394,"line_start":1543,"line_end":1543,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82399,"byte_end":82402,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ socket.set_tcp_keepalive(&keepalive)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82407,"byte_end":82449,"line_start":1545,"line_end":1545,"column_start":5,"column_end":47}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82454,"byte_end":82468,"line_start":1546,"line_end":1546,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82473,"byte_end":82480,"line_start":1547,"line_end":1547,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82485,"byte_end":82488,"line_start":1548,"line_end":1548,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82871,"byte_end":82878,"line_start":1559,"line_end":1559,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<Socket>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82668,"byte_end":82729,"line_start":1554,"line_end":1554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82734,"byte_end":82737,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82742,"byte_end":82806,"line_start":1556,"line_end":1556,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82811,"byte_end":82814,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: Socket::set_nodelay","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":82819,"byte_end":82859,"line_start":1558,"line_end":1558,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83487,"byte_end":83498,"line_start":1573,"line_end":1573,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<Socket>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83073,"byte_end":83134,"line_start":1566,"line_end":1566,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83139,"byte_end":83142,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83147,"byte_end":83216,"line_start":1568,"line_end":1568,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83221,"byte_end":83294,"line_start":1569,"line_end":1569,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83299,"byte_end":83372,"line_start":1570,"line_end":1570,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83377,"byte_end":83452,"line_start":1571,"line_end":1571,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83457,"byte_end":83475,"line_start":1572,"line_end":1572,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89519,"byte_end":89526,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"SockRef","qualname":"::sockref::SockRef","value":"SockRef {  }","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"decl_id":null,"docs":" A reference to a [`Socket`] that can be used to configure socket types other\n than the `Socket` type itself.","sig":null,"attributes":[{"value":"/ A reference to a [`Socket`] that can be used to configure socket types other","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86671,"byte_end":86751,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ than the `Socket` type itself.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86752,"byte_end":86786,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86787,"byte_end":86790,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This allows for example a [`TcpStream`], found in the standard library, to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86791,"byte_end":86869,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ be configured using all the additional methods found in the [`Socket`] API.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86870,"byte_end":86949,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86950,"byte_end":86953,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `SockRef` can be created from any socket type that implements [`AsRawFd`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":86954,"byte_end":87031,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ (Unix) or [`AsRawSocket`] (Windows) using the [`From`] implementation, but","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87032,"byte_end":87110,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ the caller must ensure the file descriptor/socket is a valid.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87111,"byte_end":87176,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87177,"byte_end":87180,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: std::net::TcpStream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87181,"byte_end":87219,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`AsRawFd`]: https://doc.rust-lang.org/stable/std/os/unix/io/trait.AsRawFd.html","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87293,"byte_end":87376,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ [`AsRawSocket`]: https://doc.rust-lang.org/stable/std/os/windows/io/trait.AsRawSocket.html","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87377,"byte_end":87471,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87472,"byte_end":87475,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87476,"byte_end":87490,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87491,"byte_end":87494,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Below is an example of converting a [`TcpStream`] into a [`SockRef`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87495,"byte_end":87568,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87569,"byte_end":87572,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87573,"byte_end":87580,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use std::net::{TcpStream, SocketAddr};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87581,"byte_end":87623,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87624,"byte_end":87627,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ use socket2::SockRef;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87628,"byte_end":87653,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87654,"byte_end":87657,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87658,"byte_end":87717,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ // Create `TcpStream` from the standard library.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87718,"byte_end":87770,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let address: SocketAddr = \"127.0.0.1:1234\".parse()?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87771,"byte_end":87827,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/ # let b1 = std::sync::Arc::new(std::sync::Barrier::new(2));","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87828,"byte_end":87891,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ # let b2 = b1.clone();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87892,"byte_end":87918,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ # let handle = std::thread::spawn(move || {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87919,"byte_end":87966,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ #    let listener = std::net::TcpListener::bind(address).unwrap();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":87967,"byte_end":88037,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ #    b2.wait();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88038,"byte_end":88057,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ #    let (stream, _) = listener.accept().unwrap();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88058,"byte_end":88112,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ #    std::thread::sleep(std::time::Duration::from_millis(10));","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88113,"byte_end":88179,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ #    drop(stream);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88180,"byte_end":88202,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ # });","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88203,"byte_end":88212,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ # b1.wait();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88213,"byte_end":88229,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88230,"byte_end":88276,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88277,"byte_end":88280,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Create a `SockRef`erence to the stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88281,"byte_end":88327,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ let socket_ref = SockRef::from(&stream);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88328,"byte_end":88372,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ // Use `Socket::set_nodelay` on the stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88373,"byte_end":88420,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ socket_ref.set_nodelay(true)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88421,"byte_end":88455,"line_start":54,"line_end":54,"column_start":1,"column_end":35}},{"value":"/ drop(socket_ref);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88456,"byte_end":88477,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88478,"byte_end":88481,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88482,"byte_end":88522,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88523,"byte_end":88552,"line_start":58,"line_end":58,"column_start":1,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88553,"byte_end":88565,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88566,"byte_end":88573,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88574,"byte_end":88581,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88582,"byte_end":88585,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Below is an example of **incorrect usage** of `SockRef::from`, which is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88586,"byte_end":88661,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ currently possible (but not intended and will be fixed in future versions).","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88662,"byte_end":88741,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88742,"byte_end":88745,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88746,"byte_end":88765,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ use socket2::SockRef;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88766,"byte_end":88791,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88792,"byte_end":88795,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88796,"byte_end":88855,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/ /// THIS USAGE IS NOT VALID!","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88856,"byte_end":88888,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/ let socket_ref = SockRef::from(&123);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88889,"byte_end":88930,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/ // The above line is overseen possibility when using `SockRef::from`, it","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":88931,"byte_end":89007,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ // uses the `RawFd` (on Unix), which is a type alias for `c_int`/`i32`,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89008,"byte_end":89083,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ // which implements `AsRawFd`. However it may be clear that this usage is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89084,"byte_end":89161,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ // invalid as it doesn't guarantee that `123` is a valid file descriptor.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89162,"byte_end":89239,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89240,"byte_end":89243,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // Using `Socket::set_nodelay` now will call it on a file descriptor we","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89244,"byte_end":89319,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ // don't own! We don't even not if the file descriptor is valid or a socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89320,"byte_end":89400,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ socket_ref.set_nodelay(true)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89401,"byte_end":89435,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ drop(socket_ref);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89436,"byte_end":89457,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89458,"byte_end":89470,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89471,"byte_end":89478,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # DO_NOT_COMPILE","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89479,"byte_end":89499,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89500,"byte_end":89507,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":609},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":97742,"byte_end":97746,"line_start":207,"line_end":207,"column_start":15,"column_end":19},"name":"UNIX","qualname":"::sys::<impl Domain>::UNIX","value":"Domain","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Domain for Unix socket communication, corresponding to `AF_UNIX`.\n","sig":null,"attributes":[{"value":"/ Domain for Unix socket communication, corresponding to `AF_UNIX`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":97618,"byte_end":97687,"line_start":205,"line_end":205,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102695,"byte_end":102711,"line_start":385,"line_end":385,"column_start":18,"column_end":34},"name":"is_end_of_record","qualname":"<RecvFlags>::is_end_of_record","value":"pub const fn is_end_of_record(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the message terminates a record.","sig":null,"attributes":[{"value":"/ Check if the message terminates a record.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102331,"byte_end":102376,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102381,"byte_end":102384,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Not all socket types support the notion of records.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102389,"byte_end":102444,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/ For socket types that do support it (such as [`SEQPACKET`][Type::SEQPACKET]),","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102449,"byte_end":102530,"line_start":381,"line_end":381,"column_start":5,"column_end":86}},{"value":"/ a record is terminated by sending a message with the end-of-record flag set.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102535,"byte_end":102615,"line_start":382,"line_end":382,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102620,"byte_end":102623,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to the MSG_EOR flag.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102628,"byte_end":102677,"line_start":384,"line_end":384,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":103032,"byte_end":103046,"line_start":395,"line_end":395,"column_start":18,"column_end":32},"name":"is_out_of_band","qualname":"<RecvFlags>::is_out_of_band","value":"pub const fn is_out_of_band(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the message contains out-of-band data.","sig":null,"attributes":[{"value":"/ Check if the message contains out-of-band data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102775,"byte_end":102826,"line_start":389,"line_end":389,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102831,"byte_end":102834,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This is useful for protocols where you receive out-of-band data","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102839,"byte_end":102906,"line_start":391,"line_end":391,"column_start":5,"column_end":72}},{"value":"/ mixed in with the normal data stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102911,"byte_end":102952,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102957,"byte_end":102960,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to the MSG_OOB flag.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102965,"byte_end":103014,"line_start":394,"line_end":394,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4737,"byte_end":4743,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"Domain","qualname":"::Domain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specification of the communication domain for a socket.","sig":null,"attributes":[{"value":"/ Specification of the communication domain for a socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4233,"byte_end":4292,"line_start":135,"line_end":135,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4293,"byte_end":4296,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4297,"byte_end":4374,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation. Convenience constants such","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4375,"byte_end":4455,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ as [`Domain::IPV4`], [`Domain::IPV6`], etc, are provided to avoid reaching","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4456,"byte_end":4534,"line_start":139,"line_end":139,"column_start":1,"column_end":79}},{"value":"/ into libc for various constants.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4535,"byte_end":4571,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4572,"byte_end":4575,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4576,"byte_end":4655,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4656,"byte_end":4687,"line_start":143,"line_end":143,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":716},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4848,"byte_end":4852,"line_start":149,"line_end":149,"column_start":15,"column_end":19},"name":"IPV4","qualname":"::Domain::IPV4","value":"Domain","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Domain for IPv4 communication, corresponding to `AF_INET`.\n","sig":null,"attributes":[{"value":"/ Domain for IPv4 communication, corresponding to `AF_INET`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4771,"byte_end":4833,"line_start":148,"line_end":148,"column_start":5,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":717},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4968,"byte_end":4972,"line_start":152,"line_end":152,"column_start":15,"column_end":19},"name":"IPV6","qualname":"::Domain::IPV6","value":"Domain","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Domain for IPv6 communication, corresponding to `AF_INET6`.\n","sig":null,"attributes":[{"value":"/ Domain for IPv6 communication, corresponding to `AF_INET6`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4890,"byte_end":4953,"line_start":151,"line_end":151,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5074,"byte_end":5085,"line_start":155,"line_end":155,"column_start":18,"column_end":29},"name":"for_address","qualname":"<Domain>::for_address","value":"pub const fn for_address(SocketAddr) -> Domain","parent":null,"children":[],"decl_id":null,"docs":" Returns the correct domain for `address`.\n","sig":null,"attributes":[{"value":"/ Returns the correct domain for `address`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5011,"byte_end":5056,"line_start":154,"line_end":154,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":796},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5933,"byte_end":5937,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specification of communication semantics on a socket.","sig":null,"attributes":[{"value":"/ Specification of communication semantics on a socket.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5432,"byte_end":5489,"line_start":175,"line_end":175,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5490,"byte_end":5493,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5494,"byte_end":5571,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation. Convenience constants such","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5572,"byte_end":5652,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"/ as [`Type::STREAM`], [`Type::DGRAM`], etc, are provided to avoid reaching","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5653,"byte_end":5730,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/ into libc for various constants.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5731,"byte_end":5767,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5768,"byte_end":5771,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5772,"byte_end":5851,"line_start":182,"line_end":182,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5852,"byte_end":5883,"line_start":183,"line_end":183,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":724},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6066,"byte_end":6072,"line_start":191,"line_end":191,"column_start":15,"column_end":21},"name":"STREAM","qualname":"::Type::STREAM","value":"Type","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_STREAM`.","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_STREAM`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5963,"byte_end":6003,"line_start":188,"line_end":188,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6008,"byte_end":6011,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Used for protocols such as TCP.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6016,"byte_end":6051,"line_start":190,"line_end":190,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":725},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6212,"byte_end":6217,"line_start":196,"line_end":196,"column_start":15,"column_end":20},"name":"DGRAM","qualname":"::Type::DGRAM","value":"Type","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_DGRAM`.","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_DGRAM`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6110,"byte_end":6149,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6154,"byte_end":6157,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Used for protocols such as UDP.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6162,"byte_end":6197,"line_start":195,"line_end":195,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7209,"byte_end":7217,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::Protocol","value":"","parent":null,"children":[],"decl_id":null,"docs":" Protocol specification used for creating sockets via `Socket::new`.","sig":null,"attributes":[{"value":"/ Protocol specification used for creating sockets via `Socket::new`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6836,"byte_end":6907,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6908,"byte_end":6911,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6912,"byte_end":6989,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6990,"byte_end":7043,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7044,"byte_end":7047,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7048,"byte_end":7127,"line_start":226,"line_end":226,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7128,"byte_end":7159,"line_start":227,"line_end":227,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":731},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7301,"byte_end":7307,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"name":"ICMPV4","qualname":"::Protocol::ICMPV4","value":"Protocol","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Protocol corresponding to `ICMPv4`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `ICMPv4`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7247,"byte_end":7286,"line_start":232,"line_end":232,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":732},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7408,"byte_end":7414,"line_start":236,"line_end":236,"column_start":15,"column_end":21},"name":"ICMPV6","qualname":"::Protocol::ICMPV6","value":"Protocol","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Protocol corresponding to `ICMPv6`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `ICMPv6`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7354,"byte_end":7393,"line_start":235,"line_end":235,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":733},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7514,"byte_end":7517,"line_start":239,"line_end":239,"column_start":15,"column_end":18},"name":"TCP","qualname":"::Protocol::TCP","value":"Protocol","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Protocol corresponding to `TCP`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `TCP`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7463,"byte_end":7499,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":734},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7614,"byte_end":7617,"line_start":242,"line_end":242,"column_start":15,"column_end":18},"name":"UDP","qualname":"::Protocol::UDP","value":"Protocol","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Protocol corresponding to `UDP`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `UDP`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7563,"byte_end":7599,"line_start":241,"line_end":241,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":822},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8088,"byte_end":8097,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"RecvFlags","qualname":"::RecvFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flags for incoming messages.","sig":null,"attributes":[{"value":"/ Flags for incoming messages.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7847,"byte_end":7879,"line_start":257,"line_end":257,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7880,"byte_end":7883,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Flags provide additional information about incoming messages.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7884,"byte_end":7949,"line_start":259,"line_end":259,"column_start":1,"column_end":66}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7950,"byte_end":7982,"line_start":260,"line_end":260,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8468,"byte_end":8480,"line_start":274,"line_end":274,"column_start":18,"column_end":30},"name":"is_truncated","qualname":"<RecvFlags>::is_truncated","value":"pub const fn is_truncated(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the message contains a truncated datagram.","sig":null,"attributes":[{"value":"/ Check if the message contains a truncated datagram.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8161,"byte_end":8216,"line_start":267,"line_end":267,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8221,"byte_end":8224,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This flag is only used for datagram-based sockets,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8229,"byte_end":8283,"line_start":269,"line_end":269,"column_start":5,"column_end":59}},{"value":"/ not for stream sockets.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8288,"byte_end":8315,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8320,"byte_end":8323,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to the `MSG_TRUNC` flag.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8328,"byte_end":8381,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ On Windows this corresponds to the `WSAEMSGSIZE` error code.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8386,"byte_end":8450,"line_start":273,"line_end":273,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8695,"byte_end":8711,"line_start":283,"line_end":283,"column_start":12,"column_end":28},"name":"MaybeUninitSlice","qualname":"::MaybeUninitSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" A version of [`IoSliceMut`] that allows the buffer to be uninitialised.","sig":null,"attributes":[{"value":"/ A version of [`IoSliceMut`] that allows the buffer to be uninitialised.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8543,"byte_end":8618,"line_start":279,"line_end":279,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8619,"byte_end":8622,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`IoSliceMut`]: std::io::IoSliceMut","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8623,"byte_end":8662,"line_start":281,"line_end":281,"column_start":1,"column_end":40}},{"value":"repr(transparent)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8663,"byte_end":8683,"line_start":282,"line_end":282,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9213,"byte_end":9216,"line_start":301,"line_end":301,"column_start":12,"column_end":15},"name":"new","qualname":"<MaybeUninitSlice>::new","value":"pub fn new(&'a mut [MaybeUninit<u8>]) -> MaybeUninitSlice","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MaybeUninitSlice` wrapping a byte slice.","sig":null,"attributes":[{"value":"/ Creates a new `MaybeUninitSlice` wrapping a byte slice.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9050,"byte_end":9109,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9114,"byte_end":9117,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9122,"byte_end":9134,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9139,"byte_end":9142,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Panics on Windows if the slice is larger than 4GB.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9147,"byte_end":9201,"line_start":300,"line_end":300,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9771,"byte_end":9783,"line_start":324,"line_end":324,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::TcpKeepalive","value":"TcpKeepalive {  }","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838}],"decl_id":null,"docs":" Configures a socket's TCP keepalive parameters.","sig":null,"attributes":[{"value":"/ Configures a socket's TCP keepalive parameters.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9641,"byte_end":9692,"line_start":320,"line_end":320,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9693,"byte_end":9696,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ See [`Socket::set_tcp_keepalive`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9697,"byte_end":9735,"line_start":322,"line_end":322,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10084,"byte_end":10087,"line_start":334,"line_end":334,"column_start":18,"column_end":21},"name":"new","qualname":"<TcpKeepalive>::new","value":"pub const fn new() -> TcpKeepalive","parent":null,"children":[],"decl_id":null,"docs":" Returns a new, empty set of TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new, empty set of TCP keepalive parameters.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10009,"byte_end":10066,"line_start":333,"line_end":333,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10777,"byte_end":10786,"line_start":353,"line_end":353,"column_start":18,"column_end":27},"name":"with_time","qualname":"<TcpKeepalive>::with_time","value":"pub const fn with_time(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the amount of time after which TCP keepalive probes will be sent on\n idle connections.","sig":null,"attributes":[{"value":"/ Set the amount of time after which TCP keepalive probes will be sent on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10231,"byte_end":10306,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ idle connections.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10311,"byte_end":10332,"line_start":343,"line_end":343,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10337,"byte_end":10340,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This will set `TCP_KEEPALIVE` on macOS and iOS, and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10345,"byte_end":10400,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/ `TCP_KEEPIDLE` on all other Unix operating systems, except","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10405,"byte_end":10467,"line_start":346,"line_end":346,"column_start":5,"column_end":67}},{"value":"/ OpenBSD and Haiku which don't support any way to set this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10472,"byte_end":10533,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/ option. On Windows, this sets the value of the `tcp_keepalive`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10538,"byte_end":10604,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ struct's `keepalivetime` field.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10609,"byte_end":10644,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10649,"byte_end":10652,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10657,"byte_end":10720,"line_start":351,"line_end":351,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":10725,"byte_end":10759,"line_start":352,"line_end":352,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13644,"byte_end":13652,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20556,"byte_end":20564,"line_start":213,"line_end":213,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20777,"byte_end":20785,"line_start":222,"line_end":222,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":21819,"byte_end":21827,"line_start":250,"line_end":250,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":23267,"byte_end":23275,"line_start":291,"line_end":291,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28272,"byte_end":28278,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52372,"byte_end":52378,"line_start":719,"line_end":719,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":62110,"byte_end":62116,"line_start":991,"line_end":991,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70772,"byte_end":70778,"line_start":1213,"line_end":1213,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":77716,"byte_end":77722,"line_start":1404,"line_end":1404,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83762,"byte_end":83768,"line_start":1585,"line_end":1585,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":85259,"byte_end":85265,"line_start":1619,"line_end":1619,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":85944,"byte_end":85950,"line_start":1649,"line_end":1649,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89970,"byte_end":89977,"line_start":95,"line_end":95,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":90238,"byte_end":90245,"line_start":106,"line_end":106,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":91158,"byte_end":91165,"line_start":139,"line_end":139,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":97605,"byte_end":97611,"line_start":204,"line_end":204,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":99102,"byte_end":99106,"line_start":250,"line_end":250,"column_start":6,"column_end":10},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102315,"byte_end":102324,"line_start":377,"line_end":377,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":103166,"byte_end":103175,"line_start":401,"line_end":401,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":103645,"byte_end":103661,"line_start":417,"line_end":417,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":104303,"byte_end":104311,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":106815,"byte_end":106823,"line_start":503,"line_end":503,"column_start":6,"column_end":14},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":122566,"byte_end":122572,"line_start":998,"line_end":998,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":147809,"byte_end":147815,"line_start":1763,"line_end":1763,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":147946,"byte_end":147952,"line_start":1770,"line_end":1770,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":148086,"byte_end":148092,"line_start":1777,"line_end":1777,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4758,"byte_end":4764,"line_start":147,"line_end":147,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5277,"byte_end":5283,"line_start":163,"line_end":163,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5369,"byte_end":5374,"line_start":169,"line_end":169,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5952,"byte_end":5956,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6691,"byte_end":6695,"line_start":209,"line_end":209,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6775,"byte_end":6780,"line_start":215,"line_end":215,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7232,"byte_end":7240,"line_start":231,"line_end":231,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7682,"byte_end":7690,"line_start":245,"line_end":245,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7782,"byte_end":7787,"line_start":251,"line_end":251,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8145,"byte_end":8154,"line_start":266,"line_end":266,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8770,"byte_end":8786,"line_start":285,"line_end":285,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8820,"byte_end":8836,"line_start":287,"line_end":287,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8869,"byte_end":8885,"line_start":289,"line_end":289,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9023,"byte_end":9039,"line_start":295,"line_end":295,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9361,"byte_end":9377,"line_start":306,"line_end":306,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9523,"byte_end":9539,"line_start":314,"line_end":314,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9990,"byte_end":10002,"line_start":332,"line_end":332,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":13644,"byte_end":13652,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20556,"byte_end":20564,"line_start":213,"line_end":213,"column_start":27,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":20777,"byte_end":20785,"line_start":222,"line_end":222,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":21819,"byte_end":21827,"line_start":250,"line_end":250,"column_start":29,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockaddr.rs","byte_start":23267,"byte_end":23275,"line_start":291,"line_end":291,"column_start":21,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":28272,"byte_end":28278,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":52372,"byte_end":52378,"line_start":719,"line_end":719,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":62110,"byte_end":62116,"line_start":991,"line_end":991,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":70772,"byte_end":70778,"line_start":1213,"line_end":1213,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":77716,"byte_end":77722,"line_start":1404,"line_end":1404,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":83762,"byte_end":83768,"line_start":1585,"line_end":1585,"column_start":15,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":85259,"byte_end":85265,"line_start":1619,"line_end":1619,"column_start":16,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/socket.rs","byte_start":85944,"byte_end":85950,"line_start":1649,"line_end":1649,"column_start":21,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":188},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":89970,"byte_end":89977,"line_start":95,"line_end":95,"column_start":20,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":90238,"byte_end":90245,"line_start":106,"line_end":106,"column_start":29,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sockref.rs","byte_start":91158,"byte_end":91165,"line_start":139,"line_end":139,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":97605,"byte_end":97611,"line_start":204,"line_end":204,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":99102,"byte_end":99106,"line_start":250,"line_end":250,"column_start":6,"column_end":10},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":102315,"byte_end":102324,"line_start":377,"line_end":377,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":103166,"byte_end":103175,"line_start":401,"line_end":401,"column_start":26,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":822},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":103645,"byte_end":103661,"line_start":417,"line_end":417,"column_start":10,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":104303,"byte_end":104311,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":106815,"byte_end":106823,"line_start":503,"line_end":503,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":122566,"byte_end":122572,"line_start":998,"line_end":998,"column_start":13,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":147809,"byte_end":147815,"line_start":1763,"line_end":1763,"column_start":25,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":5588}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":147946,"byte_end":147952,"line_start":1770,"line_end":1770,"column_start":27,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":5592}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/sys/unix.rs","byte_start":148086,"byte_end":148092,"line_start":1777,"line_end":1777,"column_start":27,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":5590}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":4758,"byte_end":4764,"line_start":147,"line_end":147,"column_start":6,"column_end":12},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5277,"byte_end":5283,"line_start":163,"line_end":163,"column_start":22,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5369,"byte_end":5374,"line_start":169,"line_end":169,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":17,"index":55},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":5952,"byte_end":5956,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6691,"byte_end":6695,"line_start":209,"line_end":209,"column_start":22,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":796},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":6775,"byte_end":6780,"line_start":215,"line_end":215,"column_start":21,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":17,"index":55},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7232,"byte_end":7240,"line_start":231,"line_end":231,"column_start":6,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7682,"byte_end":7690,"line_start":245,"line_end":245,"column_start":22,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":809},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":7782,"byte_end":7787,"line_start":251,"line_end":251,"column_start":25,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":17,"index":55},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8145,"byte_end":8154,"line_start":266,"line_end":266,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8770,"byte_end":8786,"line_start":285,"line_end":285,"column_start":26,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8820,"byte_end":8836,"line_start":287,"line_end":287,"column_start":26,"column_end":42},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":8869,"byte_end":8885,"line_start":289,"line_end":289,"column_start":25,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9023,"byte_end":9039,"line_start":295,"line_end":295,"column_start":10,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9361,"byte_end":9377,"line_start":306,"line_end":306,"column_start":20,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9523,"byte_end":9539,"line_start":314,"line_end":314,"column_start":23,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.2/src/lib.rs","byte_start":9990,"byte_end":10002,"line_start":332,"line_end":332,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":835},"to":{"krate":4294967295,"index":4294967295}}]}