{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8","program":"/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=07bc78b95dfeefed","-C","extra-filename=-07bc78b95dfeefed","--out-dir","/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","-L","dependency=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","--extern","bytes=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libbytes-5fae237f45e4e3ee.rmeta","--extern","futures_core=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libfutures_core-0398f25daad32179.rmeta","--extern","futures_sink=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libfutures_sink-744db875f82af058.rmeta","--extern","log=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/liblog-4ec7ca7094daeeed.rmeta","--extern","pin_project_lite=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libpin_project_lite-9c5138d249e6dc2c.rmeta","--extern","tokio=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libtokio-7ce83ac5e4206de4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libtokio_util-07bc78b95dfeefed.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[4983968290599522671,0]},"crate_root":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src","external_crates":[{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8947264418412078715,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[16214626321829081561,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14004541350322100676,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14513964228136080925,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18071398054246242872,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9901929154766010641,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1992023595794582040,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3304853791930394566,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16365657126326177412,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1295476454418234886,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2217975506173844539,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10955358760156651288,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17029152361031566612,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4374745283242162134,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5422690374441455074,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16158478199367640957,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3064376627870306792,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":18,"id":{"name":"futures_core","disambiguator":[6138211312376724297,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":19,"id":{"name":"futures_sink","disambiguator":[3412946671653501025,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":20,"id":{"name":"tokio","disambiguator":[7358594289554279340,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":21,"id":{"name":"parking_lot","disambiguator":[15168399282381636456,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":22,"id":{"name":"instant","disambiguator":[5183125410147288244,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[18090141088928795859,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[6568122701532361456,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[17970148060099818384,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[6803789998674207395,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[3474248423819185804,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":28,"id":{"name":"libc","disambiguator":[18258192749890366442,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[5743854047627138846,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[3834254404149206309,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":31,"id":{"name":"log","disambiguator":[14506920878264654452,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[1224331342718625939,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":33,"id":{"name":"once_cell","disambiguator":[10233171752357958901,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[10672329730167398862,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":35,"id":{"name":"memchr","disambiguator":[7183785832843700463,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":36,"id":{"name":"num_cpus","disambiguator":[13689848000744781578,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[2046583653564618432,0]}}],"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386905,"byte_end":14386915,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386954,"byte_end":14386961,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387000,"byte_end":14387007,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387169,"byte_end":14387175,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387177,"byte_end":14387188,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387236,"byte_end":14387246,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387295,"byte_end":14387306,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387368,"byte_end":14387388,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387390,"byte_end":14387415,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387464,"byte_end":14387474,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387476,"byte_end":14387491,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387556,"byte_end":14387573,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387575,"byte_end":14387597,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6717,"byte_end":6726,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6728,"byte_end":6745,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6747,"byte_end":6772,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6835,"byte_end":6845,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6892,"byte_end":6905,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6948,"byte_end":6965,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376633,"byte_end":14376686,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376687,"byte_end":14376690,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376691,"byte_end":14376766,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376767,"byte_end":14376832,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376833,"byte_end":14376836,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376837,"byte_end":14376917,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376918,"byte_end":14376993,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14376994,"byte_end":14377042,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377043,"byte_end":14377046,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377047,"byte_end":14377070,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377071,"byte_end":14377074,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377075,"byte_end":14377154,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377155,"byte_end":14377234,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377235,"byte_end":14377306,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377307,"byte_end":14377377,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377378,"byte_end":14377456,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377457,"byte_end":14377533,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377534,"byte_end":14377567,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377568,"byte_end":14377571,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377572,"byte_end":14377652,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377653,"byte_end":14377733,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377734,"byte_end":14377784,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377785,"byte_end":14377788,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377789,"byte_end":14377840,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377841,"byte_end":14377890,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377891,"byte_end":14377942,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377943,"byte_end":14377946,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14377947,"byte_end":14378012,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378013,"byte_end":14378016,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378017,"byte_end":14378094,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378095,"byte_end":14378136,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378137,"byte_end":14378140,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378141,"byte_end":14378221,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378222,"byte_end":14378301,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378302,"byte_end":14378380,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378381,"byte_end":14378460,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378461,"byte_end":14378475,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378476,"byte_end":14378479,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378480,"byte_end":14378559,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378560,"byte_end":14378639,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378640,"byte_end":14378657,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378658,"byte_end":14378661,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378662,"byte_end":14378739,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378740,"byte_end":14378819,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378820,"byte_end":14378897,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378898,"byte_end":14378968,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14378969,"byte_end":14379018,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379019,"byte_end":14379022,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379023,"byte_end":14379036,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379037,"byte_end":14379069,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379070,"byte_end":14379137,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379138,"byte_end":14379252,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379253,"byte_end":14379290,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379291,"byte_end":14379352,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379353,"byte_end":14379402,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379403,"byte_end":14379406,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379407,"byte_end":14379448,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379449,"byte_end":14379459,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379460,"byte_end":14379544,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379545,"byte_end":14379601,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379602,"byte_end":14379605,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379606,"byte_end":14379627,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379628,"byte_end":14379695,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379696,"byte_end":14379724,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379725,"byte_end":14379738,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379739,"byte_end":14379757,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379758,"byte_end":14379767,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379768,"byte_end":14379771,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379772,"byte_end":14379831,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379832,"byte_end":14379856,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379857,"byte_end":14379866,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379867,"byte_end":14379872,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379873,"byte_end":14379881,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379882,"byte_end":14379889,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379890,"byte_end":14379964,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379965,"byte_end":14379968,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379969,"byte_end":14379991,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379992,"byte_end":14379995,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14379996,"byte_end":14380073,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380074,"byte_end":14380150,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380151,"byte_end":14380230,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380231,"byte_end":14380285,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380286,"byte_end":14380289,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380290,"byte_end":14380334,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380335,"byte_end":14380342,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380343,"byte_end":14380378,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380379,"byte_end":14380410,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380411,"byte_end":14380414,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380415,"byte_end":14380444,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380445,"byte_end":14380448,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380449,"byte_end":14380488,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380489,"byte_end":14380492,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380493,"byte_end":14380531,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380532,"byte_end":14380559,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380560,"byte_end":14380596,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380597,"byte_end":14380600,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380601,"byte_end":14380619,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380620,"byte_end":14380642,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380643,"byte_end":14380673,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380674,"byte_end":14380728,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380729,"byte_end":14380759,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380760,"byte_end":14380817,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380818,"byte_end":14380850,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380851,"byte_end":14380864,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380865,"byte_end":14380868,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380869,"byte_end":14380903,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380904,"byte_end":14380948,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14380949,"byte_end":14381001,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381002,"byte_end":14381069,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381070,"byte_end":14381073,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381074,"byte_end":14381148,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381149,"byte_end":14381215,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381216,"byte_end":14381245,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381246,"byte_end":14381293,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381294,"byte_end":14381346,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381347,"byte_end":14381418,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381419,"byte_end":14381438,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381439,"byte_end":14381452,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381453,"byte_end":14381456,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381457,"byte_end":14381496,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381497,"byte_end":14381552,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381553,"byte_end":14381571,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381572,"byte_end":14381648,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381649,"byte_end":14381715,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381716,"byte_end":14381768,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381769,"byte_end":14381772,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381773,"byte_end":14381853,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381854,"byte_end":14381879,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381880,"byte_end":14381912,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381913,"byte_end":14381926,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381927,"byte_end":14381930,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14381931,"byte_end":14382003,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382004,"byte_end":14382030,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382031,"byte_end":14382082,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382083,"byte_end":14382119,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382120,"byte_end":14382123,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382124,"byte_end":14382202,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382203,"byte_end":14382246,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382247,"byte_end":14382294,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382295,"byte_end":14382331,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382332,"byte_end":14382376,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382377,"byte_end":14382433,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382434,"byte_end":14382482,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382483,"byte_end":14382505,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382506,"byte_end":14382524,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382525,"byte_end":14382538,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382539,"byte_end":14382548,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382549,"byte_end":14382554,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382555,"byte_end":14382562,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382563,"byte_end":14382566,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382567,"byte_end":14382590,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382591,"byte_end":14382594,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382595,"byte_end":14382673,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382674,"byte_end":14382747,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382748,"byte_end":14382824,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382825,"byte_end":14382905,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382906,"byte_end":14382922,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382923,"byte_end":14382926,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14382927,"byte_end":14383007,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383008,"byte_end":14383087,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383088,"byte_end":14383168,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383169,"byte_end":14383241,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383242,"byte_end":14383245,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383246,"byte_end":14383323,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383324,"byte_end":14383402,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383403,"byte_end":14383476,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383477,"byte_end":14383543,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383544,"byte_end":14383547,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383548,"byte_end":14383561,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383562,"byte_end":14383595,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383596,"byte_end":14383630,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383631,"byte_end":14383668,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383669,"byte_end":14383736,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383737,"byte_end":14383772,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383773,"byte_end":14383834,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383835,"byte_end":14383881,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383882,"byte_end":14383943,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383944,"byte_end":14383947,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383948,"byte_end":14383976,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383977,"byte_end":14383980,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14383981,"byte_end":14384022,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384023,"byte_end":14384033,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384034,"byte_end":14384058,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384059,"byte_end":14384133,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384134,"byte_end":14384176,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384177,"byte_end":14384191,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384192,"byte_end":14384249,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384250,"byte_end":14384299,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384300,"byte_end":14384314,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384315,"byte_end":14384352,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384353,"byte_end":14384404,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384405,"byte_end":14384451,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384452,"byte_end":14384482,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384483,"byte_end":14384497,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384498,"byte_end":14384507,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384508,"byte_end":14384513,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384514,"byte_end":14384521,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384522,"byte_end":14384529,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384530,"byte_end":14384605,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384606,"byte_end":14384679,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384680,"byte_end":14384722,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384723,"byte_end":14384726,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384727,"byte_end":14384749,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384750,"byte_end":14384753,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384754,"byte_end":14384831,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384832,"byte_end":14384908,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384909,"byte_end":14384985,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14384986,"byte_end":14385009,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385010,"byte_end":14385013,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385014,"byte_end":14385059,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385060,"byte_end":14385067,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385068,"byte_end":14385103,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385104,"byte_end":14385128,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385129,"byte_end":14385132,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385133,"byte_end":14385162,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385163,"byte_end":14385166,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385167,"byte_end":14385206,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385207,"byte_end":14385210,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385211,"byte_end":14385257,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385258,"byte_end":14385294,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385295,"byte_end":14385298,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385299,"byte_end":14385390,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385391,"byte_end":14385465,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385466,"byte_end":14385488,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385489,"byte_end":14385522,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385523,"byte_end":14385570,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385571,"byte_end":14385623,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385624,"byte_end":14385699,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385700,"byte_end":14385719,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385720,"byte_end":14385733,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385734,"byte_end":14385737,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385738,"byte_end":14385790,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385791,"byte_end":14385868,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385869,"byte_end":14385933,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385934,"byte_end":14385937,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385938,"byte_end":14385981,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14385982,"byte_end":14386022,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386023,"byte_end":14386026,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386027,"byte_end":14386084,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386085,"byte_end":14386131,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386132,"byte_end":14386183,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386184,"byte_end":14386202,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386203,"byte_end":14386212,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386213,"byte_end":14386218,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386219,"byte_end":14386226,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386227,"byte_end":14386230,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386231,"byte_end":14386270,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386271,"byte_end":14386312,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386313,"byte_end":14386349,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386350,"byte_end":14386382,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386383,"byte_end":14386479,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386480,"byte_end":14386531,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386532,"byte_end":14386585,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386586,"byte_end":14386629,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386630,"byte_end":14386674,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386675,"byte_end":14386723,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386724,"byte_end":14386772,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386773,"byte_end":14386819,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14386820,"byte_end":14386859,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388883,"byte_end":14388893,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387726,"byte_end":14387811,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387812,"byte_end":14387815,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387816,"byte_end":14387854,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387855,"byte_end":14387893,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387894,"byte_end":14387897,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387898,"byte_end":14387911,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387912,"byte_end":14387915,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387916,"byte_end":14387997,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14387998,"byte_end":14388001,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388002,"byte_end":14388041,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388042,"byte_end":14388075,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388076,"byte_end":14388105,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388106,"byte_end":14388109,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388110,"byte_end":14388117,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388118,"byte_end":14388136,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388137,"byte_end":14388167,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388168,"byte_end":14388192,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388193,"byte_end":14388200,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388201,"byte_end":14388230,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388231,"byte_end":14388283,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388284,"byte_end":14388287,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388288,"byte_end":14388306,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388307,"byte_end":14388324,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388325,"byte_end":14388405,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388406,"byte_end":14388440,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388441,"byte_end":14388494,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388495,"byte_end":14388506,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388507,"byte_end":14388514,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388515,"byte_end":14388520,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388521,"byte_end":14388568,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388569,"byte_end":14388622,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388623,"byte_end":14388681,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388682,"byte_end":14388761,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388762,"byte_end":14388774,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388775,"byte_end":14388782,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388783,"byte_end":14388790,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388791,"byte_end":14388794,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388995,"byte_end":14388998,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388922,"byte_end":14388983,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390999,"byte_end":14391006,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14389713,"byte_end":14389748,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14389749,"byte_end":14389752,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14389753,"byte_end":14389822,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14389823,"byte_end":14389902,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14389903,"byte_end":14389975,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14389976,"byte_end":14390000,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390001,"byte_end":14390004,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390005,"byte_end":14390073,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390074,"byte_end":14390151,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390152,"byte_end":14390213,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390214,"byte_end":14390217,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390218,"byte_end":14390279,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390280,"byte_end":14390342,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390343,"byte_end":14390346,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390347,"byte_end":14390410,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390411,"byte_end":14390474,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390475,"byte_end":14390554,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390555,"byte_end":14390629,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390630,"byte_end":14390649,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390650,"byte_end":14390653,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390654,"byte_end":14390722,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390723,"byte_end":14390785,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390786,"byte_end":14390861,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390862,"byte_end":14390902,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390903,"byte_end":14390906,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390907,"byte_end":14390943,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14390944,"byte_end":14390988,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391054,"byte_end":14391058,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391013,"byte_end":14391044,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391824,"byte_end":14391829,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391065,"byte_end":14391117,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391122,"byte_end":14391125,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391130,"byte_end":14391199,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391204,"byte_end":14391274,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391279,"byte_end":14391325,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391330,"byte_end":14391333,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391338,"byte_end":14391414,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391419,"byte_end":14391494,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391499,"byte_end":14391574,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391579,"byte_end":14391619,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391624,"byte_end":14391627,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391632,"byte_end":14391706,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391711,"byte_end":14391757,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391762,"byte_end":14391765,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391770,"byte_end":14391814,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394765,"byte_end":14394771,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391853,"byte_end":14391918,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391923,"byte_end":14391926,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14391931,"byte_end":14392005,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392010,"byte_end":14392082,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392087,"byte_end":14392160,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392165,"byte_end":14392208,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392213,"byte_end":14392216,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392221,"byte_end":14392294,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392299,"byte_end":14392362,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392367,"byte_end":14392442,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392447,"byte_end":14392522,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392527,"byte_end":14392550,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392555,"byte_end":14392558,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392563,"byte_end":14392635,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392640,"byte_end":14392714,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392719,"byte_end":14392789,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392794,"byte_end":14392797,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392802,"byte_end":14392870,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392875,"byte_end":14392946,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14392951,"byte_end":14393031,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393036,"byte_end":14393048,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393053,"byte_end":14393056,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393061,"byte_end":14393131,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393136,"byte_end":14393211,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393216,"byte_end":14393253,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393258,"byte_end":14393261,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393266,"byte_end":14393302,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393307,"byte_end":14393351,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393356,"byte_end":14393359,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393364,"byte_end":14393387,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393392,"byte_end":14393395,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393400,"byte_end":14393474,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393479,"byte_end":14393553,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393558,"byte_end":14393611,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393616,"byte_end":14393619,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393624,"byte_end":14393695,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393700,"byte_end":14393770,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393775,"byte_end":14393791,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393796,"byte_end":14393799,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393804,"byte_end":14393817,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393822,"byte_end":14393840,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393845,"byte_end":14393850,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393855,"byte_end":14393881,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393886,"byte_end":14393923,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393928,"byte_end":14393933,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393938,"byte_end":14393959,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393964,"byte_end":14393969,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14393974,"byte_end":14394004,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394009,"byte_end":14394023,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394028,"byte_end":14394059,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394064,"byte_end":14394097,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394102,"byte_end":14394105,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394110,"byte_end":14394203,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394208,"byte_end":14394226,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394231,"byte_end":14394234,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394239,"byte_end":14394311,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394316,"byte_end":14394376,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394381,"byte_end":14394433,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394438,"byte_end":14394500,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394505,"byte_end":14394572,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394577,"byte_end":14394580,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394585,"byte_end":14394613,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394618,"byte_end":14394627,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394632,"byte_end":14394637,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394642,"byte_end":14394649,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394654,"byte_end":14394657,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394662,"byte_end":14394731,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394736,"byte_end":14394757,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395937,"byte_end":14395947,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394852,"byte_end":14394924,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394929,"byte_end":14394978,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394983,"byte_end":14394986,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14394991,"byte_end":14395059,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395064,"byte_end":14395131,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395136,"byte_end":14395204,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395209,"byte_end":14395285,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395290,"byte_end":14395356,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395361,"byte_end":14395364,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395369,"byte_end":14395437,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395442,"byte_end":14395517,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395522,"byte_end":14395597,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395602,"byte_end":14395674,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395679,"byte_end":14395721,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395726,"byte_end":14395729,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395734,"byte_end":14395809,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395814,"byte_end":14395892,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14395897,"byte_end":14395929,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397555,"byte_end":14397561,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396365,"byte_end":14396445,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396450,"byte_end":14396526,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396531,"byte_end":14396534,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396539,"byte_end":14396614,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396619,"byte_end":14396689,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396694,"byte_end":14396765,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396770,"byte_end":14396842,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396847,"byte_end":14396905,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396910,"byte_end":14396913,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396918,"byte_end":14396987,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14396992,"byte_end":14397067,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397072,"byte_end":14397148,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397153,"byte_end":14397175,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397180,"byte_end":14397183,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397188,"byte_end":14397261,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397266,"byte_end":14397339,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397344,"byte_end":14397420,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397425,"byte_end":14397428,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397433,"byte_end":14397469,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397474,"byte_end":14397506,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14397511,"byte_end":14397547,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397895,"byte_end":14397902,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397740,"byte_end":14397812,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397813,"byte_end":14397833,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397834,"byte_end":14397837,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397838,"byte_end":14397884,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398167,"byte_end":14398172,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397915,"byte_end":14397947,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397952,"byte_end":14397955,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14397960,"byte_end":14398037,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398042,"byte_end":14398098,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398103,"byte_end":14398106,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398111,"byte_end":14398157,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398523,"byte_end":14398529,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398196,"byte_end":14398241,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398246,"byte_end":14398249,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398254,"byte_end":14398328,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398333,"byte_end":14398413,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398418,"byte_end":14398456,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398461,"byte_end":14398464,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14398469,"byte_end":14398515,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409346,"byte_end":14409352,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1508}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411125,"byte_end":14411128,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409494,"byte_end":14409574,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409579,"byte_end":14409660,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409665,"byte_end":14409668,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409673,"byte_end":14409748,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409753,"byte_end":14409823,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409828,"byte_end":14409897,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409902,"byte_end":14409974,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409979,"byte_end":14410037,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410042,"byte_end":14410045,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410050,"byte_end":14410121,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410126,"byte_end":14410203,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410208,"byte_end":14410284,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410289,"byte_end":14410311,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410316,"byte_end":14410319,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410324,"byte_end":14410397,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410402,"byte_end":14410475,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410480,"byte_end":14410556,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410561,"byte_end":14410564,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410569,"byte_end":14410645,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410650,"byte_end":14410726,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410731,"byte_end":14410806,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410811,"byte_end":14410846,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410851,"byte_end":14410854,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410859,"byte_end":14410895,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410900,"byte_end":14410932,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410937,"byte_end":14410974,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14410979,"byte_end":14411017,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411022,"byte_end":14411113,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412736,"byte_end":14412749,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411341,"byte_end":14411421,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411426,"byte_end":14411507,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411512,"byte_end":14411561,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411566,"byte_end":14411569,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411574,"byte_end":14411649,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411654,"byte_end":14411724,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411729,"byte_end":14411798,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411803,"byte_end":14411875,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411880,"byte_end":14411938,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411943,"byte_end":14411946,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14411951,"byte_end":14412022,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412027,"byte_end":14412104,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412109,"byte_end":14412185,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412190,"byte_end":14412212,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412217,"byte_end":14412220,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412225,"byte_end":14412298,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412303,"byte_end":14412376,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412381,"byte_end":14412457,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412462,"byte_end":14412465,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412470,"byte_end":14412506,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412511,"byte_end":14412543,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412548,"byte_end":14412585,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412590,"byte_end":14412628,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14412633,"byte_end":14412724,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414852,"byte_end":14414862,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413275,"byte_end":14413355,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413360,"byte_end":14413441,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413446,"byte_end":14413449,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413454,"byte_end":14413529,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413534,"byte_end":14413604,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413609,"byte_end":14413680,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413685,"byte_end":14413757,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413762,"byte_end":14413820,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413825,"byte_end":14413828,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413833,"byte_end":14413904,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413909,"byte_end":14413986,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413991,"byte_end":14414067,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414072,"byte_end":14414094,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414099,"byte_end":14414102,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414107,"byte_end":14414186,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414191,"byte_end":14414268,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414273,"byte_end":14414276,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414281,"byte_end":14414354,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414359,"byte_end":14414432,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414437,"byte_end":14414513,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414518,"byte_end":14414521,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414526,"byte_end":14414562,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414567,"byte_end":14414599,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414604,"byte_end":14414642,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414647,"byte_end":14414685,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414690,"byte_end":14414744,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14414749,"byte_end":14414840,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415497,"byte_end":14415504,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415214,"byte_end":14415277,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415282,"byte_end":14415295,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415300,"byte_end":14415303,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415308,"byte_end":14415383,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415388,"byte_end":14415458,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415463,"byte_end":14415485,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415848,"byte_end":14415855,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415557,"byte_end":14415628,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415633,"byte_end":14415646,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415651,"byte_end":14415654,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415659,"byte_end":14415734,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415739,"byte_end":14415809,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415814,"byte_end":14415836,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416218,"byte_end":14416229,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14415920,"byte_end":14415998,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416003,"byte_end":14416016,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416021,"byte_end":14416024,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416029,"byte_end":14416104,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416109,"byte_end":14416179,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416184,"byte_end":14416206,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416576,"byte_end":14416581,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416325,"byte_end":14416383,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416388,"byte_end":14416401,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416406,"byte_end":14416409,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416414,"byte_end":14416488,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416493,"byte_end":14416564,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416893,"byte_end":14416902,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416634,"byte_end":14416700,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416705,"byte_end":14416718,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416723,"byte_end":14416726,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416731,"byte_end":14416805,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416810,"byte_end":14416881,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417022,"byte_end":14417033,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14416967,"byte_end":14417010,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417168,"byte_end":14417183,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417105,"byte_end":14417156,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417323,"byte_end":14417335,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417267,"byte_end":14417311,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417472,"byte_end":14417488,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417408,"byte_end":14417460,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417838,"byte_end":14417848,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417573,"byte_end":14417636,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417641,"byte_end":14417644,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417649,"byte_end":14417724,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417729,"byte_end":14417799,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417804,"byte_end":14417826,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418220,"byte_end":14418230,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417898,"byte_end":14417972,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14417977,"byte_end":14418018,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418023,"byte_end":14418026,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418031,"byte_end":14418106,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418111,"byte_end":14418181,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418186,"byte_end":14418208,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420204,"byte_end":14420215,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14419889,"byte_end":14419960,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14419961,"byte_end":14420033,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420034,"byte_end":14420094,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420095,"byte_end":14420098,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420099,"byte_end":14420135,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420153,"byte_end":14420192,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420301,"byte_end":14420303,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420228,"byte_end":14420292,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420335,"byte_end":14420340,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420313,"byte_end":14420326,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420405,"byte_end":14420413,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420350,"byte_end":14420396,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420500,"byte_end":14420509,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420430,"byte_end":14420491,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420742,"byte_end":14420745,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420690,"byte_end":14420730,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14421474,"byte_end":14421484,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1467}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14421735,"byte_end":14421738,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14421667,"byte_end":14421723,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422086,"byte_end":14422099,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14421970,"byte_end":14422052,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422057,"byte_end":14422074,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422813,"byte_end":14422820,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422526,"byte_end":14422589,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422594,"byte_end":14422611,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422616,"byte_end":14422619,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422624,"byte_end":14422699,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422704,"byte_end":14422774,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422779,"byte_end":14422801,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423168,"byte_end":14423175,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422873,"byte_end":14422944,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422949,"byte_end":14422966,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422971,"byte_end":14422974,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422979,"byte_end":14423054,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423059,"byte_end":14423129,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423134,"byte_end":14423156,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423542,"byte_end":14423553,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423240,"byte_end":14423318,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423323,"byte_end":14423340,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423345,"byte_end":14423348,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423353,"byte_end":14423428,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423433,"byte_end":14423503,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423508,"byte_end":14423530,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423918,"byte_end":14423928,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423649,"byte_end":14423716,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423721,"byte_end":14423724,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423729,"byte_end":14423804,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423809,"byte_end":14423879,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423884,"byte_end":14423906,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424040,"byte_end":14424047,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14423978,"byte_end":14424028,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424170,"byte_end":14424181,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424100,"byte_end":14424158,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424301,"byte_end":14424312,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424246,"byte_end":14424289,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424442,"byte_end":14424457,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424379,"byte_end":14424430,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14426558,"byte_end":14426569,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14426776,"byte_end":14426779,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14426707,"byte_end":14426764,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427337,"byte_end":14427344,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427049,"byte_end":14427112,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427117,"byte_end":14427135,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427140,"byte_end":14427143,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427148,"byte_end":14427223,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427228,"byte_end":14427298,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427303,"byte_end":14427325,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427693,"byte_end":14427700,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427397,"byte_end":14427468,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427473,"byte_end":14427491,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427496,"byte_end":14427499,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427504,"byte_end":14427579,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427584,"byte_end":14427654,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427659,"byte_end":14427681,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428068,"byte_end":14428079,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427765,"byte_end":14427843,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427848,"byte_end":14427866,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427871,"byte_end":14427874,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427879,"byte_end":14427954,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427959,"byte_end":14428029,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428034,"byte_end":14428056,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428445,"byte_end":14428455,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428175,"byte_end":14428243,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428248,"byte_end":14428251,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428256,"byte_end":14428331,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428336,"byte_end":14428406,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428411,"byte_end":14428433,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428567,"byte_end":14428574,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428505,"byte_end":14428555,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428697,"byte_end":14428708,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428627,"byte_end":14428685,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428829,"byte_end":14428841,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428773,"byte_end":14428817,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428972,"byte_end":14428988,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14428908,"byte_end":14428960,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1233},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1009},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430515,"byte_end":14430567,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430568,"byte_end":14430571,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430572,"byte_end":14430642,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430643,"byte_end":14430701,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430702,"byte_end":14430774,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430775,"byte_end":14430845,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430846,"byte_end":14430913,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430914,"byte_end":14430917,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430918,"byte_end":14430939,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430940,"byte_end":14430943,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14430944,"byte_end":14431019,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431020,"byte_end":14431091,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431092,"byte_end":14431163,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431164,"byte_end":14431234,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431235,"byte_end":14431275,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431276,"byte_end":14431279,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431280,"byte_end":14431287,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431288,"byte_end":14431331,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431332,"byte_end":14431390,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431391,"byte_end":14431394,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431395,"byte_end":14431450,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431451,"byte_end":14431493,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431494,"byte_end":14431499,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431500,"byte_end":14431552,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431553,"byte_end":14431558,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431559,"byte_end":14431581,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431582,"byte_end":14431589,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431590,"byte_end":14431593,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431594,"byte_end":14431666,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431667,"byte_end":14431738,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431739,"byte_end":14431758,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431759,"byte_end":14431762,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431763,"byte_end":14431774,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431775,"byte_end":14431824,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431825,"byte_end":14431874,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431875,"byte_end":14431924,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431925,"byte_end":14431932,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431933,"byte_end":14431936,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431937,"byte_end":14431975,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431976,"byte_end":14431979,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431980,"byte_end":14431987,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14431988,"byte_end":14432031,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432032,"byte_end":14432090,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432091,"byte_end":14432094,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432095,"byte_end":14432120,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432121,"byte_end":14432142,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432143,"byte_end":14432146,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432147,"byte_end":14432223,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432224,"byte_end":14432233,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432234,"byte_end":14432276,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432277,"byte_end":14432282,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432283,"byte_end":14432356,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432357,"byte_end":14432404,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432405,"byte_end":14432408,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432409,"byte_end":14432446,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432447,"byte_end":14432461,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432462,"byte_end":14432467,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432468,"byte_end":14432475,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432476,"byte_end":14432479,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432480,"byte_end":14432522,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432523,"byte_end":14432526,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432527,"byte_end":14432538,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432539,"byte_end":14432578,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432579,"byte_end":14432618,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432619,"byte_end":14432658,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432659,"byte_end":14432666,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432667,"byte_end":14432670,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432671,"byte_end":14432685,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432686,"byte_end":14432689,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432690,"byte_end":14432765,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432766,"byte_end":14432839,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432840,"byte_end":14432906,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432907,"byte_end":14432976,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14432977,"byte_end":14433042,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433043,"byte_end":14433046,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433047,"byte_end":14433063,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433064,"byte_end":14433067,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433068,"byte_end":14433144,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433145,"byte_end":14433186,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433187,"byte_end":14433190,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433191,"byte_end":14433198,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433199,"byte_end":14433230,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433231,"byte_end":14433281,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433282,"byte_end":14433323,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433324,"byte_end":14433359,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433360,"byte_end":14433408,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433409,"byte_end":14433440,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433441,"byte_end":14433489,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433490,"byte_end":14433539,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433540,"byte_end":14433562,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433563,"byte_end":14433570,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433571,"byte_end":14433593,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433594,"byte_end":14433601,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433602,"byte_end":14433605,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433606,"byte_end":14433654,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433655,"byte_end":14433658,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433659,"byte_end":14433670,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433671,"byte_end":14433723,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433724,"byte_end":14433789,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433790,"byte_end":14433855,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433856,"byte_end":14433921,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433922,"byte_end":14433929,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433930,"byte_end":14433933,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14433934,"byte_end":14434010,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434011,"byte_end":14434085,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434086,"byte_end":14434158,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434159,"byte_end":14434235,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434236,"byte_end":14434278,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434279,"byte_end":14434282,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434283,"byte_end":14434299,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434300,"byte_end":14434303,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434304,"byte_end":14434379,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434380,"byte_end":14434421,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434422,"byte_end":14434425,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434426,"byte_end":14434433,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434434,"byte_end":14434465,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434466,"byte_end":14434516,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434517,"byte_end":14434558,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434559,"byte_end":14434594,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434595,"byte_end":14434643,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434644,"byte_end":14434675,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434676,"byte_end":14434724,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434725,"byte_end":14434784,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434785,"byte_end":14434807,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434808,"byte_end":14434815,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434816,"byte_end":14434838,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434839,"byte_end":14434846,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434847,"byte_end":14434850,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434851,"byte_end":14434899,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434900,"byte_end":14434903,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434904,"byte_end":14434915,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434916,"byte_end":14434965,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14434966,"byte_end":14435020,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435021,"byte_end":14435075,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435076,"byte_end":14435130,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435131,"byte_end":14435138,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435139,"byte_end":14435142,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435143,"byte_end":14435216,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435217,"byte_end":14435284,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435285,"byte_end":14435288,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435289,"byte_end":14435305,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435306,"byte_end":14435309,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435310,"byte_end":14435386,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435387,"byte_end":14435459,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435460,"byte_end":14435499,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435500,"byte_end":14435503,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435504,"byte_end":14435511,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435512,"byte_end":14435543,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435544,"byte_end":14435594,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435595,"byte_end":14435636,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435637,"byte_end":14435672,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435673,"byte_end":14435721,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435722,"byte_end":14435753,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435754,"byte_end":14435801,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435802,"byte_end":14435822,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435823,"byte_end":14435845,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435846,"byte_end":14435853,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435854,"byte_end":14435876,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435877,"byte_end":14435884,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435885,"byte_end":14435888,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435889,"byte_end":14435937,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435938,"byte_end":14435941,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435942,"byte_end":14435953,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14435954,"byte_end":14436006,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436007,"byte_end":14436072,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436073,"byte_end":14436138,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436139,"byte_end":14436204,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436205,"byte_end":14436212,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436213,"byte_end":14436216,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436217,"byte_end":14436289,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436290,"byte_end":14436365,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436366,"byte_end":14436438,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436439,"byte_end":14436515,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436516,"byte_end":14436589,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436590,"byte_end":14436593,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436594,"byte_end":14436610,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436611,"byte_end":14436614,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436615,"byte_end":14436689,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436690,"byte_end":14436757,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436758,"byte_end":14436761,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436762,"byte_end":14436769,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436770,"byte_end":14436801,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436802,"byte_end":14436852,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436853,"byte_end":14436894,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436895,"byte_end":14436930,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436931,"byte_end":14436979,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14436980,"byte_end":14437011,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437012,"byte_end":14437060,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437061,"byte_end":14437081,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437082,"byte_end":14437104,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437105,"byte_end":14437112,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437113,"byte_end":14437135,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437136,"byte_end":14437143,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437144,"byte_end":14437147,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437148,"byte_end":14437196,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437197,"byte_end":14437200,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437201,"byte_end":14437212,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437213,"byte_end":14437239,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437240,"byte_end":14437285,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437286,"byte_end":14437331,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437332,"byte_end":14437377,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437378,"byte_end":14437381,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437382,"byte_end":14437410,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437411,"byte_end":14437456,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437457,"byte_end":14437502,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437503,"byte_end":14437548,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437549,"byte_end":14437556,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437557,"byte_end":14437560,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437561,"byte_end":14437633,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437634,"byte_end":14437710,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437711,"byte_end":14437781,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437782,"byte_end":14437851,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437852,"byte_end":14437889,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437890,"byte_end":14437893,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437894,"byte_end":14437968,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14437969,"byte_end":14438023,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438024,"byte_end":14438027,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438028,"byte_end":14438044,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438045,"byte_end":14438048,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438049,"byte_end":14438122,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438123,"byte_end":14438199,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438200,"byte_end":14438274,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438275,"byte_end":14438288,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438289,"byte_end":14438292,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438293,"byte_end":14438300,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438301,"byte_end":14438332,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438333,"byte_end":14438383,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438384,"byte_end":14438425,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438426,"byte_end":14438461,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438462,"byte_end":14438511,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438512,"byte_end":14438543,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438544,"byte_end":14438592,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438593,"byte_end":14438637,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438638,"byte_end":14438660,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438661,"byte_end":14438668,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438669,"byte_end":14438691,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438692,"byte_end":14438699,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438700,"byte_end":14438703,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438704,"byte_end":14438752,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438753,"byte_end":14438756,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438757,"byte_end":14438768,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438769,"byte_end":14438795,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438796,"byte_end":14438846,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438847,"byte_end":14438897,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438898,"byte_end":14438948,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438949,"byte_end":14438952,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438953,"byte_end":14438973,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14438974,"byte_end":14439004,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439005,"byte_end":14439035,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439036,"byte_end":14439066,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439067,"byte_end":14439074,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439075,"byte_end":14439078,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439079,"byte_end":14439152,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439153,"byte_end":14439228,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439229,"byte_end":14439301,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439302,"byte_end":14439340,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439341,"byte_end":14439344,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439345,"byte_end":14439419,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439420,"byte_end":14439496,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439497,"byte_end":14439570,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439571,"byte_end":14439599,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439600,"byte_end":14439603,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439604,"byte_end":14439620,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439621,"byte_end":14439624,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439625,"byte_end":14439698,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439699,"byte_end":14439775,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439776,"byte_end":14439850,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439851,"byte_end":14439923,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439924,"byte_end":14439935,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439936,"byte_end":14439939,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439940,"byte_end":14439947,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439948,"byte_end":14439979,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14439980,"byte_end":14440030,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440031,"byte_end":14440072,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440073,"byte_end":14440108,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440109,"byte_end":14440158,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440159,"byte_end":14440190,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440191,"byte_end":14440256,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440257,"byte_end":14440277,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440278,"byte_end":14440300,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440301,"byte_end":14440308,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440309,"byte_end":14440316,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440317,"byte_end":14440320,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440321,"byte_end":14440369,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440370,"byte_end":14440373,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440374,"byte_end":14440385,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440386,"byte_end":14440412,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440413,"byte_end":14440463,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440464,"byte_end":14440514,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440515,"byte_end":14440565,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440566,"byte_end":14440569,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440570,"byte_end":14440590,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440591,"byte_end":14440621,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440622,"byte_end":14440652,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440653,"byte_end":14440683,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440684,"byte_end":14440691,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440692,"byte_end":14440695,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440696,"byte_end":14440769,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440770,"byte_end":14440844,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440845,"byte_end":14440919,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440920,"byte_end":14440993,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14440994,"byte_end":14441070,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441071,"byte_end":14441104,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441105,"byte_end":14441108,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441109,"byte_end":14441125,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441126,"byte_end":14441129,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441130,"byte_end":14441204,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441205,"byte_end":14441272,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441273,"byte_end":14441276,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441277,"byte_end":14441284,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441285,"byte_end":14441316,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441317,"byte_end":14441367,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441368,"byte_end":14441409,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441410,"byte_end":14441445,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441446,"byte_end":14441494,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441495,"byte_end":14441526,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441527,"byte_end":14441574,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441575,"byte_end":14441621,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441622,"byte_end":14441644,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441645,"byte_end":14441652,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441653,"byte_end":14441675,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441676,"byte_end":14441683,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441684,"byte_end":14441687,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441688,"byte_end":14441736,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441737,"byte_end":14441740,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441741,"byte_end":14441752,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441753,"byte_end":14441809,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441810,"byte_end":14441871,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441872,"byte_end":14441933,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441934,"byte_end":14441995,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14441996,"byte_end":14442003,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442004,"byte_end":14442007,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442008,"byte_end":14442082,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442083,"byte_end":14442103,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442104,"byte_end":14442107,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442108,"byte_end":14442122,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442123,"byte_end":14442126,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442127,"byte_end":14442202,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442203,"byte_end":14442275,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442276,"byte_end":14442344,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442345,"byte_end":14442421,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442422,"byte_end":14442463,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442464,"byte_end":14442467,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442468,"byte_end":14442538,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442539,"byte_end":14442557,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442558,"byte_end":14442561,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442562,"byte_end":14442569,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442570,"byte_end":14442602,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442603,"byte_end":14442653,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442654,"byte_end":14442698,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442699,"byte_end":14442712,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442713,"byte_end":14442748,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442749,"byte_end":14442780,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442781,"byte_end":14442804,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442805,"byte_end":14442812,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442813,"byte_end":14442835,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442836,"byte_end":14442843,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442844,"byte_end":14442847,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442848,"byte_end":14442898,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442899,"byte_end":14442902,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442903,"byte_end":14442914,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442915,"byte_end":14442948,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442949,"byte_end":14442982,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14442983,"byte_end":14443016,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443017,"byte_end":14443024,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443025,"byte_end":14443028,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443029,"byte_end":14443098,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443099,"byte_end":14443136,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443137,"byte_end":14443176,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443177,"byte_end":14443222,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443223,"byte_end":14443270,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443271,"byte_end":14443301,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443302,"byte_end":14443335,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443897,"byte_end":14443904,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443579,"byte_end":14443634,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443635,"byte_end":14443638,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443639,"byte_end":14443714,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443715,"byte_end":14443795,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14443796,"byte_end":14443855,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444575,"byte_end":14444600,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444490,"byte_end":14444563,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444945,"byte_end":14444965,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444621,"byte_end":14444695,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444696,"byte_end":14444699,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444700,"byte_end":14444779,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444780,"byte_end":14444823,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444824,"byte_end":14444827,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444828,"byte_end":14444881,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444882,"byte_end":14444885,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14444886,"byte_end":14444916,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445309,"byte_end":14445312,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445218,"byte_end":14445297,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445539,"byte_end":14445546,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445436,"byte_end":14445511,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445516,"byte_end":14445527,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445768,"byte_end":14445784,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445596,"byte_end":14445637,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445642,"byte_end":14445645,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445650,"byte_end":14445723,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445728,"byte_end":14445756,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14446205,"byte_end":14446225,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445849,"byte_end":14445883,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445888,"byte_end":14445891,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445896,"byte_end":14445966,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445971,"byte_end":14446046,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14446051,"byte_end":14446123,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14446128,"byte_end":14446193,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451481,"byte_end":14451484,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14450939,"byte_end":14451014,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451019,"byte_end":14451030,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451035,"byte_end":14451038,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451043,"byte_end":14451057,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451062,"byte_end":14451065,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451070,"byte_end":14451077,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451082,"byte_end":14451113,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451118,"byte_end":14451166,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451171,"byte_end":14451174,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451179,"byte_end":14451220,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451225,"byte_end":14451260,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451265,"byte_end":14451296,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451301,"byte_end":14451332,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451337,"byte_end":14451366,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451371,"byte_end":14451391,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451396,"byte_end":14451418,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451423,"byte_end":14451430,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451435,"byte_end":14451457,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14451462,"byte_end":14451469,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452669,"byte_end":14452679,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452148,"byte_end":14452197,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452202,"byte_end":14452205,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452210,"byte_end":14452242,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452247,"byte_end":14452250,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452255,"byte_end":14452323,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452328,"byte_end":14452331,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452336,"byte_end":14452350,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452355,"byte_end":14452358,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452363,"byte_end":14452370,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452375,"byte_end":14452406,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452411,"byte_end":14452459,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452464,"byte_end":14452467,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452472,"byte_end":14452513,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452518,"byte_end":14452553,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452558,"byte_end":14452579,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452584,"byte_end":14452606,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452611,"byte_end":14452618,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452623,"byte_end":14452645,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452650,"byte_end":14452657,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453311,"byte_end":14453324,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452778,"byte_end":14452830,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452835,"byte_end":14452838,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452843,"byte_end":14452881,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452886,"byte_end":14452889,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452894,"byte_end":14452962,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452967,"byte_end":14452970,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452975,"byte_end":14452989,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14452994,"byte_end":14452997,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453002,"byte_end":14453009,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453014,"byte_end":14453045,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453050,"byte_end":14453098,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453103,"byte_end":14453106,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453111,"byte_end":14453152,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453157,"byte_end":14453192,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453197,"byte_end":14453221,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453226,"byte_end":14453248,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453253,"byte_end":14453260,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453265,"byte_end":14453287,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453292,"byte_end":14453299,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453957,"byte_end":14453970,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453424,"byte_end":14453476,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453481,"byte_end":14453484,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453489,"byte_end":14453527,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453532,"byte_end":14453535,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453540,"byte_end":14453608,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453613,"byte_end":14453616,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453621,"byte_end":14453635,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453640,"byte_end":14453643,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453648,"byte_end":14453655,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453660,"byte_end":14453691,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453696,"byte_end":14453744,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453749,"byte_end":14453752,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453757,"byte_end":14453798,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453803,"byte_end":14453838,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453843,"byte_end":14453867,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453872,"byte_end":14453894,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453899,"byte_end":14453906,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453911,"byte_end":14453933,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14453938,"byte_end":14453945,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455051,"byte_end":14455067,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454139,"byte_end":14454168,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454173,"byte_end":14454176,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454181,"byte_end":14454253,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454258,"byte_end":14454283,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454288,"byte_end":14454291,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454296,"byte_end":14454368,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454373,"byte_end":14454442,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454447,"byte_end":14454520,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454525,"byte_end":14454537,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454542,"byte_end":14454545,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454550,"byte_end":14454625,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454630,"byte_end":14454691,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454696,"byte_end":14454699,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454704,"byte_end":14454718,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454723,"byte_end":14454726,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454731,"byte_end":14454738,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454743,"byte_end":14454774,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454779,"byte_end":14454827,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454832,"byte_end":14454835,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454840,"byte_end":14454881,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454886,"byte_end":14454921,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454926,"byte_end":14454961,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454966,"byte_end":14454988,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14454993,"byte_end":14455000,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455005,"byte_end":14455027,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455032,"byte_end":14455039,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455728,"byte_end":14455747,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455164,"byte_end":14455227,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455232,"byte_end":14455235,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455240,"byte_end":14455291,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455296,"byte_end":14455299,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455304,"byte_end":14455372,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455377,"byte_end":14455380,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455385,"byte_end":14455399,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455404,"byte_end":14455407,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455412,"byte_end":14455419,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455424,"byte_end":14455455,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455460,"byte_end":14455508,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455513,"byte_end":14455516,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455521,"byte_end":14455562,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455567,"byte_end":14455602,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455607,"byte_end":14455638,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455643,"byte_end":14455665,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455670,"byte_end":14455677,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455682,"byte_end":14455704,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455709,"byte_end":14455716,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456406,"byte_end":14456425,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455916,"byte_end":14455982,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455987,"byte_end":14455990,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14455995,"byte_end":14456050,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456055,"byte_end":14456058,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456063,"byte_end":14456077,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456082,"byte_end":14456085,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456090,"byte_end":14456097,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456102,"byte_end":14456133,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456138,"byte_end":14456186,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456191,"byte_end":14456194,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456199,"byte_end":14456240,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456245,"byte_end":14456280,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456285,"byte_end":14456316,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456321,"byte_end":14456343,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456348,"byte_end":14456355,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456360,"byte_end":14456382,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456387,"byte_end":14456394,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456979,"byte_end":14456996,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456528,"byte_end":14456601,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456606,"byte_end":14456624,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456629,"byte_end":14456632,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456637,"byte_end":14456651,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456656,"byte_end":14456659,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456664,"byte_end":14456671,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456676,"byte_end":14456707,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456712,"byte_end":14456760,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456765,"byte_end":14456768,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456773,"byte_end":14456814,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456819,"byte_end":14456854,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456859,"byte_end":14456889,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456894,"byte_end":14456916,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456921,"byte_end":14456928,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456933,"byte_end":14456955,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14456960,"byte_end":14456967,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457646,"byte_end":14457654,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457097,"byte_end":14457160,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457165,"byte_end":14457168,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457173,"byte_end":14457234,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457239,"byte_end":14457242,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457247,"byte_end":14457301,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457306,"byte_end":14457309,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457314,"byte_end":14457328,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457333,"byte_end":14457336,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457341,"byte_end":14457348,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457353,"byte_end":14457384,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457389,"byte_end":14457437,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457442,"byte_end":14457445,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457450,"byte_end":14457491,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457496,"byte_end":14457531,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457536,"byte_end":14457556,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457561,"byte_end":14457583,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457588,"byte_end":14457595,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457600,"byte_end":14457622,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457627,"byte_end":14457634,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458174,"byte_end":14458183,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457752,"byte_end":14457815,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457820,"byte_end":14457823,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457828,"byte_end":14457842,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457847,"byte_end":14457850,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457855,"byte_end":14457862,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457867,"byte_end":14457915,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457920,"byte_end":14457941,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457946,"byte_end":14457981,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14457986,"byte_end":14458017,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458022,"byte_end":14458053,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458058,"byte_end":14458087,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458092,"byte_end":14458112,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458117,"byte_end":14458138,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458143,"byte_end":14458150,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458155,"byte_end":14458162,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458839,"byte_end":14458847,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458335,"byte_end":14458388,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458393,"byte_end":14458396,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458401,"byte_end":14458415,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458420,"byte_end":14458423,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458428,"byte_end":14458435,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458440,"byte_end":14458471,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458476,"byte_end":14458524,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458529,"byte_end":14458532,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458537,"byte_end":14458578,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458583,"byte_end":14458618,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458623,"byte_end":14458654,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458659,"byte_end":14458690,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458695,"byte_end":14458724,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458729,"byte_end":14458749,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458754,"byte_end":14458776,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458781,"byte_end":14458788,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458793,"byte_end":14458815,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14458820,"byte_end":14458827,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459420,"byte_end":14459429,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459011,"byte_end":14459065,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459070,"byte_end":14459073,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459078,"byte_end":14459092,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459097,"byte_end":14459100,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459105,"byte_end":14459112,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459117,"byte_end":14459149,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459154,"byte_end":14459204,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459209,"byte_end":14459253,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459258,"byte_end":14459293,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459298,"byte_end":14459329,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459334,"byte_end":14459357,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459362,"byte_end":14459369,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459374,"byte_end":14459396,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459401,"byte_end":14459408,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460038,"byte_end":14460048,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459590,"byte_end":14459639,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459644,"byte_end":14459647,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459652,"byte_end":14459666,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459671,"byte_end":14459674,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459679,"byte_end":14459686,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459691,"byte_end":14459736,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459741,"byte_end":14459791,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459796,"byte_end":14459852,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459857,"byte_end":14459870,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459875,"byte_end":14459910,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459915,"byte_end":14459946,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459951,"byte_end":14459975,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459980,"byte_end":14459987,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14459992,"byte_end":14460014,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460019,"byte_end":14460026,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14461427,"byte_end":14461437,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14461184,"byte_end":14461271,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14461272,"byte_end":14461275,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14461276,"byte_end":14461314,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14461315,"byte_end":14461353,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462537,"byte_end":14462540,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462118,"byte_end":14462178,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462183,"byte_end":14462186,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462191,"byte_end":14462201,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462206,"byte_end":14462209,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462214,"byte_end":14462286,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462291,"byte_end":14462364,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462369,"byte_end":14462436,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462441,"byte_end":14462444,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462449,"byte_end":14462525,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463671,"byte_end":14463690,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462698,"byte_end":14462758,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462763,"byte_end":14462766,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462771,"byte_end":14462834,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462839,"byte_end":14462917,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462922,"byte_end":14462989,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462994,"byte_end":14463066,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463071,"byte_end":14463141,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463146,"byte_end":14463169,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463174,"byte_end":14463177,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463182,"byte_end":14463192,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463197,"byte_end":14463200,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463205,"byte_end":14463280,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463285,"byte_end":14463358,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463363,"byte_end":14463439,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463444,"byte_end":14463517,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463522,"byte_end":14463592,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463597,"byte_end":14463600,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463605,"byte_end":14463659,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464256,"byte_end":14464266,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463818,"byte_end":14463868,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463873,"byte_end":14463876,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463881,"byte_end":14463888,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463893,"byte_end":14463912,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463917,"byte_end":14463955,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463960,"byte_end":14463963,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14463968,"byte_end":14464002,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464007,"byte_end":14464054,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464059,"byte_end":14464066,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464071,"byte_end":14464078,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464083,"byte_end":14464121,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464126,"byte_end":14464129,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464134,"byte_end":14464187,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464192,"byte_end":14464232,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464237,"byte_end":14464244,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468592,"byte_end":14468613,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468546,"byte_end":14468587,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468649,"byte_end":14468651,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468619,"byte_end":14468644,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468524,"byte_end":14468539,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468441,"byte_end":14468497,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470573,"byte_end":14470590,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469387,"byte_end":14469528,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469529,"byte_end":14469532,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469533,"byte_end":14469571,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469572,"byte_end":14469610,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469611,"byte_end":14469614,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469615,"byte_end":14469628,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469629,"byte_end":14469696,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469697,"byte_end":14469700,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469701,"byte_end":14469734,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469735,"byte_end":14469764,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469765,"byte_end":14469768,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469769,"byte_end":14469776,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469777,"byte_end":14469833,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469834,"byte_end":14469868,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469869,"byte_end":14469872,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469873,"byte_end":14469878,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469879,"byte_end":14469926,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469927,"byte_end":14469980,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14469981,"byte_end":14470058,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470059,"byte_end":14470094,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470095,"byte_end":14470116,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470117,"byte_end":14470167,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470168,"byte_end":14470231,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470232,"byte_end":14470295,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470296,"byte_end":14470359,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470360,"byte_end":14470416,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470417,"byte_end":14470466,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470467,"byte_end":14470479,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470480,"byte_end":14470487,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470488,"byte_end":14470495,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14470496,"byte_end":14470499,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471925,"byte_end":14471928,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471483,"byte_end":14471551,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471556,"byte_end":14471559,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471564,"byte_end":14471574,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471579,"byte_end":14471582,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471587,"byte_end":14471666,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471671,"byte_end":14471745,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471750,"byte_end":14471817,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471822,"byte_end":14471825,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471830,"byte_end":14471913,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473239,"byte_end":14473258,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472208,"byte_end":14472276,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472281,"byte_end":14472284,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472289,"byte_end":14472359,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472364,"byte_end":14472450,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472455,"byte_end":14472525,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472530,"byte_end":14472607,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472612,"byte_end":14472682,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472687,"byte_end":14472710,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472715,"byte_end":14472718,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472723,"byte_end":14472733,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472738,"byte_end":14472741,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472746,"byte_end":14472828,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472833,"byte_end":14472906,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472911,"byte_end":14472988,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14472993,"byte_end":14473066,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473071,"byte_end":14473146,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473151,"byte_end":14473154,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473159,"byte_end":14473227,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14474046,"byte_end":14474056,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473515,"byte_end":14473566,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473571,"byte_end":14473574,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473579,"byte_end":14473586,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473591,"byte_end":14473610,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473615,"byte_end":14473660,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473665,"byte_end":14473668,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473673,"byte_end":14473745,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473750,"byte_end":14473797,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473802,"byte_end":14473809,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473814,"byte_end":14473821,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473826,"byte_end":14473871,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473876,"byte_end":14473879,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473884,"byte_end":14473977,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14473982,"byte_end":14474022,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14474027,"byte_end":14474034,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478152,"byte_end":14478174,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478105,"byte_end":14478147,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478210,"byte_end":14478212,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478180,"byte_end":14478205,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478076,"byte_end":14478098,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14477992,"byte_end":14478049,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6625,"byte_end":6655,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40554,"byte_end":40563,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40377,"byte_end":40441,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40442,"byte_end":40525,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40826,"byte_end":40832,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40639,"byte_end":40713,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40718,"byte_end":40788,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40793,"byte_end":40814,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8652,"byte_end":8669,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7434,"byte_end":7511,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7512,"byte_end":7522,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7523,"byte_end":7526,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7527,"byte_end":7592,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7593,"byte_end":7667,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7668,"byte_end":7671,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7672,"byte_end":7755,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7756,"byte_end":7759,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7760,"byte_end":7774,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7775,"byte_end":7778,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7779,"byte_end":7792,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7793,"byte_end":7815,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7816,"byte_end":7856,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7857,"byte_end":7860,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7861,"byte_end":7879,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7880,"byte_end":7901,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7902,"byte_end":7947,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7948,"byte_end":7989,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7990,"byte_end":7993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7994,"byte_end":8045,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8109,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8131,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8181,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8182,"byte_end":8228,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8250,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8251,"byte_end":8268,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8350,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8351,"byte_end":8373,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8374,"byte_end":8391,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8392,"byte_end":8405,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8406,"byte_end":8417,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8418,"byte_end":8421,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8422,"byte_end":8455,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8456,"byte_end":8531,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8532,"byte_end":8559,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8560,"byte_end":8571,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8572,"byte_end":8575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8576,"byte_end":8626,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8632,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8633,"byte_end":8640,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9089,"byte_end":9114,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8936,"byte_end":9010,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9011,"byte_end":9028,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9029,"byte_end":9077,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11622,"byte_end":11625,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11547,"byte_end":11610,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13678,"byte_end":13689,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12415,"byte_end":12486,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12491,"byte_end":12524,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12529,"byte_end":12532,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12537,"byte_end":12608,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12645,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12650,"byte_end":12653,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12672,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12677,"byte_end":12680,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12685,"byte_end":12698,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12725,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12730,"byte_end":12770,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12775,"byte_end":12778,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12783,"byte_end":12801,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12806,"byte_end":12827,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12832,"byte_end":12877,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12882,"byte_end":12928,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12933,"byte_end":12936,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12941,"byte_end":12992,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12997,"byte_end":13060,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13065,"byte_end":13086,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13091,"byte_end":13139,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13144,"byte_end":13190,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13195,"byte_end":13216,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13221,"byte_end":13238,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13243,"byte_end":13324,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13329,"byte_end":13351,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13356,"byte_end":13373,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13378,"byte_end":13391,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13396,"byte_end":13407,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13412,"byte_end":13415,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13420,"byte_end":13453,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13458,"byte_end":13533,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13538,"byte_end":13565,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13570,"byte_end":13581,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13586,"byte_end":13589,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13594,"byte_end":13644,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13654,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13659,"byte_end":13666,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16264,"byte_end":16270,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16075,"byte_end":16147,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16152,"byte_end":16172,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16177,"byte_end":16180,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16185,"byte_end":16252,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16398,"byte_end":16410,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16322,"byte_end":16386,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16561,"byte_end":16570,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16475,"byte_end":16549,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16972,"byte_end":16982,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16809,"byte_end":16850,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16855,"byte_end":16858,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16863,"byte_end":16935,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16940,"byte_end":16960,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71142,"byte_end":71152,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71004,"byte_end":71061,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71062,"byte_end":71065,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71066,"byte_end":71113,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71875,"byte_end":71878,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71833,"byte_end":71863,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72593,"byte_end":72603,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72081,"byte_end":72110,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72115,"byte_end":72118,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72123,"byte_end":72199,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72204,"byte_end":72273,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72278,"byte_end":72296,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72301,"byte_end":72304,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72309,"byte_end":72380,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72385,"byte_end":72458,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72463,"byte_end":72537,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72542,"byte_end":72581,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74124,"byte_end":74138,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73027,"byte_end":73108,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73113,"byte_end":73159,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73164,"byte_end":73167,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73172,"byte_end":73220,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73225,"byte_end":73228,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73233,"byte_end":73317,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73322,"byte_end":73381,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73386,"byte_end":73471,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73476,"byte_end":73495,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73500,"byte_end":73579,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73584,"byte_end":73587,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73592,"byte_end":73667,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73672,"byte_end":73748,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73753,"byte_end":73808,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73813,"byte_end":73887,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73892,"byte_end":73965,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73970,"byte_end":74004,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74009,"byte_end":74012,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74017,"byte_end":74093,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74098,"byte_end":74112,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74772,"byte_end":74780,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74524,"byte_end":74589,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74594,"byte_end":74597,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74602,"byte_end":74675,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74680,"byte_end":74690,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74695,"byte_end":74698,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74703,"byte_end":74760,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74892,"byte_end":74901,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74834,"byte_end":74880,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75242,"byte_end":75253,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75043,"byte_end":75077,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75082,"byte_end":75085,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75090,"byte_end":75163,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75168,"byte_end":75230,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75558,"byte_end":75567,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75358,"byte_end":75393,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75398,"byte_end":75401,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75406,"byte_end":75479,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75484,"byte_end":75546,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76267,"byte_end":76284,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75718,"byte_end":75787,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75792,"byte_end":75795,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75800,"byte_end":75870,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75875,"byte_end":75948,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75953,"byte_end":75999,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76004,"byte_end":76007,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76012,"byte_end":76087,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76092,"byte_end":76166,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76171,"byte_end":76197,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76202,"byte_end":76205,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76210,"byte_end":76255,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76450,"byte_end":76460,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76337,"byte_end":76384,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76389,"byte_end":76392,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76397,"byte_end":76438,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78972,"byte_end":78985,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78841,"byte_end":78914,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78915,"byte_end":78918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78919,"byte_end":78960,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79179,"byte_end":79182,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79134,"byte_end":79167,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79346,"byte_end":79351,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79309,"byte_end":79334,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79457,"byte_end":79468,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79403,"byte_end":79445,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79583,"byte_end":79593,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79538,"byte_end":79571,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80327,"byte_end":80339,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79654,"byte_end":79702,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79707,"byte_end":79710,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79715,"byte_end":79756,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79761,"byte_end":79764,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79769,"byte_end":79831,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79896,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79901,"byte_end":79961,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79966,"byte_end":79969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79974,"byte_end":80049,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80054,"byte_end":80122,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80127,"byte_end":80203,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80208,"byte_end":80276,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80281,"byte_end":80315,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81767,"byte_end":81784,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81483,"byte_end":81535,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81540,"byte_end":81543,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81548,"byte_end":81624,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81629,"byte_end":81663,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81668,"byte_end":81671,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81676,"byte_end":81755,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82244,"byte_end":82255,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81857,"byte_end":81899,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81904,"byte_end":81907,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81912,"byte_end":81985,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81990,"byte_end":82030,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82035,"byte_end":82038,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82043,"byte_end":82113,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82118,"byte_end":82152,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82232,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83398,"byte_end":83415,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83198,"byte_end":83255,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83256,"byte_end":83259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83260,"byte_end":83327,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83328,"byte_end":83386,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83593,"byte_end":83596,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83510,"byte_end":83581,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84177,"byte_end":84180,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83962,"byte_end":84014,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84019,"byte_end":84022,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84027,"byte_end":84099,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84104,"byte_end":84165,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84623,"byte_end":84630,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84382,"byte_end":84434,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84439,"byte_end":84442,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84447,"byte_end":84520,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84525,"byte_end":84595,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84600,"byte_end":84611,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86470,"byte_end":86477,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86406,"byte_end":86458,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86763,"byte_end":86767,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86708,"byte_end":86751,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1406},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":87880,"byte_end":87915,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89862,"byte_end":89866,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89875,"byte_end":89880,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89843,"byte_end":89849,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1412}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88092,"byte_end":88198,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88199,"byte_end":88202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88203,"byte_end":88293,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88294,"byte_end":88297,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88298,"byte_end":88333,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88334,"byte_end":88337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88338,"byte_end":88351,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88352,"byte_end":88355,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88356,"byte_end":88393,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88394,"byte_end":88397,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88398,"byte_end":88417,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88418,"byte_end":88460,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88461,"byte_end":88511,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88512,"byte_end":88563,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88564,"byte_end":88582,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88583,"byte_end":88604,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88605,"byte_end":88647,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88648,"byte_end":88681,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88682,"byte_end":88698,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88699,"byte_end":88793,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88794,"byte_end":88804,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88805,"byte_end":88808,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88809,"byte_end":88856,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88857,"byte_end":88862,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88863,"byte_end":88870,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88871,"byte_end":88874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89075,"byte_end":89078,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89079,"byte_end":89165,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89166,"byte_end":89176,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89177,"byte_end":89180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89181,"byte_end":89188,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89189,"byte_end":89224,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89225,"byte_end":89267,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89268,"byte_end":89318,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89319,"byte_end":89370,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89371,"byte_end":89374,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89375,"byte_end":89393,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89394,"byte_end":89415,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89416,"byte_end":89458,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89459,"byte_end":89506,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89507,"byte_end":89523,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89524,"byte_end":89573,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89574,"byte_end":89584,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89585,"byte_end":89588,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89589,"byte_end":89622,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89623,"byte_end":89663,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89664,"byte_end":89696,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89697,"byte_end":89702,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89703,"byte_end":89710,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89711,"byte_end":89733,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388905,"byte_end":14388915,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14389066,"byte_end":14389076,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14389403,"byte_end":14389413,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14399592,"byte_end":14399601,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14399801,"byte_end":14399811,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14399962,"byte_end":14399971,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400294,"byte_end":14400304,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400550,"byte_end":14400558,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400655,"byte_end":14400663,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400774,"byte_end":14400782,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400882,"byte_end":14400890,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14401000,"byte_end":14401010,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14406592,"byte_end":14406602,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409438,"byte_end":14409444,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413256,"byte_end":14413262,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418577,"byte_end":14418583,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418899,"byte_end":14418905,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14419620,"byte_end":14419626,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420666,"byte_end":14420677,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14421604,"byte_end":14421614,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422503,"byte_end":14422513,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424610,"byte_end":14424620,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424933,"byte_end":14424943,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14425669,"byte_end":14425679,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14426658,"byte_end":14426669,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427025,"byte_end":14427036,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14429145,"byte_end":14429156,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14429920,"byte_end":14429931,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14430172,"byte_end":14430183,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445191,"byte_end":14445211,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14448545,"byte_end":14448565,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14449451,"byte_end":14449471,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14450812,"byte_end":14450832,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14450925,"byte_end":14450932,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460531,"byte_end":14460538,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460664,"byte_end":14460689,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460847,"byte_end":14460872,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14461007,"byte_end":14461032,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462101,"byte_end":14462111,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464653,"byte_end":14464663,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468039,"byte_end":14468049,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468372,"byte_end":14468382,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468689,"byte_end":14468704,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468986,"byte_end":14469001,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14469118,"byte_end":14469133,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471459,"byte_end":14471476,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14474125,"byte_end":14474142,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14477434,"byte_end":14477451,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14477815,"byte_end":14477832,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478250,"byte_end":14478272,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478601,"byte_end":14478623,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478754,"byte_end":14478776,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14387317,"byte_end":14387333,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14388905,"byte_end":14388915,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14389066,"byte_end":14389076,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14389403,"byte_end":14389413,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14399592,"byte_end":14399601,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14399801,"byte_end":14399811,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14399962,"byte_end":14399971,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400294,"byte_end":14400304,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400550,"byte_end":14400558,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400655,"byte_end":14400663,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2591}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400774,"byte_end":14400782,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14400882,"byte_end":14400890,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2591}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14401000,"byte_end":14401010,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1555},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14406592,"byte_end":14406602,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1555},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14409438,"byte_end":14409444,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14413256,"byte_end":14413262,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418577,"byte_end":14418583,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1505},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14418899,"byte_end":14418905,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1505},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14419620,"byte_end":14419626,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14420666,"byte_end":14420677,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14421604,"byte_end":14421614,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14422503,"byte_end":14422513,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424610,"byte_end":14424620,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1464},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14424933,"byte_end":14424943,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1464},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14425669,"byte_end":14425679,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14426658,"byte_end":14426669,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14427025,"byte_end":14427036,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14429145,"byte_end":14429156,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1423},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14429920,"byte_end":14429931,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1423},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14430172,"byte_end":14430183,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14445191,"byte_end":14445211,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14448545,"byte_end":14448565,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14449451,"byte_end":14449471,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14450812,"byte_end":14450832,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14450925,"byte_end":14450932,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460531,"byte_end":14460538,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460664,"byte_end":14460689,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14460847,"byte_end":14460872,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14461007,"byte_end":14461032,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14462101,"byte_end":14462111,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14464653,"byte_end":14464663,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468039,"byte_end":14468049,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468372,"byte_end":14468382,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468689,"byte_end":14468704,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14468986,"byte_end":14469001,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14469118,"byte_end":14469133,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14471459,"byte_end":14471476,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14474125,"byte_end":14474142,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14477434,"byte_end":14477451,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14477815,"byte_end":14477832,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478250,"byte_end":14478272,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478601,"byte_end":14478623,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14478754,"byte_end":14478776,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1398},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":12562}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1406},"to":{"krate":20,"index":227}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1406},"to":{"krate":20,"index":185}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1406},"to":{"krate":20,"index":266}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1406},"to":{"krate":20,"index":306}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1406},"to":{"krate":18,"index":96}}]}