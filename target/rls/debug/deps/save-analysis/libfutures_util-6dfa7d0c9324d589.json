{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17","program":"/home/kroos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=6dfa7d0c9324d589","-C","extra-filename=-6dfa7d0c9324d589","--out-dir","/home/kroos/matic/da-light-client/target/rls/debug/deps","-L","dependency=/home/kroos/matic/da-light-client/target/rls/debug/deps","--extern","futures_core=/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_core-65cfe993150441d8.rmeta","--extern","futures_macro=/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_macro-55b247466114b4fa.so","--extern","futures_sink=/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_sink-5b3dc88208f6b9c3.rmeta","--extern","futures_task=/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_task-9da2086fe931c10e.rmeta","--extern","pin_project_lite=/home/kroos/matic/da-light-client/target/rls/debug/deps/libpin_project_lite-91fe008bf6d90681.rmeta","--extern","pin_utils=/home/kroos/matic/da-light-client/target/rls/debug/deps/libpin_utils-a1fed8cc3029f160.rmeta","--extern","proc_macro_hack=/home/kroos/matic/da-light-client/target/rls/debug/deps/libproc_macro_hack-1adbbec1434a7ea7.so","--extern","proc_macro_nested=/home/kroos/matic/da-light-client/target/rls/debug/deps/libproc_macro_nested-e2c37547beeea45f.rmeta","--extern","slab=/home/kroos/matic/da-light-client/target/rls/debug/deps/libslab-b5cd62de535550e9.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","/home/kroos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_util-6dfa7d0c9324d589.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[10979688633137899949,0]},"crate_root":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src","external_crates":[{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12183244430281887400,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[8357241026203332200,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12366212805520858122,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16942624007396114565,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9146905573849924534,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3984974423095474310,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17062249482329071005,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9650074992516280531,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11294981568525771845,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2937232846550133502,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[916118139006228645,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10588692737450637690,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[6136648393888539129,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12981437011810194475,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[148412131477461657,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9709332217955803794,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10989117992165357727,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2143393700537892828,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[11382580725447476280,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[12492735441175144551,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[11855966680436449968,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/join_mod.rs","num":22,"id":{"name":"futures_macro","disambiguator":[6850945899974292739,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","num":23,"id":{"name":"futures_task","disambiguator":[17100291366016659976,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","num":24,"id":{"name":"futures_sink","disambiguator":[7263832051999693957,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[14294970681396424519,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","num":26,"id":{"name":"slab","disambiguator":[2405148780402418649,0]}}],"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":0,"byte_end":11997,"line_start":1,"line_end":346,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1126,"byte_end":1131,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1152,"byte_end":1159,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1298,"byte_end":1299,"line_start":41,"line_end":41,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1407,"byte_end":1408,"line_start":47,"line_end":47,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43182},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1446,"byte_end":1452,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43184},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1461,"byte_end":1465,"line_start":49,"line_end":49,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43185},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1461,"byte_end":1465,"line_start":49,"line_end":49,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43186},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1467,"byte_end":1471,"line_start":49,"line_end":49,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43187},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1467,"byte_end":1471,"line_start":49,"line_end":49,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43300},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1487,"byte_end":1490,"line_start":50,"line_end":50,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43314},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1517,"byte_end":1520,"line_start":51,"line_end":51,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43315},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1517,"byte_end":1520,"line_start":51,"line_end":51,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43311},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1522,"byte_end":1524,"line_start":51,"line_end":51,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":43312},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1522,"byte_end":1524,"line_start":51,"line_end":51,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1597,"byte_end":1598,"line_start":55,"line_end":55,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":2,"index":12560},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37101,"byte_end":37107,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37167,"byte_end":37176,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37178,"byte_end":37192,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37226,"byte_end":37237,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37239,"byte_end":37248,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37274,"byte_end":37283,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37285,"byte_end":37299,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37301,"byte_end":37316,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8897},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43114,"byte_end":43125,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":193}},{"kind":"Use","ref_id":{"krate":0,"index":8387},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37431,"byte_end":37438,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8301},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37440,"byte_end":37444,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37446,"byte_end":37455,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8738},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37457,"byte_end":37464,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8553},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37466,"byte_end":37476,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8493},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37478,"byte_end":37481,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8603},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37483,"byte_end":37490,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8798},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37492,"byte_end":37502,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8665},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37504,"byte_end":37508,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8846},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37510,"byte_end":37519,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8435},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37615,"byte_end":37628,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8897},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37677,"byte_end":37688,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37888,"byte_end":37894,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37896,"byte_end":37906,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9312},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37958,"byte_end":37965,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9459},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37967,"byte_end":37974,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9642},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37976,"byte_end":37986,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9581},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37988,"byte_end":37997,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8933},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":37999,"byte_end":38009,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38011,"byte_end":38017,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9703},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38019,"byte_end":38024,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9826},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38026,"byte_end":38037,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9520},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38039,"byte_end":38045,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9386},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38051,"byte_end":38057,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9061},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38059,"byte_end":38069,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9182},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38071,"byte_end":38087,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38089,"byte_end":38101,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9899},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38103,"byte_end":38115,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9240},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38220,"byte_end":38231,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38287,"byte_end":38291,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9957},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38293,"byte_end":38297,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38338,"byte_end":38345,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9963},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38347,"byte_end":38354,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38401,"byte_end":38411,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9969},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38413,"byte_end":38422,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38477,"byte_end":38491,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9982},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38493,"byte_end":38505,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10000},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38543,"byte_end":38555,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38595,"byte_end":38602,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38604,"byte_end":38610,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38665,"byte_end":38679,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10039},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38681,"byte_end":38694,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38731,"byte_end":38734,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38736,"byte_end":38738,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38740,"byte_end":38745,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10073},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38747,"byte_end":38752,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38787,"byte_end":38791,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38793,"byte_end":38798,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38800,"byte_end":38805,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1386},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38807,"byte_end":38812,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10175},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38814,"byte_end":38818,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10220},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38820,"byte_end":38825,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10277},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38827,"byte_end":38832,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10346},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38834,"byte_end":38839,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38934,"byte_end":38942,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38944,"byte_end":38951,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38990,"byte_end":38996,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10427},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":38998,"byte_end":39004,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39103,"byte_end":39113,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10435},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39115,"byte_end":39124,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39172,"byte_end":39180,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1638},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39182,"byte_end":39191,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39193,"byte_end":39202,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39204,"byte_end":39213,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10511},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39215,"byte_end":39222,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10556},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39224,"byte_end":39232,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10613},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39234,"byte_end":39242,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10682},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39244,"byte_end":39252,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1736},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39357,"byte_end":39369,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39371,"byte_end":39381,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1782},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39428,"byte_end":39438,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10763},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39440,"byte_end":39449,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39546,"byte_end":39555,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10771},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39557,"byte_end":39565,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10777},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39603,"byte_end":39609,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15474},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39776,"byte_end":39787,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15470},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39789,"byte_end":39806,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15432},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39808,"byte_end":39817,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15485},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39819,"byte_end":39826,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15486},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39819,"byte_end":39826,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":39909,"byte_end":39918,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":2,"index":12560},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11098,"byte_end":11104,"line_start":305,"line_end":305,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11106,"byte_end":11115,"line_start":305,"line_end":305,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11117,"byte_end":11126,"line_start":305,"line_end":305,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11128,"byte_end":11140,"line_start":305,"line_end":305,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172668,"byte_end":172677,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172679,"byte_end":172693,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172727,"byte_end":172738,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172740,"byte_end":172746,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172748,"byte_end":172757,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12659},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":181335,"byte_end":181341,"line_start":168,"line_end":168,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12711},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":181518,"byte_end":181529,"line_start":174,"line_end":174,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13011},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183027,"byte_end":183038,"line_start":220,"line_end":220,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":10801},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172873,"byte_end":172878,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":10850},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172880,"byte_end":172887,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":10959},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172889,"byte_end":172895,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":10999},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172897,"byte_end":172902,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11039},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172904,"byte_end":172913,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11082},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172915,"byte_end":172921,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11151},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172923,"byte_end":172932,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11896},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172934,"byte_end":172941,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11275},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172943,"byte_end":172950,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11336},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172952,"byte_end":172956,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11650},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172958,"byte_end":172965,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11712},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172971,"byte_end":172975,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172977,"byte_end":172984,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11839},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172986,"byte_end":172989,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11985},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172991,"byte_end":172995,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12131},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172997,"byte_end":173003,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12180},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173005,"byte_end":173013,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12049},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173015,"byte_end":173019,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12090},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173021,"byte_end":173028,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12006},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173030,"byte_end":173038,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12758},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173040,"byte_end":173044,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11993},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173046,"byte_end":173060,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12234},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173066,"byte_end":173070,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12277},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173072,"byte_end":173081,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4087},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173083,"byte_end":173092,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11755},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173094,"byte_end":173106,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12355},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173108,"byte_end":173112,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12471},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173114,"byte_end":173123,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12398},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173125,"byte_end":173134,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12532},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173136,"byte_end":173140,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":10901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173142,"byte_end":173147,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12604},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173149,"byte_end":173152,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13011},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173204,"byte_end":173215,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12659},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173266,"byte_end":173272,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12711},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173323,"byte_end":173334,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11592},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173432,"byte_end":173439,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12831},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173526,"byte_end":173541,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12880},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173543,"byte_end":173551,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12929},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173553,"byte_end":173570,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4008},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173731,"byte_end":173743,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4009},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173731,"byte_end":173743,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12997},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173745,"byte_end":173754,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12990},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173756,"byte_end":173767,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5088},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173819,"byte_end":173829,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13050},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173831,"byte_end":173838,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13118},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173840,"byte_end":173847,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13274},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173849,"byte_end":173859,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13196},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173861,"byte_end":173870,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13354},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173872,"byte_end":173882,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13474},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173884,"byte_end":173890,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13396},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173892,"byte_end":173897,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13549},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173899,"byte_end":173905,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13868},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173911,"byte_end":173921,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13915},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173923,"byte_end":173932,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13679},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173934,"byte_end":173943,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13748},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173945,"byte_end":173957,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13818},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173959,"byte_end":173969,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14023},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173971,"byte_end":173978,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13622},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173980,"byte_end":173990,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13614},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":173992,"byte_end":173999,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14149},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174005,"byte_end":174017,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5439},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174019,"byte_end":174031,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14222},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174033,"byte_end":174045,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14092},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174047,"byte_end":174056,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14300},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174285,"byte_end":174303,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14352},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174305,"byte_end":174316,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14399},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174318,"byte_end":174338,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13955},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174395,"byte_end":174404,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14002},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174406,"byte_end":174420,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14003},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174406,"byte_end":174420,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5592},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174477,"byte_end":174481,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14460},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174483,"byte_end":174487,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5627},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174526,"byte_end":174532,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14469},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174534,"byte_end":174540,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5680},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174589,"byte_end":174600,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14478},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174602,"byte_end":174612,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5714},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174649,"byte_end":174654,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14487},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174656,"byte_end":174661,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5766},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174696,"byte_end":174700,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14498},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174702,"byte_end":174706,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174747,"byte_end":174754,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14529},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174756,"byte_end":174763,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5860},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174804,"byte_end":174811,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5852},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174813,"byte_end":174819,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174874,"byte_end":174888,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14540},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174890,"byte_end":174903,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5944},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174942,"byte_end":174948,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14581},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":174950,"byte_end":174956,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6010},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175023,"byte_end":175043,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14619},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175045,"byte_end":175053,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14638},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175055,"byte_end":175073,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6092},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175112,"byte_end":175118,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14707},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175120,"byte_end":175126,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6192},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175304,"byte_end":175318,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14839},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452981,"byte_end":452989,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":14830},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452991,"byte_end":452995,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":14831},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452991,"byte_end":452995,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":14810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452997,"byte_end":453004,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":14811},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452997,"byte_end":453004,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":14800},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453006,"byte_end":453016,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":14819},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453018,"byte_end":453028,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6232}},{"kind":"Use","ref_id":{"krate":0,"index":6546},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175518,"byte_end":175534,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6706},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175721,"byte_end":175731,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14846},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175733,"byte_end":175742,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15474},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175910,"byte_end":175921,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15470},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175923,"byte_end":175940,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15432},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175942,"byte_end":175951,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15485},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175953,"byte_end":175960,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15486},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175953,"byte_end":175960,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6777},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":176043,"byte_end":176052,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11202,"byte_end":11208,"line_start":309,"line_end":309,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4087},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11210,"byte_end":11219,"line_start":309,"line_end":309,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11221,"byte_end":11230,"line_start":309,"line_end":309,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5439},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11232,"byte_end":11244,"line_start":309,"line_end":309,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501601,"byte_end":501605,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":14904},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501640,"byte_end":501645,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":6901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501681,"byte_end":501686,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":14915},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501688,"byte_end":501693,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":14921},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501731,"byte_end":501737,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":14966},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501770,"byte_end":501774,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":14977},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501809,"byte_end":501814,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":14997},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501855,"byte_end":501866,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":15059},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501905,"byte_end":501915,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":15111},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501948,"byte_end":501952,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":7221},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501993,"byte_end":502000,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":7283},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502038,"byte_end":502044,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":15130},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502046,"byte_end":502052,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":15179},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502086,"byte_end":502090,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":15262},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502141,"byte_end":502152,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":0,"index":15356},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502241,"byte_end":502247,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":6811}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11400,"byte_end":11404,"line_start":316,"line_end":316,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7526},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11406,"byte_end":11413,"line_start":316,"line_end":316,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12812},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541638,"byte_end":541645,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":2,"index":45867},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541647,"byte_end":541651,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":2,"index":45903},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541653,"byte_end":541661,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":2,"index":45912},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541663,"byte_end":541677,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":2,"index":12822},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541679,"byte_end":541684,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541711,"byte_end":541720,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541722,"byte_end":541736,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":18},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541738,"byte_end":541748,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":15},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541750,"byte_end":541755,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":21},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541757,"byte_end":541767,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541769,"byte_end":541784,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":378},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541810,"byte_end":541820,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":379},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541868,"byte_end":541882,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":94},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541968,"byte_end":541975,"line_start":24,"line_end":24,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":122},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":542061,"byte_end":542066,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":170},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":542153,"byte_end":542162,"line_start":32,"line_end":32,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":23,"index":407},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":542164,"byte_end":542172,"line_start":32,"line_end":32,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":542251,"byte_end":542262,"line_start":35,"line_end":35,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":0,"index":7660},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":542298,"byte_end":542311,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":0,"index":7657},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":542313,"byte_end":542321,"line_start":38,"line_end":38,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":7571}},{"kind":"Use","ref_id":{"krate":0,"index":7806},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":549231,"byte_end":549247,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":7672}},{"kind":"Use","ref_id":{"krate":0,"index":7727},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":549249,"byte_end":549254,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7672}},{"kind":"Use","ref_id":{"krate":0,"index":7783},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":549256,"byte_end":549266,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7672}},{"kind":"Use","ref_id":{"krate":0,"index":7764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":549268,"byte_end":549283,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":7672}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":0,"byte_end":11997,"line_start":1,"line_end":346,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6802},{"krate":0,"index":6805},{"krate":0,"index":6808},{"krate":0,"index":6811},{"krate":0,"index":7564},{"krate":0,"index":7565},{"krate":0,"index":7568},{"krate":0,"index":7571},{"krate":0,"index":7670},{"krate":0,"index":7672},{"krate":0,"index":7953},{"krate":0,"index":8015},{"krate":0,"index":8229}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":313,"byte_end":445,"line_start":7,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/poll.rs","byte_start":14425,"byte_end":14429,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/poll.rs","byte_start":14570,"byte_end":14578,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/poll.rs","byte_start":14504,"byte_end":14543,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/pending.rs","byte_start":15639,"byte_end":15651,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/pending.rs","byte_start":15776,"byte_end":15787,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/pending.rs","byte_start":15710,"byte_end":15749,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/random.rs","byte_start":35565,"byte_end":35572,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/mod.rs","byte_start":13440,"byte_end":13452,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/mod.rs","byte_start":13415,"byte_end":13432,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/mod.rs","byte_start":13514,"byte_end":13533,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/mod.rs","byte_start":13489,"byte_end":13506,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/mod.rs","byte_start":13610,"byte_end":13629,"line_start":58,"line_end":58,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/mod.rs","byte_start":13585,"byte_end":13602,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1376,"byte_end":1385,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1321,"byte_end":1352,"line_start":44,"line_end":44,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1547,"byte_end":1558,"line_start":54,"line_end":54,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1961}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36634,"byte_end":36658,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36659,"byte_end":36662,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36663,"byte_end":36688,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36689,"byte_end":36692,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36693,"byte_end":36720,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36721,"byte_end":36800,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36801,"byte_end":36838,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36839,"byte_end":36918,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36919,"byte_end":36994,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":36995,"byte_end":37059,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8256},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60441,"byte_end":60446,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8258},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60475,"byte_end":60481,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8260},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60510,"byte_end":60515,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8253},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60411,"byte_end":60418,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8258},{"krate":0,"index":8260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8301},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":64872,"byte_end":64876,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8303}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66695,"byte_end":66705,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65073,"byte_end":65141,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65146,"byte_end":65149,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65154,"byte_end":65222,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65227,"byte_end":65272,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65277,"byte_end":65280,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65285,"byte_end":65299,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65304,"byte_end":65307,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65312,"byte_end":65319,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65324,"byte_end":65365,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65370,"byte_end":65401,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65406,"byte_end":65462,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65467,"byte_end":65491,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65496,"byte_end":65531,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65536,"byte_end":65561,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65566,"byte_end":65569,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65574,"byte_end":65623,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65628,"byte_end":65631,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65636,"byte_end":65678,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65683,"byte_end":65722,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65727,"byte_end":65766,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65771,"byte_end":65788,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65793,"byte_end":65796,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65801,"byte_end":65871,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65876,"byte_end":65915,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65920,"byte_end":65961,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65966,"byte_end":65992,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65997,"byte_end":66000,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66005,"byte_end":66015,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66020,"byte_end":66037,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66042,"byte_end":66076,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66081,"byte_end":66128,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66133,"byte_end":66182,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66187,"byte_end":66249,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66254,"byte_end":66278,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66283,"byte_end":66326,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66331,"byte_end":66388,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66393,"byte_end":66468,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66473,"byte_end":66503,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66508,"byte_end":66525,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66530,"byte_end":66544,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66549,"byte_end":66633,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66638,"byte_end":66647,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66652,"byte_end":66657,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66662,"byte_end":66671,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66676,"byte_end":66683,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8339},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":67763,"byte_end":67773,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8342},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":67857,"byte_end":67865,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8336},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":67741,"byte_end":67744,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8342}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12930511,"byte_end":12930520,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8387},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":40867,"byte_end":40874,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8389}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8435},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":41125,"byte_end":41138,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8437}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8493},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":41478,"byte_end":41481,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8496}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8553},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":41688,"byte_end":41698,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8555}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8603},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":41904,"byte_end":41911,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":8606}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8665},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":42104,"byte_end":42108,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8669}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8738},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":42353,"byte_end":42360,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8741}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8798},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":42601,"byte_end":42611,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":8800}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8846},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":42824,"byte_end":42833,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":8848}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8897},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/catch_unwind.rs","byte_start":69461,"byte_end":69472,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8899}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70475,"byte_end":70481,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70332,"byte_end":70395,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70396,"byte_end":70463,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70855,"byte_end":70865,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70766,"byte_end":70843,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72967,"byte_end":72971,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72698,"byte_end":72772,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72777,"byte_end":72850,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72855,"byte_end":72923,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72928,"byte_end":72955,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73466,"byte_end":73475,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73323,"byte_end":73376,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73381,"byte_end":73384,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73389,"byte_end":73454,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74069,"byte_end":74081,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73657,"byte_end":73715,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73720,"byte_end":73723,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73728,"byte_end":73793,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73798,"byte_end":73801,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73806,"byte_end":73818,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73823,"byte_end":73826,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73831,"byte_end":73924,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":73929,"byte_end":74023,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74028,"byte_end":74057,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74589,"byte_end":74599,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74181,"byte_end":74237,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74242,"byte_end":74245,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74250,"byte_end":74315,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74320,"byte_end":74323,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74328,"byte_end":74340,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74345,"byte_end":74348,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74353,"byte_end":74446,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74451,"byte_end":74543,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74548,"byte_end":74577,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":81049,"byte_end":81056,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80859,"byte_end":80921,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80926,"byte_end":80929,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80934,"byte_end":81014,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":81019,"byte_end":81037,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43815,"byte_end":43824,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43716,"byte_end":43790,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43791,"byte_end":43804,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44656,"byte_end":44659,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43839,"byte_end":43914,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43919,"byte_end":43942,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43947,"byte_end":43950,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43955,"byte_end":44029,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44034,"byte_end":44105,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44110,"byte_end":44172,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44177,"byte_end":44180,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44185,"byte_end":44256,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44261,"byte_end":44332,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44337,"byte_end":44358,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44363,"byte_end":44366,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44371,"byte_end":44385,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44390,"byte_end":44393,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44398,"byte_end":44405,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44410,"byte_end":44451,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44456,"byte_end":44491,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44496,"byte_end":44499,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44504,"byte_end":44533,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44538,"byte_end":44581,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44586,"byte_end":44622,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44627,"byte_end":44636,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44641,"byte_end":44648,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45056,"byte_end":45064,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44829,"byte_end":44904,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44909,"byte_end":44932,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44937,"byte_end":44940,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":44945,"byte_end":45023,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45028,"byte_end":45048,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46076,"byte_end":46080,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45223,"byte_end":45299,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45304,"byte_end":45347,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45352,"byte_end":45355,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45360,"byte_end":45431,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45436,"byte_end":45510,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45515,"byte_end":45531,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45536,"byte_end":45539,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45544,"byte_end":45619,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45624,"byte_end":45635,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45640,"byte_end":45643,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45648,"byte_end":45719,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45724,"byte_end":45750,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45755,"byte_end":45758,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45763,"byte_end":45777,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45782,"byte_end":45785,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45790,"byte_end":45797,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45802,"byte_end":45843,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45848,"byte_end":45883,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45888,"byte_end":45891,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45896,"byte_end":45930,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":45935,"byte_end":46000,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46005,"byte_end":46042,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46047,"byte_end":46056,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46061,"byte_end":46068,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46950,"byte_end":46961,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46292,"byte_end":46367,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46372,"byte_end":46393,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46398,"byte_end":46401,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46406,"byte_end":46486,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46491,"byte_end":46563,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46568,"byte_end":46571,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46576,"byte_end":46590,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46595,"byte_end":46598,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46603,"byte_end":46610,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46615,"byte_end":46656,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46661,"byte_end":46696,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46701,"byte_end":46704,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46709,"byte_end":46723,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46728,"byte_end":46756,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46761,"byte_end":46797,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46802,"byte_end":46814,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46819,"byte_end":46857,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46862,"byte_end":46868,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46873,"byte_end":46876,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46881,"byte_end":46916,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46921,"byte_end":46930,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":46935,"byte_end":46942,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47800,"byte_end":47812,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47141,"byte_end":47217,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47222,"byte_end":47243,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47248,"byte_end":47251,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47256,"byte_end":47335,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47340,"byte_end":47412,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47417,"byte_end":47420,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47425,"byte_end":47439,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47444,"byte_end":47447,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47452,"byte_end":47459,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47464,"byte_end":47505,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47510,"byte_end":47545,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47550,"byte_end":47553,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47558,"byte_end":47572,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47577,"byte_end":47605,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47610,"byte_end":47646,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47651,"byte_end":47663,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47668,"byte_end":47706,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47711,"byte_end":47717,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47722,"byte_end":47725,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47730,"byte_end":47766,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47771,"byte_end":47780,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47785,"byte_end":47792,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48591,"byte_end":48602,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":47993,"byte_end":48046,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48051,"byte_end":48054,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48059,"byte_end":48133,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48138,"byte_end":48201,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48206,"byte_end":48209,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48214,"byte_end":48228,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48233,"byte_end":48236,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48241,"byte_end":48248,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48253,"byte_end":48294,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48299,"byte_end":48334,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48339,"byte_end":48374,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48379,"byte_end":48382,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48387,"byte_end":48417,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48422,"byte_end":48460,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48465,"byte_end":48516,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48521,"byte_end":48557,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48562,"byte_end":48571,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48576,"byte_end":48583,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49467,"byte_end":49474,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48741,"byte_end":48805,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48810,"byte_end":48846,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48851,"byte_end":48854,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48859,"byte_end":48928,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48933,"byte_end":48970,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48975,"byte_end":48978,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":48983,"byte_end":49043,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49048,"byte_end":49051,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49056,"byte_end":49127,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49132,"byte_end":49158,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49163,"byte_end":49166,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49171,"byte_end":49185,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49190,"byte_end":49193,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49198,"byte_end":49205,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49210,"byte_end":49251,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49256,"byte_end":49291,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49296,"byte_end":49299,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49304,"byte_end":49350,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49355,"byte_end":49396,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49401,"byte_end":49433,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49438,"byte_end":49447,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49452,"byte_end":49459,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50579,"byte_end":50593,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49688,"byte_end":49763,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49768,"byte_end":49791,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49796,"byte_end":49799,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49804,"byte_end":49876,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49881,"byte_end":49954,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49959,"byte_end":49973,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49978,"byte_end":49981,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":49986,"byte_end":50056,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50061,"byte_end":50079,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50084,"byte_end":50087,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50092,"byte_end":50106,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50111,"byte_end":50114,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50119,"byte_end":50126,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50131,"byte_end":50172,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50177,"byte_end":50212,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50217,"byte_end":50260,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50265,"byte_end":50268,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50273,"byte_end":50313,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50318,"byte_end":50384,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50389,"byte_end":50392,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50397,"byte_end":50450,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50455,"byte_end":50501,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50506,"byte_end":50545,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50550,"byte_end":50559,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50564,"byte_end":50571,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51681,"byte_end":51685,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50786,"byte_end":50859,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50864,"byte_end":50930,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50935,"byte_end":50953,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50958,"byte_end":50961,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":50966,"byte_end":51033,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51038,"byte_end":51103,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51108,"byte_end":51180,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51185,"byte_end":51259,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51264,"byte_end":51290,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51295,"byte_end":51298,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51303,"byte_end":51374,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51379,"byte_end":51454,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51459,"byte_end":51513,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51518,"byte_end":51521,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51526,"byte_end":51600,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51605,"byte_end":51673,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52525,"byte_end":52532,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51831,"byte_end":51897,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51902,"byte_end":51905,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51910,"byte_end":51985,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":51990,"byte_end":52063,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52068,"byte_end":52137,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52142,"byte_end":52192,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52197,"byte_end":52200,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52205,"byte_end":52219,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52224,"byte_end":52227,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52232,"byte_end":52239,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52244,"byte_end":52285,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52290,"byte_end":52325,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52330,"byte_end":52333,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52338,"byte_end":52367,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52372,"byte_end":52450,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52455,"byte_end":52491,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52496,"byte_end":52505,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52510,"byte_end":52517,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54070,"byte_end":54082,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52714,"byte_end":52768,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52773,"byte_end":52776,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52781,"byte_end":52856,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52861,"byte_end":52935,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":52940,"byte_end":53014,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53019,"byte_end":53070,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53075,"byte_end":53078,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53083,"byte_end":53158,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53163,"byte_end":53233,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53238,"byte_end":53305,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53310,"byte_end":53385,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53390,"byte_end":53462,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53467,"byte_end":53470,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53475,"byte_end":53539,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53544,"byte_end":53601,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53606,"byte_end":53609,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53614,"byte_end":53628,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53633,"byte_end":53636,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53641,"byte_end":53648,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53653,"byte_end":53694,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53699,"byte_end":53749,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53754,"byte_end":53757,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53762,"byte_end":53796,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53801,"byte_end":53850,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53855,"byte_end":53858,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53863,"byte_end":53912,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53917,"byte_end":53941,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53946,"byte_end":53953,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":53958,"byte_end":54008,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54013,"byte_end":54022,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54027,"byte_end":54034,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54039,"byte_end":54062,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55834,"byte_end":55840,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54312,"byte_end":54387,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54392,"byte_end":54415,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54420,"byte_end":54423,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54428,"byte_end":54502,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54507,"byte_end":54580,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54585,"byte_end":54597,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54602,"byte_end":54605,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54610,"byte_end":54674,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54679,"byte_end":54736,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54741,"byte_end":54744,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54749,"byte_end":54763,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54768,"byte_end":54771,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54776,"byte_end":54783,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54788,"byte_end":54829,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54834,"byte_end":54869,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54874,"byte_end":54877,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54882,"byte_end":54911,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54916,"byte_end":54950,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54955,"byte_end":54989,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":54994,"byte_end":54997,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55002,"byte_end":55035,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55040,"byte_end":55073,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55078,"byte_end":55087,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55092,"byte_end":55099,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55104,"byte_end":55107,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55112,"byte_end":55119,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55124,"byte_end":55193,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55198,"byte_end":55273,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55278,"byte_end":55309,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55314,"byte_end":55317,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55322,"byte_end":55363,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55368,"byte_end":55403,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55408,"byte_end":55444,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55449,"byte_end":55469,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55474,"byte_end":55477,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55482,"byte_end":55511,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55516,"byte_end":55550,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55555,"byte_end":55589,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55594,"byte_end":55639,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55644,"byte_end":55685,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55690,"byte_end":55697,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55702,"byte_end":55735,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55740,"byte_end":55772,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55777,"byte_end":55786,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55791,"byte_end":55798,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":55803,"byte_end":55826,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57002,"byte_end":57007,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":56773,"byte_end":56814,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":56819,"byte_end":56822,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":56827,"byte_end":56902,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":56907,"byte_end":56964,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":56969,"byte_end":56994,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57467,"byte_end":57478,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57166,"byte_end":57207,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57212,"byte_end":57215,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57220,"byte_end":57279,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57284,"byte_end":57287,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57292,"byte_end":57367,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57372,"byte_end":57429,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57434,"byte_end":57459,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57768,"byte_end":57778,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57635,"byte_end":57684,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57689,"byte_end":57760,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58063,"byte_end":58074,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57927,"byte_end":57976,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":57981,"byte_end":58055,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58305,"byte_end":58315,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58228,"byte_end":58297,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59711,"byte_end":59723,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58451,"byte_end":58523,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58528,"byte_end":58591,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58596,"byte_end":58599,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58604,"byte_end":58670,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58675,"byte_end":58678,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58683,"byte_end":58756,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58761,"byte_end":58830,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58835,"byte_end":58905,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58910,"byte_end":58913,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58918,"byte_end":58932,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58937,"byte_end":58940,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58945,"byte_end":58952,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58957,"byte_end":58987,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":58992,"byte_end":59042,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59047,"byte_end":59086,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59091,"byte_end":59142,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59147,"byte_end":59150,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59155,"byte_end":59215,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59220,"byte_end":59272,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59277,"byte_end":59284,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59289,"byte_end":59292,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59297,"byte_end":59366,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59371,"byte_end":59444,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59449,"byte_end":59481,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59486,"byte_end":59489,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59494,"byte_end":59501,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59506,"byte_end":59553,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59558,"byte_end":59597,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59602,"byte_end":59605,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59610,"byte_end":59691,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":59696,"byte_end":59703,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8933},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103200,"byte_end":103210,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":8935}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":8971},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104184,"byte_end":104189,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":8968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8973},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104218,"byte_end":104224,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":8968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8975},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104253,"byte_end":104258,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":8968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8968},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104151,"byte_end":104161,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8973},{"krate":0,"index":8975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9018},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109127,"byte_end":109132,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9020},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109161,"byte_end":109167,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9022},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109196,"byte_end":109201,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9015},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109091,"byte_end":109104,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9018},{"krate":0,"index":9020},{"krate":0,"index":9022}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9061},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":82035,"byte_end":82045,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9064}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9122},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":82293,"byte_end":82306,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9125}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9182},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":82574,"byte_end":82590,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9184}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9240},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":82933,"byte_end":82944,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":9243}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9312},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":83178,"byte_end":83185,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9316}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9386},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":83425,"byte_end":83431,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9390}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9459},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":83681,"byte_end":83688,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9462}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9520},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":83896,"byte_end":83902,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9523}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9581},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":84121,"byte_end":84130,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9584}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9642},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":84402,"byte_end":84412,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9645}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9703},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":84785,"byte_end":84790,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9706}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85031,"byte_end":85037,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9767}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9826},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85294,"byte_end":85305,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":9830}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9899},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85589,"byte_end":85601,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":9902}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85891,"byte_end":85903,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85827,"byte_end":85880,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87055,"byte_end":87067,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85921,"byte_end":85997,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86002,"byte_end":86027,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86032,"byte_end":86035,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86040,"byte_end":86110,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86115,"byte_end":86188,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86193,"byte_end":86207,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86212,"byte_end":86215,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86220,"byte_end":86290,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86295,"byte_end":86313,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86318,"byte_end":86321,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86326,"byte_end":86340,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86345,"byte_end":86348,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86353,"byte_end":86360,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86365,"byte_end":86413,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86418,"byte_end":86446,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86451,"byte_end":86503,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86508,"byte_end":86527,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86532,"byte_end":86557,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86562,"byte_end":86565,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86570,"byte_end":86626,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86631,"byte_end":86663,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86668,"byte_end":86678,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86683,"byte_end":86700,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86705,"byte_end":86752,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86757,"byte_end":86793,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86798,"byte_end":86805,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86810,"byte_end":86871,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86876,"byte_end":86879,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86884,"byte_end":86916,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86921,"byte_end":86954,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86959,"byte_end":86966,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":86971,"byte_end":86995,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88663,"byte_end":88669,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87291,"byte_end":87349,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87354,"byte_end":87357,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87362,"byte_end":87437,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87442,"byte_end":87512,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87517,"byte_end":87590,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87595,"byte_end":87624,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87629,"byte_end":87632,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87637,"byte_end":87712,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87717,"byte_end":87792,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87797,"byte_end":87844,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87849,"byte_end":87852,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87857,"byte_end":87932,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87937,"byte_end":87963,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87968,"byte_end":87971,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87976,"byte_end":87990,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":87995,"byte_end":87998,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88003,"byte_end":88010,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88015,"byte_end":88053,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88058,"byte_end":88061,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88066,"byte_end":88107,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88112,"byte_end":88157,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88162,"byte_end":88204,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88209,"byte_end":88245,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88250,"byte_end":88259,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88264,"byte_end":88271,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88276,"byte_end":88279,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88284,"byte_end":88356,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88361,"byte_end":88372,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88377,"byte_end":88380,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88385,"byte_end":88392,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88397,"byte_end":88435,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88440,"byte_end":88443,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88448,"byte_end":88489,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88494,"byte_end":88540,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88545,"byte_end":88587,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88592,"byte_end":88629,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88634,"byte_end":88643,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88648,"byte_end":88655,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90228,"byte_end":90242,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88860,"byte_end":88977,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88982,"byte_end":88985,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":88990,"byte_end":89112,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89117,"byte_end":89167,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89172,"byte_end":89175,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89180,"byte_end":89255,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89260,"byte_end":89335,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89340,"byte_end":89387,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89392,"byte_end":89395,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89400,"byte_end":89475,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89480,"byte_end":89555,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89560,"byte_end":89607,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89612,"byte_end":89615,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89620,"byte_end":89695,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89700,"byte_end":89726,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89731,"byte_end":89734,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89739,"byte_end":89753,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89758,"byte_end":89761,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89766,"byte_end":89773,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89778,"byte_end":89816,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89821,"byte_end":89824,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89829,"byte_end":89870,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89875,"byte_end":89920,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89925,"byte_end":89986,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":89991,"byte_end":90023,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90028,"byte_end":90031,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90036,"byte_end":90082,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90087,"byte_end":90148,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90153,"byte_end":90186,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90191,"byte_end":90200,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90205,"byte_end":90212,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90217,"byte_end":90220,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91925,"byte_end":91932,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90476,"byte_end":90532,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90537,"byte_end":90540,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90545,"byte_end":90619,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90624,"byte_end":90685,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90690,"byte_end":90760,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90765,"byte_end":90840,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90845,"byte_end":90880,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90885,"byte_end":90888,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90893,"byte_end":90968,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":90973,"byte_end":91048,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91053,"byte_end":91100,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91105,"byte_end":91108,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91113,"byte_end":91188,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91193,"byte_end":91219,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91224,"byte_end":91227,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91232,"byte_end":91246,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91251,"byte_end":91254,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91259,"byte_end":91266,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91271,"byte_end":91309,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91314,"byte_end":91317,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91322,"byte_end":91363,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91368,"byte_end":91414,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91419,"byte_end":91462,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91467,"byte_end":91504,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91509,"byte_end":91518,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91523,"byte_end":91530,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91535,"byte_end":91538,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91543,"byte_end":91616,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91621,"byte_end":91635,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91640,"byte_end":91643,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91648,"byte_end":91655,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91660,"byte_end":91698,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91703,"byte_end":91706,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91711,"byte_end":91752,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91757,"byte_end":91802,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91807,"byte_end":91850,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91855,"byte_end":91891,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91896,"byte_end":91905,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":91910,"byte_end":91917,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93022,"byte_end":93030,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92125,"byte_end":92195,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92200,"byte_end":92249,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92254,"byte_end":92257,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92262,"byte_end":92325,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92330,"byte_end":92398,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92403,"byte_end":92476,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92481,"byte_end":92557,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92562,"byte_end":92607,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92612,"byte_end":92615,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92620,"byte_end":92695,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92700,"byte_end":92726,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92731,"byte_end":92734,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92739,"byte_end":92753,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92758,"byte_end":92761,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92766,"byte_end":92773,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92778,"byte_end":92816,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92821,"byte_end":92824,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92829,"byte_end":92870,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92875,"byte_end":92926,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92931,"byte_end":92988,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":92993,"byte_end":93002,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93007,"byte_end":93014,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93326,"byte_end":93333,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93206,"byte_end":93264,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93269,"byte_end":93318,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94888,"byte_end":94896,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93507,"byte_end":93576,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93581,"byte_end":93655,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93660,"byte_end":93663,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93668,"byte_end":93743,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93748,"byte_end":93818,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93823,"byte_end":93888,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93893,"byte_end":93959,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":93964,"byte_end":93998,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94003,"byte_end":94006,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94011,"byte_end":94086,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94091,"byte_end":94117,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94122,"byte_end":94125,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94130,"byte_end":94144,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94149,"byte_end":94152,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94157,"byte_end":94164,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94169,"byte_end":94207,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94212,"byte_end":94215,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94220,"byte_end":94261,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94266,"byte_end":94311,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94316,"byte_end":94391,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94396,"byte_end":94432,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94437,"byte_end":94446,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94451,"byte_end":94458,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94463,"byte_end":94466,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94471,"byte_end":94547,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94552,"byte_end":94563,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94568,"byte_end":94571,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94576,"byte_end":94583,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94588,"byte_end":94626,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94631,"byte_end":94634,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94639,"byte_end":94680,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94685,"byte_end":94731,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94736,"byte_end":94812,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94817,"byte_end":94854,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94859,"byte_end":94868,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":94873,"byte_end":94880,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96517,"byte_end":96524,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95150,"byte_end":95215,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95220,"byte_end":95292,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95297,"byte_end":95300,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95305,"byte_end":95380,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95385,"byte_end":95455,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95460,"byte_end":95525,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95530,"byte_end":95606,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95611,"byte_end":95629,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95634,"byte_end":95637,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95642,"byte_end":95717,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95722,"byte_end":95748,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95753,"byte_end":95756,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95761,"byte_end":95775,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95780,"byte_end":95783,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95788,"byte_end":95795,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95800,"byte_end":95838,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95843,"byte_end":95846,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95851,"byte_end":95892,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95897,"byte_end":95943,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":95948,"byte_end":96023,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96028,"byte_end":96065,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96070,"byte_end":96079,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96084,"byte_end":96091,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96096,"byte_end":96099,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96104,"byte_end":96177,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96182,"byte_end":96196,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96201,"byte_end":96204,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96209,"byte_end":96216,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96221,"byte_end":96259,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96264,"byte_end":96267,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96272,"byte_end":96313,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96318,"byte_end":96363,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96368,"byte_end":96442,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96447,"byte_end":96483,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96488,"byte_end":96497,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96502,"byte_end":96509,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97500,"byte_end":97510,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96773,"byte_end":96846,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96851,"byte_end":96854,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96859,"byte_end":96934,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":96939,"byte_end":97012,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97017,"byte_end":97086,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97091,"byte_end":97144,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97149,"byte_end":97152,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97157,"byte_end":97171,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97176,"byte_end":97179,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97184,"byte_end":97191,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97196,"byte_end":97237,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97242,"byte_end":97280,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97285,"byte_end":97288,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97293,"byte_end":97335,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97340,"byte_end":97421,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97426,"byte_end":97466,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97471,"byte_end":97480,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97485,"byte_end":97492,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98436,"byte_end":98447,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97709,"byte_end":97780,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97785,"byte_end":97788,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97793,"byte_end":97868,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97873,"byte_end":97946,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":97951,"byte_end":98020,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98025,"byte_end":98079,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98084,"byte_end":98087,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98092,"byte_end":98106,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98111,"byte_end":98114,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98119,"byte_end":98126,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98131,"byte_end":98172,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98177,"byte_end":98215,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98220,"byte_end":98223,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98228,"byte_end":98271,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98276,"byte_end":98356,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98361,"byte_end":98402,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98407,"byte_end":98416,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98421,"byte_end":98428,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98832,"byte_end":98843,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98651,"byte_end":98726,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98731,"byte_end":98760,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98765,"byte_end":98768,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":98773,"byte_end":98824,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100022,"byte_end":100040,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99078,"byte_end":99153,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99158,"byte_end":99181,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99186,"byte_end":99189,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99194,"byte_end":99266,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99271,"byte_end":99344,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99349,"byte_end":99363,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99368,"byte_end":99371,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99376,"byte_end":99446,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99451,"byte_end":99469,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99474,"byte_end":99477,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99482,"byte_end":99496,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99501,"byte_end":99504,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99509,"byte_end":99516,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99521,"byte_end":99562,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99567,"byte_end":99605,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99610,"byte_end":99656,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99661,"byte_end":99664,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99669,"byte_end":99729,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99734,"byte_end":99813,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99818,"byte_end":99821,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99826,"byte_end":99883,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99888,"byte_end":99940,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99945,"byte_end":99988,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":99993,"byte_end":100002,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100007,"byte_end":100014,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101131,"byte_end":101145,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100300,"byte_end":100371,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100376,"byte_end":100413,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100418,"byte_end":100467,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100472,"byte_end":100475,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100480,"byte_end":100549,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100554,"byte_end":100627,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100632,"byte_end":100702,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100707,"byte_end":100725,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100730,"byte_end":100733,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100738,"byte_end":100806,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100811,"byte_end":100814,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100819,"byte_end":100833,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100838,"byte_end":100841,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100846,"byte_end":100853,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100858,"byte_end":100896,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100901,"byte_end":100904,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100909,"byte_end":100950,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":100955,"byte_end":101007,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101012,"byte_end":101059,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101064,"byte_end":101097,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101102,"byte_end":101111,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101116,"byte_end":101123,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102400,"byte_end":102411,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101699,"byte_end":101752,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101757,"byte_end":101793,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101798,"byte_end":101801,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101806,"byte_end":101855,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101860,"byte_end":101927,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101932,"byte_end":101945,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101950,"byte_end":101953,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101958,"byte_end":101972,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101977,"byte_end":101980,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101985,"byte_end":101992,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":101997,"byte_end":102056,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102061,"byte_end":102064,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102069,"byte_end":102088,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102093,"byte_end":102111,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102116,"byte_end":102188,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102193,"byte_end":102225,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102230,"byte_end":102237,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102242,"byte_end":102318,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102323,"byte_end":102326,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102331,"byte_end":102380,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102385,"byte_end":102392,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102670,"byte_end":102684,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102567,"byte_end":102640,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":102645,"byte_end":102662,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":9957},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":110853,"byte_end":110857,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":9959}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":110719,"byte_end":110756,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":110774,"byte_end":110841,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111399,"byte_end":111403,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":110962,"byte_end":111030,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111031,"byte_end":111034,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111035,"byte_end":111098,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111099,"byte_end":111102,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111103,"byte_end":111117,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111118,"byte_end":111121,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111122,"byte_end":111129,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111130,"byte_end":111171,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111172,"byte_end":111196,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111197,"byte_end":111200,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111201,"byte_end":111233,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111234,"byte_end":111261,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111262,"byte_end":111265,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111266,"byte_end":111303,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111304,"byte_end":111328,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111329,"byte_end":111336,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111337,"byte_end":111373,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111374,"byte_end":111383,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111384,"byte_end":111391,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9963},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112230,"byte_end":112237,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9965}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112091,"byte_end":112133,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112151,"byte_end":112218,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112756,"byte_end":112763,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112378,"byte_end":112458,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112459,"byte_end":112472,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112473,"byte_end":112476,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112477,"byte_end":112539,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112540,"byte_end":112543,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112544,"byte_end":112558,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112559,"byte_end":112562,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112563,"byte_end":112576,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112577,"byte_end":112618,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112619,"byte_end":112643,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112644,"byte_end":112647,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112648,"byte_end":112683,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112684,"byte_end":112710,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112711,"byte_end":112730,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112731,"byte_end":112740,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112741,"byte_end":112748,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9971},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113535,"byte_end":113541,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":9969},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113500,"byte_end":113530,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9974},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113608,"byte_end":113612,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":9969},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113565,"byte_end":113603,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9977},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113774,"byte_end":113778,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":9969},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113631,"byte_end":113697,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113702,"byte_end":113769,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":9969},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113471,"byte_end":113480,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":9971},{"krate":0,"index":9974},{"krate":0,"index":9977}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113349,"byte_end":113386,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113387,"byte_end":113390,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113391,"byte_end":113444,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114299,"byte_end":114309,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113838,"byte_end":113875,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113876,"byte_end":113879,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113880,"byte_end":113894,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113895,"byte_end":113898,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113899,"byte_end":113906,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113907,"byte_end":113948,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113949,"byte_end":113973,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113974,"byte_end":113999,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114000,"byte_end":114003,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114004,"byte_end":114053,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114054,"byte_end":114075,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114076,"byte_end":114128,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114129,"byte_end":114164,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114165,"byte_end":114220,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114221,"byte_end":114273,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114274,"byte_end":114283,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114284,"byte_end":114291,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114750,"byte_end":114760,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114452,"byte_end":114537,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114542,"byte_end":114613,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114618,"byte_end":114691,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114696,"byte_end":114724,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114729,"byte_end":114738,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115108,"byte_end":115119,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114988,"byte_end":115054,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115059,"byte_end":115082,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115087,"byte_end":115096,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9984},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116744,"byte_end":116750,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":9982},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116709,"byte_end":116739,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9987},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116817,"byte_end":116821,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":9982},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116774,"byte_end":116812,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9990},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117029,"byte_end":117033,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":9982},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116836,"byte_end":116905,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116910,"byte_end":116980,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116985,"byte_end":117024,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":9982},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116674,"byte_end":116686,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":9984},{"krate":0,"index":9987},{"krate":0,"index":9990}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116534,"byte_end":116585,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116586,"byte_end":116589,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":116590,"byte_end":116647,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117147,"byte_end":117161,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117099,"byte_end":117139,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117648,"byte_end":117658,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117339,"byte_end":117424,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117429,"byte_end":117500,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117505,"byte_end":117589,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117594,"byte_end":117622,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117627,"byte_end":117636,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":118008,"byte_end":118019,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117885,"byte_end":117954,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117959,"byte_end":117982,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117987,"byte_end":117996,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10000},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120230,"byte_end":120242,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10002}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121360,"byte_end":121366,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1214}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121240,"byte_end":121280,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121281,"byte_end":121348,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1217},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121953,"byte_end":121960,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121417,"byte_end":121488,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121489,"byte_end":121492,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121493,"byte_end":121559,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121560,"byte_end":121563,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121564,"byte_end":121578,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121579,"byte_end":121582,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121583,"byte_end":121590,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121591,"byte_end":121632,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121633,"byte_end":121666,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121667,"byte_end":121706,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121707,"byte_end":121710,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121711,"byte_end":121768,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121769,"byte_end":121812,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121813,"byte_end":121818,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121819,"byte_end":121822,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121823,"byte_end":121864,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121865,"byte_end":121927,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121928,"byte_end":121937,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121938,"byte_end":121945,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10039},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":122894,"byte_end":122907,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10041}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1276},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126315,"byte_end":126329,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125127,"byte_end":125200,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125201,"byte_end":125325,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125326,"byte_end":125329,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125330,"byte_end":125343,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125344,"byte_end":125347,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125348,"byte_end":125415,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125416,"byte_end":125419,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125420,"byte_end":125586,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125587,"byte_end":125712,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125713,"byte_end":125716,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125717,"byte_end":125731,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125732,"byte_end":125735,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125736,"byte_end":125743,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125744,"byte_end":125785,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125786,"byte_end":125810,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125811,"byte_end":125814,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125815,"byte_end":125867,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125868,"byte_end":125901,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125902,"byte_end":125905,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125906,"byte_end":125967,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125968,"byte_end":125998,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":125999,"byte_end":126008,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126009,"byte_end":126016,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126017,"byte_end":126020,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126021,"byte_end":126045,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126046,"byte_end":126049,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126050,"byte_end":126057,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126058,"byte_end":126099,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126100,"byte_end":126135,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126136,"byte_end":126183,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126184,"byte_end":126200,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126201,"byte_end":126260,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126261,"byte_end":126289,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126290,"byte_end":126299,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":126300,"byte_end":126307,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10073},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126752,"byte_end":126757,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126601,"byte_end":126648,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126673,"byte_end":126740,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126880,"byte_end":126890,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126797,"byte_end":126854,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126859,"byte_end":126868,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1318},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127556,"byte_end":127561,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127310,"byte_end":127370,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127371,"byte_end":127374,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127375,"byte_end":127389,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127390,"byte_end":127393,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127394,"byte_end":127401,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127402,"byte_end":127443,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127444,"byte_end":127468,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127469,"byte_end":127472,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127473,"byte_end":127502,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127503,"byte_end":127530,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127531,"byte_end":127540,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127541,"byte_end":127548,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1320},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127896,"byte_end":127898,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127630,"byte_end":127697,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127698,"byte_end":127701,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127702,"byte_end":127716,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127717,"byte_end":127720,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127721,"byte_end":127728,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127729,"byte_end":127770,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127771,"byte_end":127795,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127796,"byte_end":127799,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127800,"byte_end":127838,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127839,"byte_end":127870,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127871,"byte_end":127880,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127881,"byte_end":127888,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1323},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128229,"byte_end":128232,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127962,"byte_end":128028,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128029,"byte_end":128032,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128033,"byte_end":128047,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128048,"byte_end":128051,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128052,"byte_end":128059,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128060,"byte_end":128101,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128102,"byte_end":128126,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128127,"byte_end":128130,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128131,"byte_end":128170,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128171,"byte_end":128203,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128204,"byte_end":128213,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":128214,"byte_end":128221,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10175},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130518,"byte_end":130522,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10178},{"krate":0,"index":10179}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10220},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130588,"byte_end":130593,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10224},{"krate":0,"index":10225},{"krate":0,"index":10226}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10277},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130665,"byte_end":130670,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10282},{"krate":0,"index":10283},{"krate":0,"index":10284},{"krate":0,"index":10285}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10346},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130748,"byte_end":130753,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10352},{"krate":0,"index":10353},{"krate":0,"index":10354},{"krate":0,"index":10355},{"krate":0,"index":10356}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131368,"byte_end":131372,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130791,"byte_end":130862,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130863,"byte_end":130866,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130867,"byte_end":130938,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":130939,"byte_end":131014,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131015,"byte_end":131018,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131019,"byte_end":131088,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131089,"byte_end":131115,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131116,"byte_end":131119,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131120,"byte_end":131134,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131135,"byte_end":131138,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131139,"byte_end":131146,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131147,"byte_end":131188,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131189,"byte_end":131213,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131214,"byte_end":131217,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131218,"byte_end":131242,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131243,"byte_end":131267,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131268,"byte_end":131302,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131303,"byte_end":131306,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131307,"byte_end":131342,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131343,"byte_end":131352,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131353,"byte_end":131360,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1377},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131918,"byte_end":131923,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131579,"byte_end":131631,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131632,"byte_end":131635,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131636,"byte_end":131650,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131651,"byte_end":131654,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131655,"byte_end":131662,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131663,"byte_end":131704,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131705,"byte_end":131729,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131730,"byte_end":131733,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131734,"byte_end":131758,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131759,"byte_end":131783,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131784,"byte_end":131808,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131809,"byte_end":131848,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131849,"byte_end":131852,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131853,"byte_end":131892,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131893,"byte_end":131902,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":131903,"byte_end":131910,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1381},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132585,"byte_end":132590,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132215,"byte_end":132267,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132268,"byte_end":132271,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132272,"byte_end":132286,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132287,"byte_end":132290,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132291,"byte_end":132298,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132299,"byte_end":132340,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132341,"byte_end":132365,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132366,"byte_end":132369,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132370,"byte_end":132394,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132395,"byte_end":132419,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132420,"byte_end":132444,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132445,"byte_end":132469,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132470,"byte_end":132512,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132513,"byte_end":132516,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132517,"byte_end":132559,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132560,"byte_end":132569,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132570,"byte_end":132577,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133355,"byte_end":133360,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":132954,"byte_end":133006,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133007,"byte_end":133010,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133011,"byte_end":133025,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133026,"byte_end":133029,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133030,"byte_end":133037,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133038,"byte_end":133079,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133080,"byte_end":133104,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133105,"byte_end":133108,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133109,"byte_end":133133,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133134,"byte_end":133158,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133159,"byte_end":133183,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133184,"byte_end":133208,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133209,"byte_end":133233,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133234,"byte_end":133279,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133280,"byte_end":133283,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133284,"byte_end":133329,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133330,"byte_end":133339,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":133340,"byte_end":133347,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":134720,"byte_end":134727,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1469}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":134599,"byte_end":134666,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":134667,"byte_end":134708,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1480},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136822,"byte_end":136830,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135536,"byte_end":135616,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135617,"byte_end":135627,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135628,"byte_end":135631,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135632,"byte_end":135711,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135712,"byte_end":135792,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135793,"byte_end":135811,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135812,"byte_end":135815,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135816,"byte_end":135893,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135894,"byte_end":135951,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135952,"byte_end":135955,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135956,"byte_end":135970,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135971,"byte_end":135974,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135975,"byte_end":136057,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136058,"byte_end":136142,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136143,"byte_end":136227,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136228,"byte_end":136231,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136232,"byte_end":136301,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136302,"byte_end":136305,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136306,"byte_end":136374,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136375,"byte_end":136378,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136379,"byte_end":136456,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136457,"byte_end":136538,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136539,"byte_end":136542,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136543,"byte_end":136557,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136558,"byte_end":136561,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136562,"byte_end":136569,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136570,"byte_end":136611,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136612,"byte_end":136646,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136647,"byte_end":136650,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136651,"byte_end":136688,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136689,"byte_end":136692,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136693,"byte_end":136740,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136741,"byte_end":136744,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136745,"byte_end":136796,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136797,"byte_end":136806,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":136807,"byte_end":136814,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10427},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139283,"byte_end":139289,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10430}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139145,"byte_end":139186,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139187,"byte_end":139254,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1529},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141553,"byte_end":141559,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139380,"byte_end":139450,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139451,"byte_end":139454,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139455,"byte_end":139533,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139534,"byte_end":139610,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139611,"byte_end":139683,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139684,"byte_end":139687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139688,"byte_end":139760,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139761,"byte_end":139789,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139790,"byte_end":139793,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139794,"byte_end":139861,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139862,"byte_end":139926,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139927,"byte_end":139977,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139978,"byte_end":139981,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139982,"byte_end":139996,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139997,"byte_end":140000,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140001,"byte_end":140021,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140022,"byte_end":140025,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140026,"byte_end":140033,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140034,"byte_end":140075,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140076,"byte_end":140094,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140095,"byte_end":140111,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140112,"byte_end":140135,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140136,"byte_end":140157,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140158,"byte_end":140164,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140165,"byte_end":140168,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140169,"byte_end":140260,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140261,"byte_end":140286,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140287,"byte_end":140346,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140347,"byte_end":140356,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140357,"byte_end":140363,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140364,"byte_end":140389,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140390,"byte_end":140420,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140421,"byte_end":140427,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140428,"byte_end":140431,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140432,"byte_end":140478,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140479,"byte_end":140501,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140502,"byte_end":140524,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140525,"byte_end":140528,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140529,"byte_end":140591,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140592,"byte_end":140676,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140677,"byte_end":140750,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140751,"byte_end":140835,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140836,"byte_end":140909,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140910,"byte_end":140916,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140917,"byte_end":140920,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140921,"byte_end":140945,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140946,"byte_end":140955,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140956,"byte_end":140963,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140964,"byte_end":140967,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140968,"byte_end":140994,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140995,"byte_end":140998,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":140999,"byte_end":141006,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141007,"byte_end":141066,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141067,"byte_end":141070,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141071,"byte_end":141124,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141125,"byte_end":141128,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141129,"byte_end":141204,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141205,"byte_end":141237,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141238,"byte_end":141270,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141271,"byte_end":141276,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141277,"byte_end":141321,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141322,"byte_end":141348,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141349,"byte_end":141426,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141427,"byte_end":141506,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141507,"byte_end":141520,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141521,"byte_end":141531,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141532,"byte_end":141537,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141538,"byte_end":141545,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10435},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143016,"byte_end":143025,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10437}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":142876,"byte_end":142919,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":142937,"byte_end":143004,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1579},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143805,"byte_end":143815,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143103,"byte_end":143169,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143170,"byte_end":143173,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143174,"byte_end":143254,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143255,"byte_end":143333,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143334,"byte_end":143402,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143403,"byte_end":143406,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143407,"byte_end":143487,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143488,"byte_end":143562,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143563,"byte_end":143566,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143567,"byte_end":143644,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143645,"byte_end":143702,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143703,"byte_end":143706,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143707,"byte_end":143719,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143720,"byte_end":143723,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143724,"byte_end":143797,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144196,"byte_end":144206,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144121,"byte_end":144184,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10511},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":147967,"byte_end":147974,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10514},{"krate":0,"index":10515}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10556},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148044,"byte_end":148052,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10560},{"krate":0,"index":10561},{"krate":0,"index":10562}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10613},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148128,"byte_end":148136,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":10618},{"krate":0,"index":10619},{"krate":0,"index":10620},{"krate":0,"index":10621}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10682},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148218,"byte_end":148226,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":10688},{"krate":0,"index":10689},{"krate":0,"index":10690},{"krate":0,"index":10691},{"krate":0,"index":10692}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1635},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149499,"byte_end":149507,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148264,"byte_end":148337,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148338,"byte_end":148370,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148371,"byte_end":148374,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148375,"byte_end":148446,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148447,"byte_end":148523,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148524,"byte_end":148596,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148597,"byte_end":148613,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148614,"byte_end":148617,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148618,"byte_end":148687,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148688,"byte_end":148714,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148715,"byte_end":148718,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148719,"byte_end":148733,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148734,"byte_end":148737,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148738,"byte_end":148814,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148815,"byte_end":148851,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148852,"byte_end":148855,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148856,"byte_end":148863,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148864,"byte_end":148905,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148906,"byte_end":148930,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148931,"byte_end":148934,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148935,"byte_end":148980,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":148981,"byte_end":149026,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149027,"byte_end":149065,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149066,"byte_end":149069,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149070,"byte_end":149109,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149110,"byte_end":149119,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149120,"byte_end":149127,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149128,"byte_end":149131,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149132,"byte_end":149202,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149203,"byte_end":149218,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149219,"byte_end":149222,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149223,"byte_end":149230,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149231,"byte_end":149272,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149273,"byte_end":149297,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149298,"byte_end":149301,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149302,"byte_end":149347,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149348,"byte_end":149394,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149395,"byte_end":149433,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149434,"byte_end":149437,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149438,"byte_end":149473,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149474,"byte_end":149483,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149484,"byte_end":149491,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1638},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150163,"byte_end":150172,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149745,"byte_end":149805,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149806,"byte_end":149809,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149810,"byte_end":149824,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149825,"byte_end":149828,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149829,"byte_end":149836,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149837,"byte_end":149878,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149879,"byte_end":149903,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149904,"byte_end":149907,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149908,"byte_end":149953,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":149954,"byte_end":149999,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150000,"byte_end":150045,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150046,"byte_end":150089,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150090,"byte_end":150093,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150094,"byte_end":150137,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150138,"byte_end":150147,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150148,"byte_end":150155,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151000,"byte_end":151009,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150530,"byte_end":150590,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150591,"byte_end":150594,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150595,"byte_end":150609,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150610,"byte_end":150613,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150614,"byte_end":150621,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150622,"byte_end":150663,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150664,"byte_end":150688,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150689,"byte_end":150692,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150693,"byte_end":150738,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150739,"byte_end":150784,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150785,"byte_end":150830,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150831,"byte_end":150876,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150877,"byte_end":150923,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150924,"byte_end":150927,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150928,"byte_end":150974,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150975,"byte_end":150984,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":150985,"byte_end":150992,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1647},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151981,"byte_end":151990,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151459,"byte_end":151519,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151520,"byte_end":151523,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151524,"byte_end":151538,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151539,"byte_end":151542,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151543,"byte_end":151550,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151551,"byte_end":151592,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151593,"byte_end":151617,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151618,"byte_end":151621,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151622,"byte_end":151667,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151668,"byte_end":151713,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151714,"byte_end":151759,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151760,"byte_end":151805,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151806,"byte_end":151851,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151852,"byte_end":151901,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151902,"byte_end":151905,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151906,"byte_end":151955,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151956,"byte_end":151965,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":151966,"byte_end":151973,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153482,"byte_end":153492,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1732}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153357,"byte_end":153402,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153403,"byte_end":153470,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1736},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155085,"byte_end":155097,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153836,"byte_end":153915,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153916,"byte_end":153946,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153947,"byte_end":153950,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153951,"byte_end":154030,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154031,"byte_end":154111,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154112,"byte_end":154130,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154131,"byte_end":154134,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154135,"byte_end":154213,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154214,"byte_end":154294,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154295,"byte_end":154369,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154370,"byte_end":154393,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154394,"byte_end":154397,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154398,"byte_end":154475,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154476,"byte_end":154533,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154534,"byte_end":154537,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154538,"byte_end":154552,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154553,"byte_end":154556,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154557,"byte_end":154564,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154565,"byte_end":154606,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154607,"byte_end":154653,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154654,"byte_end":154657,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154658,"byte_end":154681,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154682,"byte_end":154716,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154717,"byte_end":154751,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154752,"byte_end":154786,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154787,"byte_end":154793,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154794,"byte_end":154797,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154798,"byte_end":154861,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154862,"byte_end":154865,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154866,"byte_end":154889,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154890,"byte_end":154924,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154925,"byte_end":154960,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154961,"byte_end":154995,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":154996,"byte_end":155002,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155003,"byte_end":155006,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155007,"byte_end":155059,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155060,"byte_end":155069,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155070,"byte_end":155077,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10763},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":156995,"byte_end":157004,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":10766}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":156853,"byte_end":156898,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":156899,"byte_end":156966,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1782},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158589,"byte_end":158599,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157098,"byte_end":157168,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157169,"byte_end":157172,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157173,"byte_end":157251,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157252,"byte_end":157328,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157329,"byte_end":157401,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157402,"byte_end":157405,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157406,"byte_end":157478,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157479,"byte_end":157507,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157508,"byte_end":157511,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157512,"byte_end":157579,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157580,"byte_end":157651,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157652,"byte_end":157702,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157703,"byte_end":157706,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157707,"byte_end":157721,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157722,"byte_end":157725,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157726,"byte_end":157733,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157734,"byte_end":157818,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157819,"byte_end":157822,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157823,"byte_end":157880,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157881,"byte_end":157884,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157885,"byte_end":157967,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157968,"byte_end":158025,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158026,"byte_end":158083,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158084,"byte_end":158110,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158111,"byte_end":158116,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158117,"byte_end":158212,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158213,"byte_end":158236,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158237,"byte_end":158317,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158318,"byte_end":158399,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158400,"byte_end":158470,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158471,"byte_end":158542,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158543,"byte_end":158556,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158557,"byte_end":158567,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158568,"byte_end":158573,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158574,"byte_end":158581,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10771},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160230,"byte_end":160238,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":10773}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160091,"byte_end":160133,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160151,"byte_end":160218,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1832},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160960,"byte_end":160969,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160315,"byte_end":160409,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160410,"byte_end":160413,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160414,"byte_end":160503,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160504,"byte_end":160588,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160589,"byte_end":160670,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160671,"byte_end":160716,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160717,"byte_end":160720,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160721,"byte_end":160799,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160800,"byte_end":160857,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160858,"byte_end":160861,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160862,"byte_end":160874,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160875,"byte_end":160878,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160879,"byte_end":160952,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10780},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163712,"byte_end":163716,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":10777},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163679,"byte_end":163707,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10783},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163772,"byte_end":163777,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":10777},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163738,"byte_end":163767,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":10777},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163660,"byte_end":163666,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":10780},{"krate":0,"index":10783}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163137,"byte_end":163243,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163244,"byte_end":163247,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163248,"byte_end":163329,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163330,"byte_end":163333,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163334,"byte_end":163345,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163346,"byte_end":163378,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163379,"byte_end":163382,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163383,"byte_end":163424,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163425,"byte_end":163445,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163446,"byte_end":163449,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163450,"byte_end":163473,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163474,"byte_end":163513,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163514,"byte_end":163526,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163527,"byte_end":163567,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163568,"byte_end":163574,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163575,"byte_end":163578,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163579,"byte_end":163609,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163610,"byte_end":163618,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163619,"byte_end":163626,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164331,"byte_end":164343,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164183,"byte_end":164241,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164246,"byte_end":164249,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164254,"byte_end":164319,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164723,"byte_end":164736,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164574,"byte_end":164632,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164637,"byte_end":164640,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164645,"byte_end":164711,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165024,"byte_end":165034,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164951,"byte_end":165012,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1943},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171966,"byte_end":171975,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171596,"byte_end":171683,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171684,"byte_end":171687,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171688,"byte_end":171764,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171765,"byte_end":171818,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171819,"byte_end":171822,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171823,"byte_end":171900,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/abortable.rs","byte_start":171901,"byte_end":171958,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1977},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4232},{"krate":0,"index":4235},{"krate":0,"index":4238},{"krate":0,"index":4241},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4256},{"krate":0,"index":4259},{"krate":0,"index":4262},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4277},{"krate":0,"index":4280},{"krate":0,"index":4283},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4300},{"krate":0,"index":4303},{"krate":0,"index":4306},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5505},{"krate":0,"index":5508},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5517},{"krate":0,"index":5520},{"krate":0,"index":5523},{"krate":0,"index":5526},{"krate":0,"index":5529},{"krate":0,"index":5532},{"krate":0,"index":5535},{"krate":0,"index":5538},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5547},{"krate":0,"index":5550},{"krate":0,"index":5553},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5573},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5603},{"krate":0,"index":5606},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5690},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5829},{"krate":0,"index":5832},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5875},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6050},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6119},{"krate":0,"index":6122},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6631},{"krate":0,"index":6634},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6760},{"krate":0,"index":6763},{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6786},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6792},{"krate":0,"index":6795}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172227,"byte_end":172252,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172253,"byte_end":172256,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172257,"byte_end":172282,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172283,"byte_end":172286,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172287,"byte_end":172360,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172361,"byte_end":172386,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172387,"byte_end":172466,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172467,"byte_end":172504,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172505,"byte_end":172578,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":172579,"byte_end":172609,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":10801},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229047,"byte_end":229052,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10804},{"krate":0,"index":10805}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10850},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231177,"byte_end":231184,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10853},{"krate":0,"index":10854}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":232618,"byte_end":232623,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":10905},{"krate":0,"index":10906},{"krate":0,"index":10907}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10959},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":234457,"byte_end":234463,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":10961},{"krate":0,"index":10962}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10999},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":236090,"byte_end":236095,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11001},{"krate":0,"index":11002}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11039},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":237742,"byte_end":237751,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11041},{"krate":0,"index":11042}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11082},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":239383,"byte_end":239389,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11086},{"krate":0,"index":11087},{"krate":0,"index":11088},{"krate":0,"index":11089}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11151},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":242783,"byte_end":242792,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11155},{"krate":0,"index":11156},{"krate":0,"index":11157}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11223},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":245798,"byte_end":245805,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11226},{"krate":0,"index":11227}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11275},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":178017,"byte_end":178024,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11277}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11336},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":247622,"byte_end":247626,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11341},{"krate":0,"index":11342},{"krate":0,"index":11343},{"krate":0,"index":11344}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11405},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250083,"byte_end":250086,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11409},{"krate":0,"index":11410},{"krate":0,"index":11411},{"krate":0,"index":11412}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11466},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":252659,"byte_end":252662,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":11470},{"krate":0,"index":11471},{"krate":0,"index":11472},{"krate":0,"index":11473}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11536},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255328,"byte_end":255335,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11540},{"krate":0,"index":11541},{"krate":0,"index":11542}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11592},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":178738,"byte_end":178745,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11595}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11650},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":257571,"byte_end":257578,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11654},{"krate":0,"index":11655},{"krate":0,"index":11656}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11712},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259535,"byte_end":259539,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11714},{"krate":0,"index":11715}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259991,"byte_end":259998,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259722,"byte_end":259784,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259789,"byte_end":259792,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259797,"byte_end":259865,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259870,"byte_end":259936,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259941,"byte_end":259979,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":11755},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261357,"byte_end":261369,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":11757}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261187,"byte_end":261260,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261278,"byte_end":261345,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261932,"byte_end":261939,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261540,"byte_end":261613,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261618,"byte_end":261635,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261640,"byte_end":261643,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261648,"byte_end":261729,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261734,"byte_end":261816,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261821,"byte_end":261900,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261905,"byte_end":261920,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262550,"byte_end":262557,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262004,"byte_end":262071,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262076,"byte_end":262107,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262112,"byte_end":262115,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262120,"byte_end":262193,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262198,"byte_end":262253,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262258,"byte_end":262261,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262266,"byte_end":262347,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262352,"byte_end":262434,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262439,"byte_end":262518,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262523,"byte_end":262538,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263183,"byte_end":263194,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262630,"byte_end":262704,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262709,"byte_end":262740,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262745,"byte_end":262748,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262753,"byte_end":262826,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262831,"byte_end":262886,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262891,"byte_end":262894,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262899,"byte_end":262980,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":262985,"byte_end":263067,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263072,"byte_end":263151,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263156,"byte_end":263171,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263827,"byte_end":263837,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263307,"byte_end":263369,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263374,"byte_end":263377,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263382,"byte_end":263454,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263459,"byte_end":263530,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263535,"byte_end":263538,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263543,"byte_end":263624,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263629,"byte_end":263711,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263716,"byte_end":263795,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263800,"byte_end":263815,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":179364,"byte_end":179371,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11767}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11839},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":264861,"byte_end":264864,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11842},{"krate":0,"index":11843}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11896},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":179732,"byte_end":179739,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":11900}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11985},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266524,"byte_end":266528,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":11988}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266368,"byte_end":266427,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266445,"byte_end":266512,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11993},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267536,"byte_end":267550,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":11996}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267352,"byte_end":267427,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267428,"byte_end":267439,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267457,"byte_end":267524,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12006},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269141,"byte_end":269149,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12008},{"krate":0,"index":12009}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269582,"byte_end":269586,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269434,"byte_end":269500,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269505,"byte_end":269570,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269911,"byte_end":269920,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269673,"byte_end":269735,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269740,"byte_end":269743,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269748,"byte_end":269821,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269826,"byte_end":269899,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271235,"byte_end":271243,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270356,"byte_end":270430,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270435,"byte_end":270500,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270505,"byte_end":270508,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270513,"byte_end":270527,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270532,"byte_end":270535,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270540,"byte_end":270547,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270552,"byte_end":270593,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270598,"byte_end":270641,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270646,"byte_end":270671,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270676,"byte_end":270679,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270684,"byte_end":270740,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270745,"byte_end":270766,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270771,"byte_end":270774,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270779,"byte_end":270842,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270847,"byte_end":270901,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270906,"byte_end":270909,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270914,"byte_end":270990,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":270995,"byte_end":271050,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271055,"byte_end":271075,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271080,"byte_end":271099,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271104,"byte_end":271113,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271118,"byte_end":271123,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271128,"byte_end":271131,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271136,"byte_end":271197,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271202,"byte_end":271211,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271216,"byte_end":271223,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271418,"byte_end":271431,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271336,"byte_end":271406,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273422,"byte_end":273429,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271894,"byte_end":271967,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":271972,"byte_end":272006,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272011,"byte_end":272014,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272019,"byte_end":272094,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272099,"byte_end":272139,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272144,"byte_end":272147,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272152,"byte_end":272166,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272171,"byte_end":272174,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272179,"byte_end":272219,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272224,"byte_end":272227,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272232,"byte_end":272239,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272244,"byte_end":272285,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272290,"byte_end":272333,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272338,"byte_end":272363,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272368,"byte_end":272371,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272376,"byte_end":272423,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272428,"byte_end":272449,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272454,"byte_end":272507,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272512,"byte_end":272580,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272585,"byte_end":272658,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272663,"byte_end":272728,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272733,"byte_end":272817,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272822,"byte_end":272867,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272872,"byte_end":272881,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272886,"byte_end":272893,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272898,"byte_end":272901,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272906,"byte_end":272942,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272947,"byte_end":272950,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272955,"byte_end":272962,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":272967,"byte_end":273008,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273013,"byte_end":273056,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273061,"byte_end":273086,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273091,"byte_end":273094,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273099,"byte_end":273147,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273152,"byte_end":273173,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273178,"byte_end":273217,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273222,"byte_end":273287,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273292,"byte_end":273333,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273338,"byte_end":273384,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273389,"byte_end":273398,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273403,"byte_end":273410,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274453,"byte_end":274463,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273595,"byte_end":273668,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273673,"byte_end":273697,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273702,"byte_end":273705,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273710,"byte_end":273723,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273728,"byte_end":273731,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273736,"byte_end":273776,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273781,"byte_end":273784,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273789,"byte_end":273796,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273801,"byte_end":273842,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273847,"byte_end":273890,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273895,"byte_end":273920,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273925,"byte_end":273928,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273933,"byte_end":273980,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":273985,"byte_end":274006,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274011,"byte_end":274064,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274069,"byte_end":274131,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274136,"byte_end":274209,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274214,"byte_end":274273,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274278,"byte_end":274365,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274370,"byte_end":274415,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274420,"byte_end":274429,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274434,"byte_end":274441,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12049},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":275981,"byte_end":275985,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12052}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12090},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277043,"byte_end":277050,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12093}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12131},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278133,"byte_end":278139,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12135}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12180},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280003,"byte_end":280011,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12184}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12234},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":281628,"byte_end":281632,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12236},{"krate":0,"index":12237}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12277},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":283395,"byte_end":283404,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12281},{"krate":0,"index":12282},{"krate":0,"index":12283},{"krate":0,"index":12284},{"krate":0,"index":12285}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12355},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":286908,"byte_end":286912,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12357},{"krate":0,"index":12358}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12398},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":288948,"byte_end":288957,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12402},{"krate":0,"index":12403},{"krate":0,"index":12404},{"krate":0,"index":12405},{"krate":0,"index":12406}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12471},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":292437,"byte_end":292446,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12474},{"krate":0,"index":12475},{"krate":0,"index":12476},{"krate":0,"index":12477}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293730,"byte_end":293741,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293430,"byte_end":293484,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293489,"byte_end":293583,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293588,"byte_end":293651,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293656,"byte_end":293718,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295025,"byte_end":295036,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293878,"byte_end":293943,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293948,"byte_end":294005,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294010,"byte_end":294013,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294018,"byte_end":294083,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294088,"byte_end":294148,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294153,"byte_end":294156,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294161,"byte_end":294229,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294234,"byte_end":294277,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294282,"byte_end":294285,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294290,"byte_end":294304,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294309,"byte_end":294312,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294317,"byte_end":294324,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294329,"byte_end":294370,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294375,"byte_end":294399,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294404,"byte_end":294447,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294452,"byte_end":294480,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294485,"byte_end":294488,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294493,"byte_end":294531,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294536,"byte_end":294539,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294544,"byte_end":294562,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294567,"byte_end":294609,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294614,"byte_end":294629,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294634,"byte_end":294653,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294658,"byte_end":294683,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294688,"byte_end":294704,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294709,"byte_end":294742,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294747,"byte_end":294756,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294761,"byte_end":294768,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294773,"byte_end":294776,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294781,"byte_end":294830,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294835,"byte_end":294889,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294894,"byte_end":294897,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294902,"byte_end":294949,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294954,"byte_end":294987,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":294992,"byte_end":295001,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295006,"byte_end":295013,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295212,"byte_end":295222,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295115,"byte_end":295176,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295181,"byte_end":295200,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12532},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297154,"byte_end":297158,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12536},{"krate":0,"index":12537},{"krate":0,"index":12538}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12604},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":299698,"byte_end":299701,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12607},{"krate":0,"index":12608},{"krate":0,"index":12609},{"krate":0,"index":12610}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300219,"byte_end":300226,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300111,"byte_end":300185,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300190,"byte_end":300207,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3560},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300582,"byte_end":300589,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300320,"byte_end":300388,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300393,"byte_end":300424,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300429,"byte_end":300432,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300437,"byte_end":300510,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300515,"byte_end":300570,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300964,"byte_end":300975,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300695,"byte_end":300770,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300775,"byte_end":300806,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300811,"byte_end":300814,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300819,"byte_end":300892,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":300897,"byte_end":300952,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3562},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301381,"byte_end":301391,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301145,"byte_end":301208,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301213,"byte_end":301216,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301221,"byte_end":301293,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301298,"byte_end":301369,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12659},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":304220,"byte_end":304226,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12661},{"krate":0,"index":12662},{"krate":0,"index":12663}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12711},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":307329,"byte_end":307340,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12713},{"krate":0,"index":12714},{"krate":0,"index":12715}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12758},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":310886,"byte_end":310890,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":12763},{"krate":0,"index":12764},{"krate":0,"index":12765}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12831},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":314307,"byte_end":314322,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":12833},{"krate":0,"index":12834},{"krate":0,"index":12835}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12880},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":317633,"byte_end":317641,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":12882},{"krate":0,"index":12883},{"krate":0,"index":12884}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12929},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":320636,"byte_end":320653,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":12933},{"krate":0,"index":12934},{"krate":0,"index":12935},{"krate":0,"index":12936}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12990},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324098,"byte_end":324109,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":323935,"byte_end":323972,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":323990,"byte_end":324038,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324436,"byte_end":324443,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324199,"byte_end":324267,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324272,"byte_end":324346,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324351,"byte_end":324424,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":12997},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325118,"byte_end":325127,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":13000},{"krate":0,"index":13001}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324959,"byte_end":324994,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325012,"byte_end":325058,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325530,"byte_end":325537,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325293,"byte_end":325361,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325366,"byte_end":325440,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325445,"byte_end":325518,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4008},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":327991,"byte_end":328003,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":327792,"byte_end":327870,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":327871,"byte_end":327931,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4012},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328013,"byte_end":328035,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":4008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4013},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328037,"byte_end":328055,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":4008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13011},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":328973,"byte_end":328984,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13013},{"krate":0,"index":13014}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4087},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183204,"byte_end":183213,"line_start":226,"line_end":226,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4097},{"krate":0,"index":4101},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4132},{"krate":0,"index":4135},{"krate":0,"index":4138},{"krate":0,"index":4140},{"krate":0,"index":4143},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4154},{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4160},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165},{"krate":0,"index":4167},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4173},{"krate":0,"index":4175},{"krate":0,"index":4176}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183093,"byte_end":183167,"line_start":224,"line_end":224,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183168,"byte_end":183193,"line_start":225,"line_end":225,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184123,"byte_end":184127,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183228,"byte_end":183294,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183299,"byte_end":183302,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183307,"byte_end":183375,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183380,"byte_end":183455,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183460,"byte_end":183535,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183540,"byte_end":183594,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183599,"byte_end":183674,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183679,"byte_end":183689,"line_start":234,"line_end":234,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183694,"byte_end":183697,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183702,"byte_end":183716,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183721,"byte_end":183724,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183729,"byte_end":183736,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183741,"byte_end":183782,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183787,"byte_end":183830,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183835,"byte_end":183838,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183843,"byte_end":183884,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183889,"byte_end":183892,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183897,"byte_end":183942,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183947,"byte_end":183992,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183997,"byte_end":184042,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184047,"byte_end":184089,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184094,"byte_end":184103,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184108,"byte_end":184115,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4089},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185366,"byte_end":185377,"line_start":285,"line_end":285,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184269,"byte_end":184341,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184346,"byte_end":184407,"line_start":258,"line_end":258,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184412,"byte_end":184415,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184420,"byte_end":184495,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184500,"byte_end":184554,"line_start":261,"line_end":261,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184559,"byte_end":184562,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184567,"byte_end":184640,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184645,"byte_end":184707,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184712,"byte_end":184787,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184792,"byte_end":184846,"line_start":266,"line_end":266,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184851,"byte_end":184926,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184931,"byte_end":184941,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184946,"byte_end":184949,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184954,"byte_end":184968,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184973,"byte_end":184976,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184981,"byte_end":184988,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":184993,"byte_end":185034,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185039,"byte_end":185082,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185087,"byte_end":185090,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185095,"byte_end":185132,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185137,"byte_end":185140,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185145,"byte_end":185197,"line_start":278,"line_end":278,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185202,"byte_end":185232,"line_start":279,"line_end":279,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185237,"byte_end":185240,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185245,"byte_end":185297,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185302,"byte_end":185332,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185337,"byte_end":185346,"line_start":283,"line_end":283,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185351,"byte_end":185358,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186378,"byte_end":186381,"line_start":315,"line_end":315,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185542,"byte_end":185617,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185622,"byte_end":185645,"line_start":293,"line_end":293,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185650,"byte_end":185653,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185658,"byte_end":185730,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185735,"byte_end":185799,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185804,"byte_end":185841,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185846,"byte_end":185849,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185854,"byte_end":185930,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":185935,"byte_end":186006,"line_start":300,"line_end":300,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186011,"byte_end":186032,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186037,"byte_end":186040,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186045,"byte_end":186059,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186064,"byte_end":186067,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186072,"byte_end":186079,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186084,"byte_end":186125,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186130,"byte_end":186173,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186178,"byte_end":186181,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186186,"byte_end":186223,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186228,"byte_end":186267,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186272,"byte_end":186275,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186280,"byte_end":186344,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186349,"byte_end":186358,"line_start":313,"line_end":313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186363,"byte_end":186370,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4093},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187941,"byte_end":187950,"line_start":361,"line_end":361,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186548,"byte_end":186619,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186624,"byte_end":186643,"line_start":324,"line_end":324,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186648,"byte_end":186651,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186656,"byte_end":186721,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186726,"byte_end":186795,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186800,"byte_end":186811,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186816,"byte_end":186819,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186824,"byte_end":186899,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186904,"byte_end":186986,"line_start":331,"line_end":331,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":186991,"byte_end":187009,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187014,"byte_end":187017,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187022,"byte_end":187045,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187050,"byte_end":187053,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187058,"byte_end":187133,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187138,"byte_end":187225,"line_start":337,"line_end":337,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187230,"byte_end":187286,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187291,"byte_end":187294,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187299,"byte_end":187311,"line_start":340,"line_end":340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187316,"byte_end":187319,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187324,"byte_end":187393,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187398,"byte_end":187423,"line_start":343,"line_end":343,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187428,"byte_end":187431,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187436,"byte_end":187450,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187455,"byte_end":187458,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187463,"byte_end":187470,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187475,"byte_end":187516,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187521,"byte_end":187564,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187569,"byte_end":187572,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187577,"byte_end":187628,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187633,"byte_end":187636,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187641,"byte_end":187681,"line_start":353,"line_end":353,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187686,"byte_end":187689,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187694,"byte_end":187746,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187751,"byte_end":187803,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187808,"byte_end":187860,"line_start":357,"line_end":357,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187865,"byte_end":187907,"line_start":358,"line_end":358,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187912,"byte_end":187921,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":187926,"byte_end":187933,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189179,"byte_end":189185,"line_start":394,"line_end":394,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188094,"byte_end":188166,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188171,"byte_end":188198,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188203,"byte_end":188206,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188211,"byte_end":188286,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188291,"byte_end":188362,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188367,"byte_end":188439,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188444,"byte_end":188518,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188523,"byte_end":188581,"line_start":375,"line_end":375,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188586,"byte_end":188589,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188594,"byte_end":188670,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188675,"byte_end":188749,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188754,"byte_end":188775,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188780,"byte_end":188783,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188788,"byte_end":188802,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188807,"byte_end":188810,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188815,"byte_end":188822,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188827,"byte_end":188868,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188873,"byte_end":188897,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188902,"byte_end":188945,"line_start":386,"line_end":386,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188950,"byte_end":188953,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":188958,"byte_end":188996,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189001,"byte_end":189062,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189067,"byte_end":189070,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189075,"byte_end":189145,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189150,"byte_end":189159,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189164,"byte_end":189171,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190510,"byte_end":190520,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189413,"byte_end":189488,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189493,"byte_end":189569,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189574,"byte_end":189577,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189582,"byte_end":189657,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189662,"byte_end":189737,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189742,"byte_end":189818,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189823,"byte_end":189888,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189893,"byte_end":189896,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189901,"byte_end":189977,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":189982,"byte_end":190056,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190061,"byte_end":190086,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190091,"byte_end":190094,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190099,"byte_end":190113,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190118,"byte_end":190125,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190130,"byte_end":190171,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190176,"byte_end":190219,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190224,"byte_end":190227,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190232,"byte_end":190270,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190275,"byte_end":190325,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190330,"byte_end":190381,"line_start":422,"line_end":422,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190386,"byte_end":190393,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190398,"byte_end":190401,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190406,"byte_end":190476,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190481,"byte_end":190490,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190495,"byte_end":190502,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4101},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191549,"byte_end":191553,"line_start":459,"line_end":459,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190752,"byte_end":190825,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190830,"byte_end":190858,"line_start":438,"line_end":438,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190863,"byte_end":190866,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190871,"byte_end":190945,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":190950,"byte_end":191017,"line_start":441,"line_end":441,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191022,"byte_end":191067,"line_start":442,"line_end":442,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191072,"byte_end":191075,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191080,"byte_end":191156,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191161,"byte_end":191187,"line_start":445,"line_end":445,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191192,"byte_end":191195,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191200,"byte_end":191214,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191219,"byte_end":191222,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191227,"byte_end":191234,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191239,"byte_end":191280,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191285,"byte_end":191328,"line_start":451,"line_end":451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191333,"byte_end":191336,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191341,"byte_end":191378,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191383,"byte_end":191438,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191443,"byte_end":191446,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191451,"byte_end":191515,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191520,"byte_end":191529,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191534,"byte_end":191541,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192487,"byte_end":192494,"line_start":493,"line_end":493,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191762,"byte_end":191816,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191821,"byte_end":191876,"line_start":469,"line_end":469,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191881,"byte_end":191884,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191889,"byte_end":191957,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191962,"byte_end":191965,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191970,"byte_end":191984,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191989,"byte_end":191992,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":191997,"byte_end":192004,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192009,"byte_end":192050,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192055,"byte_end":192086,"line_start":477,"line_end":477,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192091,"byte_end":192126,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192131,"byte_end":192151,"line_start":479,"line_end":479,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192156,"byte_end":192159,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192164,"byte_end":192201,"line_start":481,"line_end":481,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192206,"byte_end":192209,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192214,"byte_end":192241,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192246,"byte_end":192270,"line_start":484,"line_end":484,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192275,"byte_end":192317,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192322,"byte_end":192331,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192336,"byte_end":192343,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192348,"byte_end":192351,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192356,"byte_end":192404,"line_start":489,"line_end":489,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192409,"byte_end":192453,"line_start":490,"line_end":490,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192458,"byte_end":192467,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192472,"byte_end":192479,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193613,"byte_end":193618,"line_start":530,"line_end":530,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192652,"byte_end":192703,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192708,"byte_end":192743,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192748,"byte_end":192751,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192756,"byte_end":192810,"line_start":503,"line_end":503,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192815,"byte_end":192872,"line_start":504,"line_end":504,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192877,"byte_end":192913,"line_start":505,"line_end":505,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192918,"byte_end":192921,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192926,"byte_end":192994,"line_start":507,"line_end":507,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":192999,"byte_end":193002,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193007,"byte_end":193021,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193026,"byte_end":193029,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193034,"byte_end":193041,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193046,"byte_end":193087,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193092,"byte_end":193123,"line_start":513,"line_end":513,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193128,"byte_end":193163,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193168,"byte_end":193188,"line_start":515,"line_end":515,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193193,"byte_end":193196,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193201,"byte_end":193238,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193243,"byte_end":193246,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193251,"byte_end":193278,"line_start":519,"line_end":519,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193283,"byte_end":193326,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193331,"byte_end":193374,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193379,"byte_end":193422,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193427,"byte_end":193434,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193439,"byte_end":193442,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193447,"byte_end":193501,"line_start":525,"line_end":525,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193506,"byte_end":193540,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193545,"byte_end":193579,"line_start":527,"line_end":527,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193584,"byte_end":193593,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193598,"byte_end":193605,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194914,"byte_end":194920,"line_start":571,"line_end":571,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193879,"byte_end":193941,"line_start":539,"line_end":539,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":193946,"byte_end":194010,"line_start":540,"line_end":540,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194015,"byte_end":194018,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194023,"byte_end":194087,"line_start":542,"line_end":542,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194092,"byte_end":194157,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194162,"byte_end":194208,"line_start":544,"line_end":544,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194213,"byte_end":194216,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194221,"byte_end":194270,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194275,"byte_end":194315,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194320,"byte_end":194323,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194328,"byte_end":194342,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194347,"byte_end":194350,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194355,"byte_end":194362,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194367,"byte_end":194408,"line_start":552,"line_end":552,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194413,"byte_end":194444,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194449,"byte_end":194484,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194489,"byte_end":194509,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194514,"byte_end":194517,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194522,"byte_end":194559,"line_start":557,"line_end":557,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194564,"byte_end":194567,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194572,"byte_end":194599,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194604,"byte_end":194635,"line_start":560,"line_end":560,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194640,"byte_end":194666,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194671,"byte_end":194737,"line_start":562,"line_end":562,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194742,"byte_end":194751,"line_start":563,"line_end":563,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194756,"byte_end":194763,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194768,"byte_end":194771,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194776,"byte_end":194811,"line_start":566,"line_end":566,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194816,"byte_end":194819,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194824,"byte_end":194880,"line_start":568,"line_end":568,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194885,"byte_end":194894,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":194899,"byte_end":194906,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195984,"byte_end":195989,"line_start":602,"line_end":602,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195150,"byte_end":195181,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195186,"byte_end":195189,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195194,"byte_end":195261,"line_start":581,"line_end":581,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195266,"byte_end":195338,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195343,"byte_end":195400,"line_start":583,"line_end":583,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195405,"byte_end":195408,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195413,"byte_end":195427,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195432,"byte_end":195435,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195440,"byte_end":195447,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195452,"byte_end":195493,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195498,"byte_end":195541,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195546,"byte_end":195568,"line_start":590,"line_end":590,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195573,"byte_end":195620,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195625,"byte_end":195628,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195633,"byte_end":195674,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195679,"byte_end":195720,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195725,"byte_end":195766,"line_start":595,"line_end":595,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195771,"byte_end":195812,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195817,"byte_end":195858,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195863,"byte_end":195904,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195909,"byte_end":195950,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195955,"byte_end":195964,"line_start":600,"line_end":600,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":195969,"byte_end":195976,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196939,"byte_end":196943,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196124,"byte_end":196191,"line_start":609,"line_end":609,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196196,"byte_end":196248,"line_start":610,"line_end":610,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196253,"byte_end":196256,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196261,"byte_end":196331,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196336,"byte_end":196412,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196417,"byte_end":196493,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196498,"byte_end":196568,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196573,"byte_end":196599,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196604,"byte_end":196607,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196612,"byte_end":196626,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196631,"byte_end":196634,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196639,"byte_end":196646,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196651,"byte_end":196692,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196697,"byte_end":196740,"line_start":622,"line_end":622,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196745,"byte_end":196748,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196753,"byte_end":196796,"line_start":624,"line_end":624,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196801,"byte_end":196870,"line_start":625,"line_end":625,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196875,"byte_end":196905,"line_start":626,"line_end":626,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196910,"byte_end":196919,"line_start":627,"line_end":627,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":196924,"byte_end":196931,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197644,"byte_end":197647,"line_start":651,"line_end":651,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197178,"byte_end":197291,"line_start":638,"line_end":638,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197296,"byte_end":197299,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197304,"byte_end":197318,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197323,"byte_end":197326,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197331,"byte_end":197338,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197343,"byte_end":197384,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197389,"byte_end":197432,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197437,"byte_end":197440,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197445,"byte_end":197489,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197494,"byte_end":197563,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197568,"byte_end":197610,"line_start":648,"line_end":648,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197615,"byte_end":197624,"line_start":649,"line_end":649,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197629,"byte_end":197636,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4120},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198334,"byte_end":198337,"line_start":673,"line_end":673,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197862,"byte_end":197975,"line_start":660,"line_end":660,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197980,"byte_end":197983,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":197988,"byte_end":198002,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198007,"byte_end":198010,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198015,"byte_end":198022,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198027,"byte_end":198068,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198073,"byte_end":198116,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198121,"byte_end":198124,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198129,"byte_end":198173,"line_start":668,"line_end":668,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198178,"byte_end":198250,"line_start":669,"line_end":669,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198255,"byte_end":198300,"line_start":670,"line_end":670,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198305,"byte_end":198314,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198319,"byte_end":198326,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199511,"byte_end":199518,"line_start":713,"line_end":713,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198552,"byte_end":198617,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198622,"byte_end":198625,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198630,"byte_end":198644,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198649,"byte_end":198652,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198657,"byte_end":198664,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198669,"byte_end":198710,"line_start":687,"line_end":687,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198715,"byte_end":198746,"line_start":688,"line_end":688,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198751,"byte_end":198786,"line_start":689,"line_end":689,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198791,"byte_end":198811,"line_start":690,"line_end":690,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198816,"byte_end":198819,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198824,"byte_end":198863,"line_start":692,"line_end":692,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198868,"byte_end":198907,"line_start":693,"line_end":693,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198912,"byte_end":198951,"line_start":694,"line_end":694,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198956,"byte_end":198959,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198964,"byte_end":198991,"line_start":696,"line_end":696,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":198996,"byte_end":199035,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199040,"byte_end":199079,"line_start":698,"line_end":698,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199084,"byte_end":199091,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199096,"byte_end":199123,"line_start":700,"line_end":700,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199128,"byte_end":199167,"line_start":701,"line_end":701,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199172,"byte_end":199211,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199216,"byte_end":199223,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199228,"byte_end":199255,"line_start":704,"line_end":704,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199260,"byte_end":199301,"line_start":705,"line_end":705,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199306,"byte_end":199347,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199352,"byte_end":199359,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199364,"byte_end":199367,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199372,"byte_end":199431,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199436,"byte_end":199477,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199482,"byte_end":199491,"line_start":711,"line_end":711,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199496,"byte_end":199503,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200780,"byte_end":200788,"line_start":746,"line_end":746,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199695,"byte_end":199767,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199772,"byte_end":199775,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199780,"byte_end":199857,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199862,"byte_end":199937,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":199942,"byte_end":200018,"line_start":725,"line_end":725,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200023,"byte_end":200026,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200031,"byte_end":200113,"line_start":727,"line_end":727,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200118,"byte_end":200201,"line_start":728,"line_end":728,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200206,"byte_end":200209,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200214,"byte_end":200290,"line_start":730,"line_end":730,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200295,"byte_end":200371,"line_start":731,"line_end":731,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200376,"byte_end":200397,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200402,"byte_end":200405,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200410,"byte_end":200424,"line_start":734,"line_end":734,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200429,"byte_end":200432,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200437,"byte_end":200444,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200449,"byte_end":200490,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200495,"byte_end":200538,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200543,"byte_end":200546,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200551,"byte_end":200588,"line_start":740,"line_end":740,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200593,"byte_end":200660,"line_start":741,"line_end":741,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200665,"byte_end":200668,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200673,"byte_end":200746,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200751,"byte_end":200760,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200765,"byte_end":200772,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201800,"byte_end":201804,"line_start":779,"line_end":779,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":200991,"byte_end":201062,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201067,"byte_end":201097,"line_start":756,"line_end":756,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201102,"byte_end":201105,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201110,"byte_end":201185,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201190,"byte_end":201261,"line_start":759,"line_end":759,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201266,"byte_end":201306,"line_start":760,"line_end":760,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201311,"byte_end":201314,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201319,"byte_end":201333,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201338,"byte_end":201341,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201346,"byte_end":201353,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201358,"byte_end":201399,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201404,"byte_end":201428,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201433,"byte_end":201476,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201481,"byte_end":201484,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201489,"byte_end":201527,"line_start":769,"line_end":769,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201532,"byte_end":201535,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201540,"byte_end":201584,"line_start":771,"line_end":771,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201589,"byte_end":201609,"line_start":772,"line_end":772,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201614,"byte_end":201677,"line_start":773,"line_end":773,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201682,"byte_end":201689,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201694,"byte_end":201697,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201702,"byte_end":201766,"line_start":776,"line_end":776,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201771,"byte_end":201780,"line_start":777,"line_end":777,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":201785,"byte_end":201792,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202851,"byte_end":202861,"line_start":810,"line_end":810,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202073,"byte_end":202147,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202152,"byte_end":202175,"line_start":789,"line_end":789,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202180,"byte_end":202183,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202188,"byte_end":202261,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202266,"byte_end":202338,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202343,"byte_end":202420,"line_start":793,"line_end":793,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202425,"byte_end":202436,"line_start":794,"line_end":794,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202441,"byte_end":202444,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202449,"byte_end":202463,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202468,"byte_end":202471,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202476,"byte_end":202483,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202488,"byte_end":202529,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202534,"byte_end":202558,"line_start":800,"line_end":800,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202563,"byte_end":202606,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202611,"byte_end":202614,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202619,"byte_end":202657,"line_start":803,"line_end":803,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202662,"byte_end":202665,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202670,"byte_end":202733,"line_start":805,"line_end":805,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202738,"byte_end":202741,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202746,"byte_end":202817,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202822,"byte_end":202831,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":202836,"byte_end":202843,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203850,"byte_end":203860,"line_start":840,"line_end":840,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203095,"byte_end":203171,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203176,"byte_end":203199,"line_start":820,"line_end":820,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203204,"byte_end":203207,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203212,"byte_end":203287,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203292,"byte_end":203364,"line_start":823,"line_end":823,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203369,"byte_end":203436,"line_start":824,"line_end":824,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203441,"byte_end":203444,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203449,"byte_end":203463,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203468,"byte_end":203471,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203476,"byte_end":203483,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203488,"byte_end":203529,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203534,"byte_end":203558,"line_start":830,"line_end":830,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203563,"byte_end":203606,"line_start":831,"line_end":831,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203611,"byte_end":203614,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203619,"byte_end":203657,"line_start":833,"line_end":833,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203662,"byte_end":203665,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203670,"byte_end":203733,"line_start":835,"line_end":835,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203738,"byte_end":203741,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203746,"byte_end":203816,"line_start":837,"line_end":837,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203821,"byte_end":203830,"line_start":838,"line_end":838,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":203835,"byte_end":203842,"line_start":839,"line_end":839,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205376,"byte_end":205386,"line_start":885,"line_end":885,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204094,"byte_end":204164,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204169,"byte_end":204172,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204177,"byte_end":204248,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204253,"byte_end":204325,"line_start":852,"line_end":852,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204330,"byte_end":204400,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204405,"byte_end":204408,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204413,"byte_end":204484,"line_start":855,"line_end":855,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204489,"byte_end":204575,"line_start":856,"line_end":856,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204580,"byte_end":204647,"line_start":857,"line_end":857,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204652,"byte_end":204716,"line_start":858,"line_end":858,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204721,"byte_end":204724,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204729,"byte_end":204743,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204748,"byte_end":204751,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204756,"byte_end":204763,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204768,"byte_end":204809,"line_start":863,"line_end":863,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204814,"byte_end":204838,"line_start":864,"line_end":864,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204843,"byte_end":204886,"line_start":865,"line_end":865,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204891,"byte_end":204919,"line_start":866,"line_end":866,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204924,"byte_end":204927,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204932,"byte_end":204970,"line_start":868,"line_end":868,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204975,"byte_end":204978,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":204983,"byte_end":205001,"line_start":870,"line_end":870,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205006,"byte_end":205048,"line_start":871,"line_end":871,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205053,"byte_end":205068,"line_start":872,"line_end":872,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205073,"byte_end":205092,"line_start":873,"line_end":873,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205097,"byte_end":205122,"line_start":874,"line_end":874,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205127,"byte_end":205143,"line_start":875,"line_end":875,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205148,"byte_end":205175,"line_start":876,"line_end":876,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205180,"byte_end":205189,"line_start":877,"line_end":877,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205194,"byte_end":205201,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205206,"byte_end":205209,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205214,"byte_end":205259,"line_start":880,"line_end":880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205264,"byte_end":205267,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205272,"byte_end":205342,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205347,"byte_end":205356,"line_start":883,"line_end":883,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205361,"byte_end":205368,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206625,"byte_end":206633,"line_start":926,"line_end":926,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205567,"byte_end":205638,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205643,"byte_end":205686,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205691,"byte_end":205694,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205699,"byte_end":205774,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205779,"byte_end":205849,"line_start":897,"line_end":897,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205854,"byte_end":205892,"line_start":898,"line_end":898,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205897,"byte_end":205900,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205905,"byte_end":205980,"line_start":900,"line_end":900,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":205985,"byte_end":206028,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206033,"byte_end":206036,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206041,"byte_end":206114,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206119,"byte_end":206162,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206167,"byte_end":206170,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206175,"byte_end":206189,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206194,"byte_end":206197,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206202,"byte_end":206209,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206214,"byte_end":206255,"line_start":909,"line_end":909,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206260,"byte_end":206284,"line_start":910,"line_end":910,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206289,"byte_end":206332,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206337,"byte_end":206340,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206345,"byte_end":206363,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206368,"byte_end":206371,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206376,"byte_end":206381,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206386,"byte_end":206447,"line_start":916,"line_end":916,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206452,"byte_end":206474,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206479,"byte_end":206508,"line_start":918,"line_end":918,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206513,"byte_end":206524,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206529,"byte_end":206547,"line_start":920,"line_end":920,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206552,"byte_end":206557,"line_start":921,"line_end":921,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206562,"byte_end":206565,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206570,"byte_end":206591,"line_start":923,"line_end":923,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206596,"byte_end":206605,"line_start":924,"line_end":924,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206610,"byte_end":206617,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208795,"byte_end":208814,"line_start":982,"line_end":982,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206852,"byte_end":206923,"line_start":935,"line_end":935,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":206928,"byte_end":207002,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207007,"byte_end":207021,"line_start":937,"line_end":937,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207026,"byte_end":207029,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207034,"byte_end":207097,"line_start":939,"line_end":939,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207102,"byte_end":207173,"line_start":940,"line_end":940,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207178,"byte_end":207230,"line_start":941,"line_end":941,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207235,"byte_end":207238,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207243,"byte_end":207318,"line_start":943,"line_end":943,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207323,"byte_end":207393,"line_start":944,"line_end":944,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207398,"byte_end":207462,"line_start":945,"line_end":945,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207467,"byte_end":207470,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207475,"byte_end":207546,"line_start":947,"line_end":947,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207551,"byte_end":207621,"line_start":948,"line_end":948,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207626,"byte_end":207687,"line_start":949,"line_end":949,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207692,"byte_end":207759,"line_start":950,"line_end":950,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207764,"byte_end":207833,"line_start":951,"line_end":951,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207838,"byte_end":207910,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207915,"byte_end":207918,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":207923,"byte_end":207998,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208003,"byte_end":208060,"line_start":955,"line_end":955,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208065,"byte_end":208068,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208073,"byte_end":208087,"line_start":957,"line_end":957,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208092,"byte_end":208095,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208100,"byte_end":208107,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208112,"byte_end":208153,"line_start":960,"line_end":960,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208158,"byte_end":208192,"line_start":961,"line_end":961,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208197,"byte_end":208240,"line_start":962,"line_end":962,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208245,"byte_end":208248,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208253,"byte_end":208293,"line_start":964,"line_end":964,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208298,"byte_end":208338,"line_start":965,"line_end":965,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208343,"byte_end":208383,"line_start":966,"line_end":966,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208388,"byte_end":208391,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208396,"byte_end":208464,"line_start":968,"line_end":968,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208469,"byte_end":208491,"line_start":969,"line_end":969,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208496,"byte_end":208521,"line_start":970,"line_end":970,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208526,"byte_end":208556,"line_start":971,"line_end":971,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208561,"byte_end":208570,"line_start":972,"line_end":972,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208575,"byte_end":208581,"line_start":973,"line_end":973,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208586,"byte_end":208612,"line_start":974,"line_end":974,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208617,"byte_end":208643,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208648,"byte_end":208674,"line_start":976,"line_end":976,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208679,"byte_end":208693,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208698,"byte_end":208706,"line_start":978,"line_end":978,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208711,"byte_end":208718,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208723,"byte_end":208757,"line_start":980,"line_end":980,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":208762,"byte_end":208787,"line_start":981,"line_end":981,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209639,"byte_end":209643,"line_start":1011,"line_end":1011,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209131,"byte_end":209202,"line_start":995,"line_end":995,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209207,"byte_end":209210,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209215,"byte_end":209288,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209293,"byte_end":209328,"line_start":998,"line_end":998,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209333,"byte_end":209336,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209341,"byte_end":209355,"line_start":1000,"line_end":1000,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209360,"byte_end":209363,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209368,"byte_end":209375,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209380,"byte_end":209421,"line_start":1003,"line_end":1003,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209426,"byte_end":209469,"line_start":1004,"line_end":1004,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209474,"byte_end":209477,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209482,"byte_end":209528,"line_start":1006,"line_end":1006,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209533,"byte_end":209536,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209541,"byte_end":209605,"line_start":1008,"line_end":1008,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209610,"byte_end":209619,"line_start":1009,"line_end":1009,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209624,"byte_end":209631,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210308,"byte_end":210312,"line_start":1034,"line_end":1034,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209781,"byte_end":209853,"line_start":1018,"line_end":1018,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209858,"byte_end":209861,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209866,"byte_end":209939,"line_start":1020,"line_end":1020,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209944,"byte_end":209990,"line_start":1021,"line_end":1021,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":209995,"byte_end":209998,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210003,"byte_end":210017,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210022,"byte_end":210025,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210030,"byte_end":210037,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210042,"byte_end":210083,"line_start":1026,"line_end":1026,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210088,"byte_end":210131,"line_start":1027,"line_end":1027,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210136,"byte_end":210139,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210144,"byte_end":210190,"line_start":1029,"line_end":1029,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210195,"byte_end":210198,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210203,"byte_end":210274,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210279,"byte_end":210288,"line_start":1032,"line_end":1032,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210293,"byte_end":210300,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211933,"byte_end":211937,"line_start":1080,"line_end":1080,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210450,"byte_end":210521,"line_start":1041,"line_end":1041,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210526,"byte_end":210599,"line_start":1042,"line_end":1042,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210604,"byte_end":210642,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210647,"byte_end":210650,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210655,"byte_end":210709,"line_start":1045,"line_end":1045,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210714,"byte_end":210786,"line_start":1046,"line_end":1046,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210791,"byte_end":210867,"line_start":1047,"line_end":1047,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210872,"byte_end":210940,"line_start":1048,"line_end":1048,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":210945,"byte_end":211021,"line_start":1049,"line_end":1049,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211026,"byte_end":211048,"line_start":1050,"line_end":1050,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211053,"byte_end":211056,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211061,"byte_end":211128,"line_start":1052,"line_end":1052,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211133,"byte_end":211201,"line_start":1053,"line_end":1053,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211206,"byte_end":211219,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211224,"byte_end":211227,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211232,"byte_end":211246,"line_start":1056,"line_end":1056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211251,"byte_end":211254,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211259,"byte_end":211266,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211271,"byte_end":211314,"line_start":1059,"line_end":1059,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211319,"byte_end":211362,"line_start":1060,"line_end":1060,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211367,"byte_end":211395,"line_start":1061,"line_end":1061,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211400,"byte_end":211403,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211408,"byte_end":211426,"line_start":1063,"line_end":1063,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211431,"byte_end":211469,"line_start":1064,"line_end":1064,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211474,"byte_end":211489,"line_start":1065,"line_end":1065,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211494,"byte_end":211511,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211516,"byte_end":211558,"line_start":1067,"line_end":1067,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211563,"byte_end":211598,"line_start":1068,"line_end":1068,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211603,"byte_end":211647,"line_start":1069,"line_end":1069,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211652,"byte_end":211661,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211666,"byte_end":211680,"line_start":1071,"line_end":1071,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211685,"byte_end":211688,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211693,"byte_end":211736,"line_start":1073,"line_end":1073,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211741,"byte_end":211778,"line_start":1074,"line_end":1074,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211783,"byte_end":211820,"line_start":1075,"line_end":1075,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211825,"byte_end":211859,"line_start":1076,"line_end":1076,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211864,"byte_end":211898,"line_start":1077,"line_end":1077,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211903,"byte_end":211913,"line_start":1078,"line_end":1078,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":211918,"byte_end":211925,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212866,"byte_end":212872,"line_start":1113,"line_end":1113,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212062,"byte_end":212109,"line_start":1087,"line_end":1087,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212114,"byte_end":212117,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212122,"byte_end":212196,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212201,"byte_end":212238,"line_start":1090,"line_end":1090,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212243,"byte_end":212246,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212251,"byte_end":212265,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212270,"byte_end":212273,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212278,"byte_end":212285,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212290,"byte_end":212331,"line_start":1095,"line_end":1095,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212336,"byte_end":212379,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212384,"byte_end":212387,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212392,"byte_end":212432,"line_start":1098,"line_end":1098,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212437,"byte_end":212440,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212445,"byte_end":212474,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212479,"byte_end":212507,"line_start":1101,"line_end":1101,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212512,"byte_end":212569,"line_start":1102,"line_end":1102,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212574,"byte_end":212601,"line_start":1103,"line_end":1103,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212606,"byte_end":212629,"line_start":1104,"line_end":1104,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212634,"byte_end":212637,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212642,"byte_end":212677,"line_start":1106,"line_end":1106,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212682,"byte_end":212710,"line_start":1107,"line_end":1107,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212715,"byte_end":212772,"line_start":1108,"line_end":1108,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212777,"byte_end":212804,"line_start":1109,"line_end":1109,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212809,"byte_end":212832,"line_start":1110,"line_end":1110,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212837,"byte_end":212846,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212851,"byte_end":212858,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214631,"byte_end":214643,"line_start":1158,"line_end":1158,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212923,"byte_end":212977,"line_start":1117,"line_end":1117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212982,"byte_end":212985,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":212990,"byte_end":213065,"line_start":1119,"line_end":1119,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213070,"byte_end":213073,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213078,"byte_end":213153,"line_start":1121,"line_end":1121,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213158,"byte_end":213232,"line_start":1122,"line_end":1122,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213237,"byte_end":213311,"line_start":1123,"line_end":1123,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213316,"byte_end":213365,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213370,"byte_end":213373,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213378,"byte_end":213453,"line_start":1126,"line_end":1126,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213458,"byte_end":213528,"line_start":1127,"line_end":1127,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213533,"byte_end":213600,"line_start":1128,"line_end":1128,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213605,"byte_end":213677,"line_start":1129,"line_end":1129,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213682,"byte_end":213751,"line_start":1130,"line_end":1130,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213756,"byte_end":213771,"line_start":1131,"line_end":1131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213776,"byte_end":213779,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213784,"byte_end":213848,"line_start":1133,"line_end":1133,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213853,"byte_end":213910,"line_start":1134,"line_end":1134,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213915,"byte_end":213918,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213923,"byte_end":213937,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213942,"byte_end":213945,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213950,"byte_end":213957,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":213962,"byte_end":214003,"line_start":1139,"line_end":1139,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214008,"byte_end":214051,"line_start":1140,"line_end":1140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214056,"byte_end":214059,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214064,"byte_end":214126,"line_start":1142,"line_end":1142,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214131,"byte_end":214161,"line_start":1143,"line_end":1143,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214166,"byte_end":214220,"line_start":1144,"line_end":1144,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214225,"byte_end":214255,"line_start":1145,"line_end":1145,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214260,"byte_end":214309,"line_start":1146,"line_end":1146,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214314,"byte_end":214317,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214322,"byte_end":214384,"line_start":1148,"line_end":1148,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214389,"byte_end":214411,"line_start":1149,"line_end":1149,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214416,"byte_end":214436,"line_start":1150,"line_end":1150,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214441,"byte_end":214483,"line_start":1151,"line_end":1151,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214488,"byte_end":214493,"line_start":1152,"line_end":1152,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214498,"byte_end":214531,"line_start":1153,"line_end":1153,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214536,"byte_end":214569,"line_start":1154,"line_end":1154,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214574,"byte_end":214583,"line_start":1155,"line_end":1155,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214588,"byte_end":214595,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214600,"byte_end":214623,"line_start":1157,"line_end":1157,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215019,"byte_end":215024,"line_start":1170,"line_end":1170,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214790,"byte_end":214831,"line_start":1165,"line_end":1165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214836,"byte_end":214839,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214844,"byte_end":214919,"line_start":1167,"line_end":1167,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214924,"byte_end":214981,"line_start":1168,"line_end":1168,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":214986,"byte_end":215011,"line_start":1169,"line_end":1169,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215480,"byte_end":215491,"line_start":1184,"line_end":1184,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215179,"byte_end":215220,"line_start":1177,"line_end":1177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215225,"byte_end":215228,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215233,"byte_end":215292,"line_start":1179,"line_end":1179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215297,"byte_end":215300,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215305,"byte_end":215380,"line_start":1181,"line_end":1181,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215385,"byte_end":215442,"line_start":1182,"line_end":1182,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215447,"byte_end":215472,"line_start":1183,"line_end":1183,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216384,"byte_end":216392,"line_start":1205,"line_end":1205,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215644,"byte_end":215707,"line_start":1191,"line_end":1191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215712,"byte_end":215715,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215720,"byte_end":215795,"line_start":1193,"line_end":1193,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215800,"byte_end":215876,"line_start":1194,"line_end":1194,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215881,"byte_end":215954,"line_start":1195,"line_end":1195,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":215959,"byte_end":216032,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216037,"byte_end":216079,"line_start":1197,"line_end":1197,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216084,"byte_end":216087,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216092,"byte_end":216157,"line_start":1199,"line_end":1199,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216162,"byte_end":216165,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216170,"byte_end":216245,"line_start":1201,"line_end":1201,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216250,"byte_end":216307,"line_start":1202,"line_end":1202,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216312,"byte_end":216346,"line_start":1203,"line_end":1203,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216351,"byte_end":216376,"line_start":1204,"line_end":1204,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218072,"byte_end":218088,"line_start":1250,"line_end":1250,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216586,"byte_end":216661,"line_start":1213,"line_end":1213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216666,"byte_end":216669,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216674,"byte_end":216749,"line_start":1215,"line_end":1215,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216754,"byte_end":216828,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216833,"byte_end":216905,"line_start":1217,"line_end":1217,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216910,"byte_end":216984,"line_start":1218,"line_end":1218,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":216989,"byte_end":217018,"line_start":1219,"line_end":1219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217023,"byte_end":217026,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217031,"byte_end":217096,"line_start":1221,"line_end":1221,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217101,"byte_end":217104,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217109,"byte_end":217184,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217189,"byte_end":217246,"line_start":1224,"line_end":1224,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217251,"byte_end":217254,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217259,"byte_end":217273,"line_start":1226,"line_end":1226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217278,"byte_end":217281,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217286,"byte_end":217293,"line_start":1228,"line_end":1228,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217298,"byte_end":217339,"line_start":1229,"line_end":1229,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217344,"byte_end":217378,"line_start":1230,"line_end":1230,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217383,"byte_end":217426,"line_start":1231,"line_end":1231,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217431,"byte_end":217434,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217439,"byte_end":217489,"line_start":1233,"line_end":1233,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217494,"byte_end":217544,"line_start":1234,"line_end":1234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217549,"byte_end":217552,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217557,"byte_end":217624,"line_start":1236,"line_end":1236,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217629,"byte_end":217691,"line_start":1237,"line_end":1237,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217696,"byte_end":217699,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217704,"byte_end":217729,"line_start":1239,"line_end":1239,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217734,"byte_end":217788,"line_start":1240,"line_end":1240,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217793,"byte_end":217796,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217801,"byte_end":217826,"line_start":1242,"line_end":1242,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217831,"byte_end":217885,"line_start":1243,"line_end":1243,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217890,"byte_end":217893,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217898,"byte_end":217942,"line_start":1245,"line_end":1245,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217947,"byte_end":217983,"line_start":1246,"line_end":1246,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":217988,"byte_end":217995,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218000,"byte_end":218034,"line_start":1248,"line_end":1248,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218039,"byte_end":218064,"line_start":1249,"line_end":1249,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218984,"byte_end":218987,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218296,"byte_end":218344,"line_start":1258,"line_end":1258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218349,"byte_end":218352,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218357,"byte_end":218430,"line_start":1260,"line_end":1260,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218435,"byte_end":218507,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218512,"byte_end":218525,"line_start":1262,"line_end":1262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218530,"byte_end":218533,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218538,"byte_end":218552,"line_start":1264,"line_end":1264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218557,"byte_end":218560,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218565,"byte_end":218572,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218577,"byte_end":218618,"line_start":1267,"line_end":1267,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218623,"byte_end":218666,"line_start":1268,"line_end":1268,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218671,"byte_end":218674,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218679,"byte_end":218717,"line_start":1270,"line_end":1270,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218722,"byte_end":218761,"line_start":1271,"line_end":1271,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218766,"byte_end":218769,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218774,"byte_end":218808,"line_start":1273,"line_end":1273,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218813,"byte_end":218854,"line_start":1274,"line_end":1274,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218859,"byte_end":218887,"line_start":1275,"line_end":1275,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218892,"byte_end":218942,"line_start":1276,"line_end":1276,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218947,"byte_end":218956,"line_start":1277,"line_end":1277,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218961,"byte_end":218968,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":218973,"byte_end":218976,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219895,"byte_end":219900,"line_start":1311,"line_end":1311,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219168,"byte_end":219205,"line_start":1288,"line_end":1288,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219210,"byte_end":219213,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219218,"byte_end":219289,"line_start":1290,"line_end":1290,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219294,"byte_end":219370,"line_start":1291,"line_end":1291,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219375,"byte_end":219378,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219383,"byte_end":219390,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219395,"byte_end":219436,"line_start":1294,"line_end":1294,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219441,"byte_end":219484,"line_start":1295,"line_end":1295,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219489,"byte_end":219492,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219497,"byte_end":219554,"line_start":1297,"line_end":1297,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219559,"byte_end":219615,"line_start":1298,"line_end":1298,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219620,"byte_end":219623,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219628,"byte_end":219668,"line_start":1300,"line_end":1300,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219673,"byte_end":219676,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219681,"byte_end":219729,"line_start":1302,"line_end":1302,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219734,"byte_end":219762,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219767,"byte_end":219782,"line_start":1304,"line_end":1304,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219787,"byte_end":219806,"line_start":1305,"line_end":1305,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219811,"byte_end":219829,"line_start":1306,"line_end":1306,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219834,"byte_end":219849,"line_start":1307,"line_end":1307,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219854,"byte_end":219861,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219866,"byte_end":219875,"line_start":1309,"line_end":1309,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":219880,"byte_end":219887,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220238,"byte_end":220246,"line_start":1322,"line_end":1322,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220092,"byte_end":220147,"line_start":1319,"line_end":1319,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220152,"byte_end":220155,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220160,"byte_end":220230,"line_start":1321,"line_end":1321,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221281,"byte_end":221287,"line_start":1348,"line_end":1348,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220379,"byte_end":220446,"line_start":1329,"line_end":1329,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220451,"byte_end":220454,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220459,"byte_end":220533,"line_start":1331,"line_end":1331,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220538,"byte_end":220610,"line_start":1332,"line_end":1332,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220615,"byte_end":220667,"line_start":1333,"line_end":1333,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220672,"byte_end":220675,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220680,"byte_end":220753,"line_start":1335,"line_end":1335,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220758,"byte_end":220832,"line_start":1336,"line_end":1336,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220837,"byte_end":220912,"line_start":1337,"line_end":1337,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220917,"byte_end":220989,"line_start":1338,"line_end":1338,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":220994,"byte_end":221006,"line_start":1339,"line_end":1339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221011,"byte_end":221014,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221019,"byte_end":221094,"line_start":1341,"line_end":1341,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221099,"byte_end":221156,"line_start":1342,"line_end":1342,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221161,"byte_end":221164,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221169,"byte_end":221181,"line_start":1344,"line_end":1344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221186,"byte_end":221189,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221194,"byte_end":221243,"line_start":1346,"line_end":1346,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221248,"byte_end":221273,"line_start":1347,"line_end":1347,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222384,"byte_end":222396,"line_start":1374,"line_end":1374,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221448,"byte_end":221521,"line_start":1355,"line_end":1355,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221526,"byte_end":221529,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221534,"byte_end":221607,"line_start":1357,"line_end":1357,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221612,"byte_end":221682,"line_start":1358,"line_end":1358,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221687,"byte_end":221762,"line_start":1359,"line_end":1359,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221767,"byte_end":221844,"line_start":1360,"line_end":1360,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221849,"byte_end":221877,"line_start":1361,"line_end":1361,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221882,"byte_end":221885,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221890,"byte_end":221963,"line_start":1363,"line_end":1363,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":221968,"byte_end":222043,"line_start":1364,"line_end":1364,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222048,"byte_end":222109,"line_start":1365,"line_end":1365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222114,"byte_end":222117,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222122,"byte_end":222197,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222202,"byte_end":222259,"line_start":1368,"line_end":1368,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222264,"byte_end":222267,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222272,"byte_end":222284,"line_start":1370,"line_end":1370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222289,"byte_end":222292,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222297,"byte_end":222346,"line_start":1372,"line_end":1372,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222351,"byte_end":222376,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223434,"byte_end":223441,"line_start":1394,"line_end":1394,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222567,"byte_end":222642,"line_start":1381,"line_end":1381,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222647,"byte_end":222706,"line_start":1382,"line_end":1382,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222711,"byte_end":222714,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222719,"byte_end":222792,"line_start":1384,"line_end":1384,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222797,"byte_end":222868,"line_start":1385,"line_end":1385,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222873,"byte_end":222946,"line_start":1386,"line_end":1386,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":222951,"byte_end":223025,"line_start":1387,"line_end":1387,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223030,"byte_end":223100,"line_start":1388,"line_end":1388,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223105,"byte_end":223178,"line_start":1389,"line_end":1389,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223183,"byte_end":223259,"line_start":1390,"line_end":1390,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223264,"byte_end":223345,"line_start":1391,"line_end":1391,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223350,"byte_end":223374,"line_start":1392,"line_end":1392,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4167},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224576,"byte_end":224581,"line_start":1418,"line_end":1418,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":223999,"byte_end":224071,"line_start":1405,"line_end":1405,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224076,"byte_end":224088,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224093,"byte_end":224096,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224101,"byte_end":224174,"line_start":1408,"line_end":1408,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224179,"byte_end":224241,"line_start":1409,"line_end":1409,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224246,"byte_end":224268,"line_start":1410,"line_end":1410,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224273,"byte_end":224276,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224281,"byte_end":224356,"line_start":1412,"line_end":1412,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224361,"byte_end":224418,"line_start":1413,"line_end":1413,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224423,"byte_end":224447,"line_start":1414,"line_end":1414,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224504,"byte_end":224538,"line_start":1416,"line_end":1416,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224543,"byte_end":224568,"line_start":1417,"line_end":1417,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225193,"byte_end":225200,"line_start":1434,"line_end":1434,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224890,"byte_end":224963,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224968,"byte_end":224971,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":224976,"byte_end":225045,"line_start":1431,"line_end":1431,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225050,"byte_end":225119,"line_start":1432,"line_end":1432,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225124,"byte_end":225185,"line_start":1433,"line_end":1433,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225656,"byte_end":225667,"line_start":1447,"line_end":1447,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225377,"byte_end":225452,"line_start":1442,"line_end":1442,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225457,"byte_end":225478,"line_start":1443,"line_end":1443,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225483,"byte_end":225486,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225491,"byte_end":225571,"line_start":1445,"line_end":1445,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225576,"byte_end":225648,"line_start":1446,"line_end":1446,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226120,"byte_end":226132,"line_start":1460,"line_end":1460,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225841,"byte_end":225917,"line_start":1455,"line_end":1455,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225922,"byte_end":225943,"line_start":1456,"line_end":1456,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225948,"byte_end":225951,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":225956,"byte_end":226035,"line_start":1458,"line_end":1458,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226040,"byte_end":226112,"line_start":1459,"line_end":1459,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226408,"byte_end":226423,"line_start":1470,"line_end":1470,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226307,"byte_end":226378,"line_start":1468,"line_end":1468,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226383,"byte_end":226400,"line_start":1469,"line_end":1469,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228524,"byte_end":228540,"line_start":1525,"line_end":1525,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226570,"byte_end":226645,"line_start":1477,"line_end":1477,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226650,"byte_end":226660,"line_start":1478,"line_end":1478,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226665,"byte_end":226668,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226673,"byte_end":226746,"line_start":1480,"line_end":1480,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226751,"byte_end":226819,"line_start":1481,"line_end":1481,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226824,"byte_end":226872,"line_start":1482,"line_end":1482,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226877,"byte_end":226952,"line_start":1483,"line_end":1483,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":226957,"byte_end":227033,"line_start":1484,"line_end":1484,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227038,"byte_end":227064,"line_start":1485,"line_end":1485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227069,"byte_end":227072,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227077,"byte_end":227150,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227155,"byte_end":227225,"line_start":1488,"line_end":1488,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227230,"byte_end":227270,"line_start":1489,"line_end":1489,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227275,"byte_end":227278,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227283,"byte_end":227337,"line_start":1491,"line_end":1491,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227342,"byte_end":227426,"line_start":1492,"line_end":1492,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227431,"byte_end":227434,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227439,"byte_end":227453,"line_start":1494,"line_end":1494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227458,"byte_end":227461,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227466,"byte_end":227473,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227478,"byte_end":227519,"line_start":1497,"line_end":1497,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227524,"byte_end":227558,"line_start":1498,"line_end":1498,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227563,"byte_end":227618,"line_start":1499,"line_end":1499,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227623,"byte_end":227626,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227631,"byte_end":227666,"line_start":1501,"line_end":1501,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227671,"byte_end":227721,"line_start":1502,"line_end":1502,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227726,"byte_end":227748,"line_start":1503,"line_end":1503,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227753,"byte_end":227763,"line_start":1504,"line_end":1504,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227768,"byte_end":227785,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227790,"byte_end":227816,"line_start":1506,"line_end":1506,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227821,"byte_end":227876,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227881,"byte_end":227910,"line_start":1508,"line_end":1508,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227915,"byte_end":227978,"line_start":1509,"line_end":1509,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":227983,"byte_end":228029,"line_start":1510,"line_end":1510,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228034,"byte_end":228048,"line_start":1511,"line_end":1511,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228053,"byte_end":228122,"line_start":1512,"line_end":1512,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228127,"byte_end":228152,"line_start":1513,"line_end":1513,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228157,"byte_end":228210,"line_start":1514,"line_end":1514,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228215,"byte_end":228244,"line_start":1515,"line_end":1515,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228249,"byte_end":228262,"line_start":1516,"line_end":1516,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228267,"byte_end":228337,"line_start":1517,"line_end":1517,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228342,"byte_end":228401,"line_start":1518,"line_end":1518,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228406,"byte_end":228436,"line_start":1519,"line_end":1519,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228441,"byte_end":228450,"line_start":1520,"line_end":1520,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228455,"byte_end":228460,"line_start":1521,"line_end":1521,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228465,"byte_end":228490,"line_start":1522,"line_end":1522,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228495,"byte_end":228504,"line_start":1523,"line_end":1523,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":228509,"byte_end":228516,"line_start":1524,"line_end":1524,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13050},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369132,"byte_end":369139,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13054},{"krate":0,"index":13055},{"krate":0,"index":13056}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13118},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":331141,"byte_end":331148,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13121}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13196},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":331396,"byte_end":331405,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13199}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13274},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":331706,"byte_end":331716,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13277}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13354},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":371881,"byte_end":371891,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13356}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13396},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":332142,"byte_end":332147,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13399}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13474},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":332424,"byte_end":332430,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13477}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13549},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373239,"byte_end":373245,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":13553},{"krate":0,"index":13554},{"krate":0,"index":13555}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13614},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376081,"byte_end":376088,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":13617}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":375914,"byte_end":375984,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376002,"byte_end":376069,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13622},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377173,"byte_end":377183,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":13626},{"krate":0,"index":13627},{"krate":0,"index":13628}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13679},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379069,"byte_end":379078,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":13683},{"krate":0,"index":13684},{"krate":0,"index":13685},{"krate":0,"index":13686}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13748},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382213,"byte_end":382225,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":13752},{"krate":0,"index":13753},{"krate":0,"index":13754}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13818},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385230,"byte_end":385240,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":13820},{"krate":0,"index":13821}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13868},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387418,"byte_end":387428,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":13871},{"krate":0,"index":13872}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13915},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":388777,"byte_end":388786,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":13917},{"krate":0,"index":13918}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13955},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":390297,"byte_end":390306,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":13957},{"krate":0,"index":13958},{"krate":0,"index":13959}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14002},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393558,"byte_end":393572,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393335,"byte_end":393419,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393420,"byte_end":393423,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393424,"byte_end":393521,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14006},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393579,"byte_end":393589,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14007},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393591,"byte_end":393596,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14023},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":394434,"byte_end":394441,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14028},{"krate":0,"index":14029},{"krate":0,"index":14030},{"krate":0,"index":14031}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5088},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398889,"byte_end":398899,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397032,"byte_end":397108,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397109,"byte_end":397112,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397113,"byte_end":397189,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397190,"byte_end":397260,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397261,"byte_end":397320,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397321,"byte_end":397324,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397325,"byte_end":397403,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397404,"byte_end":397481,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397482,"byte_end":397546,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397547,"byte_end":397550,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397551,"byte_end":397623,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397624,"byte_end":397702,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397703,"byte_end":397732,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397733,"byte_end":397736,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397737,"byte_end":397814,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397815,"byte_end":397879,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397880,"byte_end":397932,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397933,"byte_end":397936,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":397937,"byte_end":398014,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398015,"byte_end":398087,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398088,"byte_end":398157,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398158,"byte_end":398236,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398237,"byte_end":398240,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398241,"byte_end":398254,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398255,"byte_end":398258,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398259,"byte_end":398266,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398267,"byte_end":398300,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398301,"byte_end":398324,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398325,"byte_end":398366,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398367,"byte_end":398413,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398414,"byte_end":398417,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398418,"byte_end":398477,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398478,"byte_end":398500,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398501,"byte_end":398535,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398536,"byte_end":398545,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398546,"byte_end":398549,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398550,"byte_end":398573,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398574,"byte_end":398613,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398614,"byte_end":398650,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398651,"byte_end":398694,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398695,"byte_end":398711,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398712,"byte_end":398732,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398733,"byte_end":398742,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398743,"byte_end":398750,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398751,"byte_end":398754,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398755,"byte_end":398820,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398821,"byte_end":398863,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398864,"byte_end":398873,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":398874,"byte_end":398881,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14092},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":399262,"byte_end":399271,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14096},{"krate":0,"index":14097},{"krate":0,"index":14098}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14149},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":401179,"byte_end":401191,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14153},{"krate":0,"index":14154},{"krate":0,"index":14155},{"krate":0,"index":14156},{"krate":0,"index":14157}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14222},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":404735,"byte_end":404747,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14226},{"krate":0,"index":14227},{"krate":0,"index":14228},{"krate":0,"index":14229},{"krate":0,"index":14230}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14300},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":408523,"byte_end":408541,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14302},{"krate":0,"index":14303},{"krate":0,"index":14304}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14352},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":411081,"byte_end":411092,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14354},{"krate":0,"index":14355},{"krate":0,"index":14356}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14399},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":413624,"byte_end":413644,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14403},{"krate":0,"index":14404},{"krate":0,"index":14405},{"krate":0,"index":14406}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5439},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335639,"byte_end":335651,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5440},{"krate":0,"index":5442},{"krate":0,"index":5445},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5454},{"krate":0,"index":5456},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":5466},{"krate":0,"index":5469},{"krate":0,"index":5473},{"krate":0,"index":5475},{"krate":0,"index":5476},{"krate":0,"index":5479},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335577,"byte_end":335628,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5440},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336193,"byte_end":336201,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335669,"byte_end":335743,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335748,"byte_end":335774,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335779,"byte_end":335782,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335787,"byte_end":335801,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335806,"byte_end":335809,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335814,"byte_end":335821,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335826,"byte_end":335867,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335872,"byte_end":335918,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335923,"byte_end":335926,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335931,"byte_end":335951,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335956,"byte_end":336001,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336006,"byte_end":336037,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336042,"byte_end":336045,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336050,"byte_end":336104,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336109,"byte_end":336160,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336165,"byte_end":336173,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336178,"byte_end":336185,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5442},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336897,"byte_end":336903,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336377,"byte_end":336450,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336455,"byte_end":336486,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336491,"byte_end":336494,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336499,"byte_end":336513,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336518,"byte_end":336521,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336526,"byte_end":336533,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336538,"byte_end":336579,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336584,"byte_end":336630,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336635,"byte_end":336638,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336643,"byte_end":336663,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336668,"byte_end":336709,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336714,"byte_end":336745,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336750,"byte_end":336753,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336758,"byte_end":336811,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336816,"byte_end":336864,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336869,"byte_end":336877,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":336882,"byte_end":336889,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5445},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337612,"byte_end":337619,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337093,"byte_end":337164,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337169,"byte_end":337200,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337205,"byte_end":337208,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337213,"byte_end":337227,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337232,"byte_end":337235,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337240,"byte_end":337247,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337252,"byte_end":337293,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337298,"byte_end":337344,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337349,"byte_end":337352,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337357,"byte_end":337377,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337382,"byte_end":337423,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337428,"byte_end":337460,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337465,"byte_end":337468,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337473,"byte_end":337526,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337531,"byte_end":337579,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337584,"byte_end":337592,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337597,"byte_end":337604,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5448},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339224,"byte_end":339232,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337811,"byte_end":337887,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337892,"byte_end":337932,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337937,"byte_end":337940,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":337945,"byte_end":338021,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338026,"byte_end":338102,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338107,"byte_end":338180,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338185,"byte_end":338227,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338232,"byte_end":338235,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338240,"byte_end":338313,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338318,"byte_end":338349,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338354,"byte_end":338357,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338362,"byte_end":338436,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338441,"byte_end":338515,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338520,"byte_end":338536,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338541,"byte_end":338544,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338549,"byte_end":338620,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338625,"byte_end":338651,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338656,"byte_end":338659,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338664,"byte_end":338736,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338741,"byte_end":338790,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338795,"byte_end":338798,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338803,"byte_end":338817,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338822,"byte_end":338825,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338830,"byte_end":338837,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338842,"byte_end":338873,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338878,"byte_end":338902,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338907,"byte_end":338945,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338950,"byte_end":338953,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":338958,"byte_end":339014,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339019,"byte_end":339022,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339027,"byte_end":339062,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339067,"byte_end":339106,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339111,"byte_end":339135,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339140,"byte_end":339156,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339161,"byte_end":339177,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339182,"byte_end":339192,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339197,"byte_end":339204,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339209,"byte_end":339216,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5451},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340384,"byte_end":340391,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339485,"byte_end":339550,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339555,"byte_end":339604,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339609,"byte_end":339612,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339617,"byte_end":339696,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339701,"byte_end":339775,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339780,"byte_end":339856,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339861,"byte_end":339906,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339911,"byte_end":339914,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339919,"byte_end":339994,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":339999,"byte_end":340039,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340044,"byte_end":340047,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340052,"byte_end":340161,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340166,"byte_end":340240,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340245,"byte_end":340261,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340266,"byte_end":340269,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340274,"byte_end":340345,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340350,"byte_end":340376,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340943,"byte_end":340953,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340640,"byte_end":340714,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340719,"byte_end":340729,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340734,"byte_end":340737,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340742,"byte_end":340812,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340817,"byte_end":340893,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":340898,"byte_end":340935,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5456},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341442,"byte_end":341453,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341151,"byte_end":341230,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341235,"byte_end":341238,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341243,"byte_end":341313,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341318,"byte_end":341392,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341397,"byte_end":341434,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5458},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342374,"byte_end":342385,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341656,"byte_end":341709,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341714,"byte_end":341758,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341763,"byte_end":341766,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341771,"byte_end":341820,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341825,"byte_end":341898,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341903,"byte_end":341923,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341928,"byte_end":341931,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341936,"byte_end":341950,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341955,"byte_end":341958,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341963,"byte_end":341970,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":341975,"byte_end":342034,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342039,"byte_end":342042,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342047,"byte_end":342066,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342071,"byte_end":342089,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342094,"byte_end":342166,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342171,"byte_end":342201,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342206,"byte_end":342213,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342218,"byte_end":342292,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342297,"byte_end":342300,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342305,"byte_end":342354,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342359,"byte_end":342366,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343280,"byte_end":343288,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342541,"byte_end":342615,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342620,"byte_end":342694,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342699,"byte_end":342711,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342716,"byte_end":342719,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342724,"byte_end":342791,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342796,"byte_end":342868,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342873,"byte_end":342912,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342917,"byte_end":342920,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342925,"byte_end":342939,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342944,"byte_end":342947,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342952,"byte_end":342959,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":342964,"byte_end":343005,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343010,"byte_end":343056,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343061,"byte_end":343064,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343069,"byte_end":343126,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343131,"byte_end":343134,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343139,"byte_end":343193,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343198,"byte_end":343247,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343252,"byte_end":343260,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343265,"byte_end":343272,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5460},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344640,"byte_end":344652,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343455,"byte_end":343524,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343529,"byte_end":343585,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343590,"byte_end":343593,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343598,"byte_end":343673,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343678,"byte_end":343748,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343753,"byte_end":343791,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343796,"byte_end":343799,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343804,"byte_end":343882,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343887,"byte_end":343947,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":343952,"byte_end":344009,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344014,"byte_end":344081,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344086,"byte_end":344116,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344121,"byte_end":344124,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344129,"byte_end":344143,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344148,"byte_end":344151,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344156,"byte_end":344163,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344168,"byte_end":344209,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344214,"byte_end":344238,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344243,"byte_end":344289,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344294,"byte_end":344297,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344302,"byte_end":344323,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344328,"byte_end":344331,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344336,"byte_end":344341,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344346,"byte_end":344407,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344412,"byte_end":344434,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344439,"byte_end":344503,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344508,"byte_end":344519,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344524,"byte_end":344563,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344568,"byte_end":344573,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344578,"byte_end":344581,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344586,"byte_end":344607,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344612,"byte_end":344620,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344625,"byte_end":344632,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345665,"byte_end":345679,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344916,"byte_end":344990,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":344995,"byte_end":345018,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345023,"byte_end":345026,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345031,"byte_end":345062,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345067,"byte_end":345144,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345149,"byte_end":345178,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345183,"byte_end":345186,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345191,"byte_end":345205,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345210,"byte_end":345213,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345218,"byte_end":345225,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345230,"byte_end":345271,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345276,"byte_end":345300,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345305,"byte_end":345351,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345356,"byte_end":345359,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345364,"byte_end":345433,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345438,"byte_end":345508,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345513,"byte_end":345516,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345521,"byte_end":345588,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345593,"byte_end":345632,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345637,"byte_end":345645,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345650,"byte_end":345657,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346712,"byte_end":346726,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":345956,"byte_end":346030,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346035,"byte_end":346058,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346063,"byte_end":346066,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346071,"byte_end":346102,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346107,"byte_end":346184,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346189,"byte_end":346218,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346223,"byte_end":346226,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346231,"byte_end":346245,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346250,"byte_end":346253,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346258,"byte_end":346265,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346270,"byte_end":346311,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346316,"byte_end":346340,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346345,"byte_end":346391,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346396,"byte_end":346399,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346404,"byte_end":346480,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346485,"byte_end":346555,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346560,"byte_end":346563,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346568,"byte_end":346635,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346640,"byte_end":346679,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346684,"byte_end":346692,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":346697,"byte_end":346704,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5469},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348641,"byte_end":348664,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347003,"byte_end":347085,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347090,"byte_end":347164,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347169,"byte_end":347219,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347224,"byte_end":347227,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347232,"byte_end":347254,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347259,"byte_end":347345,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347350,"byte_end":347435,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347440,"byte_end":347468,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347473,"byte_end":347476,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347481,"byte_end":347556,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347561,"byte_end":347618,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347623,"byte_end":347626,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347631,"byte_end":347645,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347650,"byte_end":347653,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347658,"byte_end":347665,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347670,"byte_end":347711,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347716,"byte_end":347750,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347755,"byte_end":347812,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347817,"byte_end":347820,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347825,"byte_end":347865,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347870,"byte_end":347910,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347915,"byte_end":347956,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347961,"byte_end":347964,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":347969,"byte_end":348020,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348025,"byte_end":348078,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348083,"byte_end":348105,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348110,"byte_end":348135,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348140,"byte_end":348202,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348207,"byte_end":348222,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348227,"byte_end":348236,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348241,"byte_end":348247,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348252,"byte_end":348255,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348260,"byte_end":348286,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348291,"byte_end":348358,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348363,"byte_end":348377,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348382,"byte_end":348385,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348390,"byte_end":348451,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348456,"byte_end":348484,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348489,"byte_end":348539,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348544,"byte_end":348552,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348557,"byte_end":348564,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348569,"byte_end":348603,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":348608,"byte_end":348633,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350113,"byte_end":350124,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349074,"byte_end":349126,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349131,"byte_end":349198,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349203,"byte_end":349206,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349211,"byte_end":349285,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349290,"byte_end":349371,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349376,"byte_end":349446,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349451,"byte_end":349454,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349459,"byte_end":349527,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349532,"byte_end":349535,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349540,"byte_end":349554,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349559,"byte_end":349562,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349567,"byte_end":349574,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349579,"byte_end":349620,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349625,"byte_end":349656,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349661,"byte_end":349699,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349704,"byte_end":349724,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349729,"byte_end":349732,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349737,"byte_end":349774,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349779,"byte_end":349782,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349787,"byte_end":349814,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349819,"byte_end":349843,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349848,"byte_end":349894,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349899,"byte_end":349908,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349913,"byte_end":349956,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349961,"byte_end":349968,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349973,"byte_end":349976,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":349981,"byte_end":350044,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350049,"byte_end":350080,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350085,"byte_end":350093,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350098,"byte_end":350105,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5475},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351939,"byte_end":351949,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350307,"byte_end":350385,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350390,"byte_end":350393,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350398,"byte_end":350483,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350488,"byte_end":350560,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350565,"byte_end":350617,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350622,"byte_end":350625,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350630,"byte_end":350703,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350708,"byte_end":350782,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350787,"byte_end":350862,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350867,"byte_end":350939,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350944,"byte_end":350956,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350961,"byte_end":350964,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":350969,"byte_end":351044,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351049,"byte_end":351106,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351111,"byte_end":351114,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351119,"byte_end":351150,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351155,"byte_end":351224,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351229,"byte_end":351258,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351263,"byte_end":351266,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351271,"byte_end":351285,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351290,"byte_end":351293,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351298,"byte_end":351305,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351310,"byte_end":351351,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351356,"byte_end":351418,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351423,"byte_end":351426,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351431,"byte_end":351522,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351527,"byte_end":351569,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351574,"byte_end":351577,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351582,"byte_end":351644,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351649,"byte_end":351722,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351727,"byte_end":351789,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351794,"byte_end":351802,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351807,"byte_end":351814,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351819,"byte_end":351822,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351827,"byte_end":351839,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351844,"byte_end":351847,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351852,"byte_end":351901,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":351906,"byte_end":351931,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353472,"byte_end":353482,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352184,"byte_end":352257,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352262,"byte_end":352296,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352301,"byte_end":352304,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352309,"byte_end":352384,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352389,"byte_end":352464,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352469,"byte_end":352542,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352547,"byte_end":352618,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352623,"byte_end":352673,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352678,"byte_end":352681,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352686,"byte_end":352757,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352762,"byte_end":352765,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352770,"byte_end":352846,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352851,"byte_end":352921,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352926,"byte_end":352951,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352956,"byte_end":352959,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352964,"byte_end":352978,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352983,"byte_end":352990,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":352995,"byte_end":353036,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353041,"byte_end":353065,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353070,"byte_end":353127,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353132,"byte_end":353135,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353140,"byte_end":353220,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353225,"byte_end":353268,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353273,"byte_end":353306,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353311,"byte_end":353318,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353323,"byte_end":353326,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353331,"byte_end":353379,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353384,"byte_end":353439,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353444,"byte_end":353452,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353457,"byte_end":353464,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355109,"byte_end":355123,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353733,"byte_end":353795,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353800,"byte_end":353868,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353873,"byte_end":353907,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353912,"byte_end":353915,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":353920,"byte_end":353995,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354000,"byte_end":354075,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354080,"byte_end":354156,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354161,"byte_end":354226,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354231,"byte_end":354234,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354239,"byte_end":354310,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354315,"byte_end":354318,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354323,"byte_end":354399,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354404,"byte_end":354478,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354483,"byte_end":354508,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354513,"byte_end":354516,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354521,"byte_end":354535,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354540,"byte_end":354547,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354552,"byte_end":354593,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354598,"byte_end":354655,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354660,"byte_end":354685,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354690,"byte_end":354693,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354698,"byte_end":354768,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354773,"byte_end":354828,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354833,"byte_end":354895,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354900,"byte_end":354915,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354920,"byte_end":354927,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354932,"byte_end":354935,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354940,"byte_end":354961,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":354966,"byte_end":355015,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355020,"byte_end":355076,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355081,"byte_end":355089,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355094,"byte_end":355101,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5483},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356815,"byte_end":356826,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355400,"byte_end":355465,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355470,"byte_end":355473,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355478,"byte_end":355551,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355556,"byte_end":355629,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355634,"byte_end":355707,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355712,"byte_end":355782,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355787,"byte_end":355790,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355795,"byte_end":355809,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355814,"byte_end":355817,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355822,"byte_end":355829,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355834,"byte_end":355875,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355880,"byte_end":355911,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355916,"byte_end":355967,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355972,"byte_end":355992,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":355997,"byte_end":356000,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356005,"byte_end":356044,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356049,"byte_end":356088,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356093,"byte_end":356132,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356137,"byte_end":356140,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356145,"byte_end":356172,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356177,"byte_end":356220,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356225,"byte_end":356232,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356237,"byte_end":356264,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356269,"byte_end":356312,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356317,"byte_end":356361,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356366,"byte_end":356373,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356378,"byte_end":356405,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356410,"byte_end":356455,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356460,"byte_end":356505,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356510,"byte_end":356554,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356559,"byte_end":356566,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356571,"byte_end":356574,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356579,"byte_end":356618,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356623,"byte_end":356672,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356677,"byte_end":356726,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356731,"byte_end":356781,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356786,"byte_end":356795,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":356800,"byte_end":356807,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5484},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358418,"byte_end":358426,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357131,"byte_end":357201,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357206,"byte_end":357266,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357271,"byte_end":357274,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357279,"byte_end":357349,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357354,"byte_end":357430,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357435,"byte_end":357511,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357516,"byte_end":357586,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357591,"byte_end":357617,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357622,"byte_end":357625,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357630,"byte_end":357710,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357715,"byte_end":357784,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357789,"byte_end":357810,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357815,"byte_end":357818,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357823,"byte_end":357837,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357842,"byte_end":357845,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357850,"byte_end":357857,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357862,"byte_end":357903,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357908,"byte_end":357954,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357959,"byte_end":357962,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":357967,"byte_end":358036,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358041,"byte_end":358118,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358123,"byte_end":358156,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358161,"byte_end":358164,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358169,"byte_end":358255,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358260,"byte_end":358346,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358351,"byte_end":358385,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358390,"byte_end":358398,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358403,"byte_end":358410,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5488},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359952,"byte_end":359962,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358706,"byte_end":358768,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358773,"byte_end":358848,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358853,"byte_end":358856,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358861,"byte_end":358932,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":358937,"byte_end":359013,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359018,"byte_end":359057,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359062,"byte_end":359065,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359070,"byte_end":359156,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359161,"byte_end":359164,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359169,"byte_end":359253,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359258,"byte_end":359314,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359319,"byte_end":359322,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359327,"byte_end":359341,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359346,"byte_end":359349,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359354,"byte_end":359361,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359366,"byte_end":359407,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359412,"byte_end":359443,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359448,"byte_end":359486,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359491,"byte_end":359511,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359516,"byte_end":359519,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359524,"byte_end":359585,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359590,"byte_end":359593,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359598,"byte_end":359625,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359630,"byte_end":359661,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359666,"byte_end":359692,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359697,"byte_end":359767,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359772,"byte_end":359781,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359786,"byte_end":359793,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359798,"byte_end":359801,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359806,"byte_end":359845,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359850,"byte_end":359853,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359858,"byte_end":359918,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359923,"byte_end":359932,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":359937,"byte_end":359944,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5489},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362684,"byte_end":362704,"line_start":901,"line_end":901,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360216,"byte_end":360294,"line_start":842,"line_end":842,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360299,"byte_end":360302,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360307,"byte_end":360412,"line_start":844,"line_end":844,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360417,"byte_end":360460,"line_start":845,"line_end":845,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360465,"byte_end":360468,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360473,"byte_end":360541,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360546,"byte_end":360619,"line_start":848,"line_end":848,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360624,"byte_end":360680,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360685,"byte_end":360688,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360693,"byte_end":360768,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360773,"byte_end":360846,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360851,"byte_end":360916,"line_start":853,"line_end":853,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360921,"byte_end":360924,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":360929,"byte_end":361004,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361009,"byte_end":361066,"line_start":856,"line_end":856,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361071,"byte_end":361074,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361079,"byte_end":361093,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361098,"byte_end":361101,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361106,"byte_end":361158,"line_start":860,"line_end":860,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361163,"byte_end":361170,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361175,"byte_end":361216,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361221,"byte_end":361255,"line_start":863,"line_end":863,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361260,"byte_end":361317,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361322,"byte_end":361325,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361330,"byte_end":361380,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361385,"byte_end":361435,"line_start":867,"line_end":867,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361440,"byte_end":361443,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361448,"byte_end":361523,"line_start":869,"line_end":869,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361528,"byte_end":361531,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361536,"byte_end":361602,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361607,"byte_end":361610,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361615,"byte_end":361640,"line_start":873,"line_end":873,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361645,"byte_end":361699,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361704,"byte_end":361707,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361712,"byte_end":361737,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361742,"byte_end":361796,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361801,"byte_end":361804,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361809,"byte_end":361853,"line_start":879,"line_end":879,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361858,"byte_end":361894,"line_start":880,"line_end":880,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361899,"byte_end":361906,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361911,"byte_end":361914,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361919,"byte_end":361979,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361984,"byte_end":361991,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":361996,"byte_end":362037,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362042,"byte_end":362073,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362078,"byte_end":362129,"line_start":887,"line_end":887,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362134,"byte_end":362137,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362142,"byte_end":362196,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362201,"byte_end":362267,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362272,"byte_end":362275,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362280,"byte_end":362329,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362334,"byte_end":362388,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362393,"byte_end":362396,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362401,"byte_end":362454,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362459,"byte_end":362531,"line_start":896,"line_end":896,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362536,"byte_end":362595,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362600,"byte_end":362607,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362612,"byte_end":362646,"line_start":899,"line_end":899,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362651,"byte_end":362676,"line_start":900,"line_end":900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5490},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365685,"byte_end":365697,"line_start":977,"line_end":977,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":362981,"byte_end":363047,"line_start":911,"line_end":911,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363052,"byte_end":363055,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363060,"byte_end":363165,"line_start":913,"line_end":913,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363170,"byte_end":363213,"line_start":914,"line_end":914,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363218,"byte_end":363221,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363226,"byte_end":363294,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363299,"byte_end":363375,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363380,"byte_end":363410,"line_start":918,"line_end":918,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363415,"byte_end":363418,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363423,"byte_end":363498,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363503,"byte_end":363576,"line_start":921,"line_end":921,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363581,"byte_end":363646,"line_start":922,"line_end":922,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363651,"byte_end":363654,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363659,"byte_end":363734,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363739,"byte_end":363796,"line_start":925,"line_end":925,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363801,"byte_end":363804,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363809,"byte_end":363823,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363828,"byte_end":363831,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363836,"byte_end":363886,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363891,"byte_end":363898,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363903,"byte_end":363944,"line_start":931,"line_end":931,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363949,"byte_end":363983,"line_start":932,"line_end":932,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":363988,"byte_end":364018,"line_start":933,"line_end":933,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364023,"byte_end":364080,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364085,"byte_end":364088,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364093,"byte_end":364143,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364148,"byte_end":364198,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364203,"byte_end":364206,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364211,"byte_end":364250,"line_start":939,"line_end":939,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364255,"byte_end":364334,"line_start":940,"line_end":940,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364339,"byte_end":364342,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364347,"byte_end":364409,"line_start":942,"line_end":942,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364414,"byte_end":364417,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364422,"byte_end":364485,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364490,"byte_end":364493,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364498,"byte_end":364527,"line_start":946,"line_end":946,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364532,"byte_end":364595,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364600,"byte_end":364630,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364635,"byte_end":364649,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364654,"byte_end":364657,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364662,"byte_end":364687,"line_start":951,"line_end":951,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364692,"byte_end":364746,"line_start":952,"line_end":952,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364751,"byte_end":364805,"line_start":953,"line_end":953,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364810,"byte_end":364813,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364818,"byte_end":364862,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364867,"byte_end":364903,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364908,"byte_end":364915,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364920,"byte_end":364923,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364928,"byte_end":364988,"line_start":959,"line_end":959,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":364993,"byte_end":365000,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365005,"byte_end":365046,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365051,"byte_end":365082,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365087,"byte_end":365138,"line_start":963,"line_end":963,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365143,"byte_end":365146,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365151,"byte_end":365205,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365210,"byte_end":365268,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365273,"byte_end":365276,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365281,"byte_end":365330,"line_start":968,"line_end":968,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365335,"byte_end":365389,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365394,"byte_end":365397,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365402,"byte_end":365455,"line_start":971,"line_end":971,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365460,"byte_end":365532,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365537,"byte_end":365596,"line_start":973,"line_end":973,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365601,"byte_end":365608,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365613,"byte_end":365647,"line_start":975,"line_end":975,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":365652,"byte_end":365677,"line_start":976,"line_end":976,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5491},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":366152,"byte_end":366171,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":366044,"byte_end":366122,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":366127,"byte_end":366144,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":14460},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417686,"byte_end":417690,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14462}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417564,"byte_end":417601,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417626,"byte_end":417674,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5592},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418208,"byte_end":418212,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417742,"byte_end":417806,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417807,"byte_end":417835,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417836,"byte_end":417839,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417840,"byte_end":417913,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417914,"byte_end":417969,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417970,"byte_end":417973,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417974,"byte_end":417981,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417982,"byte_end":418023,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418024,"byte_end":418067,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418068,"byte_end":418071,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418072,"byte_end":418116,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418117,"byte_end":418182,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418183,"byte_end":418192,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418193,"byte_end":418200,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14469},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":418903,"byte_end":418909,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14471}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":418779,"byte_end":418818,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":418843,"byte_end":418891,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5627},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419433,"byte_end":419439,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":418931,"byte_end":418991,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":418992,"byte_end":418995,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":418996,"byte_end":419063,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419064,"byte_end":419136,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419137,"byte_end":419194,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419195,"byte_end":419198,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419199,"byte_end":419206,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419207,"byte_end":419248,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419249,"byte_end":419292,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419293,"byte_end":419296,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419297,"byte_end":419332,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419333,"byte_end":419407,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419408,"byte_end":419417,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419418,"byte_end":419425,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14478},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420430,"byte_end":420440,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14480}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420128,"byte_end":420188,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420189,"byte_end":420241,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420242,"byte_end":420245,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420246,"byte_end":420309,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420310,"byte_end":420345,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420370,"byte_end":420418,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5680},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422728,"byte_end":422739,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420956,"byte_end":421027,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421028,"byte_end":421095,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421096,"byte_end":421099,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421100,"byte_end":421172,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421173,"byte_end":421176,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421177,"byte_end":421251,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421252,"byte_end":421304,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421305,"byte_end":421308,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421309,"byte_end":421381,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421382,"byte_end":421455,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421456,"byte_end":421493,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421494,"byte_end":421497,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421498,"byte_end":421512,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421513,"byte_end":421516,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421517,"byte_end":421533,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421534,"byte_end":421537,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421538,"byte_end":421545,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421546,"byte_end":421587,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421588,"byte_end":421631,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421632,"byte_end":421635,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421636,"byte_end":421704,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421705,"byte_end":421783,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421784,"byte_end":421815,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421816,"byte_end":421837,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421838,"byte_end":421841,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421842,"byte_end":421876,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421877,"byte_end":421932,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421933,"byte_end":421936,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421937,"byte_end":421990,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":421991,"byte_end":422044,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422045,"byte_end":422098,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422099,"byte_end":422108,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422109,"byte_end":422116,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422117,"byte_end":422120,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422121,"byte_end":422157,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422158,"byte_end":422161,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422162,"byte_end":422173,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422174,"byte_end":422215,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422216,"byte_end":422259,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422260,"byte_end":422263,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422264,"byte_end":422313,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422314,"byte_end":422335,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422336,"byte_end":422413,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422414,"byte_end":422447,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422448,"byte_end":422451,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422452,"byte_end":422495,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422496,"byte_end":422539,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422540,"byte_end":422583,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422584,"byte_end":422627,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422628,"byte_end":422631,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422632,"byte_end":422661,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422662,"byte_end":422702,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422703,"byte_end":422712,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":422713,"byte_end":422720,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14487},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423130,"byte_end":423135,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14489}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423014,"byte_end":423052,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423070,"byte_end":423118,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5714},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423304,"byte_end":423309,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423174,"byte_end":423222,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423223,"byte_end":423226,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423227,"byte_end":423296,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5766},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424394,"byte_end":424398,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424087,"byte_end":424128,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424129,"byte_end":424132,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424133,"byte_end":424140,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424141,"byte_end":424182,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424183,"byte_end":424226,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424227,"byte_end":424230,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424231,"byte_end":424275,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424276,"byte_end":424331,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424332,"byte_end":424368,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424369,"byte_end":424378,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424379,"byte_end":424386,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14498},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424660,"byte_end":424664,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14500}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14529},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":425840,"byte_end":425847,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14531}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":425720,"byte_end":425762,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":425780,"byte_end":425828,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426023,"byte_end":426030,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":425891,"byte_end":425945,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":425946,"byte_end":425949,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":425950,"byte_end":426015,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5852},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426873,"byte_end":426879,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5854}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426772,"byte_end":426812,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426813,"byte_end":426861,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5860},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427567,"byte_end":427574,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427079,"byte_end":427152,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427153,"byte_end":427156,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427157,"byte_end":427216,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427217,"byte_end":427220,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427221,"byte_end":427235,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427236,"byte_end":427239,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427240,"byte_end":427247,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427248,"byte_end":427281,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427282,"byte_end":427310,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427311,"byte_end":427314,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427315,"byte_end":427344,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427345,"byte_end":427348,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427349,"byte_end":427413,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427414,"byte_end":427467,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427468,"byte_end":427489,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427490,"byte_end":427543,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427544,"byte_end":427551,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427552,"byte_end":427559,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14540},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":428335,"byte_end":428348,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":14542}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430329,"byte_end":430343,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429448,"byte_end":429561,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429562,"byte_end":429565,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429566,"byte_end":429661,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429662,"byte_end":429665,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429666,"byte_end":429680,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429681,"byte_end":429684,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429685,"byte_end":429692,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429693,"byte_end":429734,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429735,"byte_end":429778,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429779,"byte_end":429807,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429808,"byte_end":429811,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429812,"byte_end":429885,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429886,"byte_end":429939,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429940,"byte_end":429993,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429994,"byte_end":430031,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430032,"byte_end":430035,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430036,"byte_end":430104,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430105,"byte_end":430133,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430134,"byte_end":430147,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430148,"byte_end":430157,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430158,"byte_end":430210,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430211,"byte_end":430265,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430266,"byte_end":430303,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430304,"byte_end":430313,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":430314,"byte_end":430321,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14581},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":430876,"byte_end":430882,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":14584}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5944},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431908,"byte_end":431914,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431004,"byte_end":431072,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431073,"byte_end":431149,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431150,"byte_end":431198,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431199,"byte_end":431202,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431203,"byte_end":431278,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431279,"byte_end":431348,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431349,"byte_end":431376,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431377,"byte_end":431380,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431381,"byte_end":431452,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431453,"byte_end":431473,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431474,"byte_end":431477,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431478,"byte_end":431493,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431494,"byte_end":431497,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431498,"byte_end":431509,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431510,"byte_end":431551,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431552,"byte_end":431607,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431608,"byte_end":431611,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431612,"byte_end":431637,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431638,"byte_end":431664,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431665,"byte_end":431668,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431669,"byte_end":431707,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431708,"byte_end":431711,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431712,"byte_end":431733,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431734,"byte_end":431770,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431771,"byte_end":431823,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431824,"byte_end":431876,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431877,"byte_end":431882,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431883,"byte_end":431892,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":431893,"byte_end":431900,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5951},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432383,"byte_end":432390,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432275,"byte_end":432349,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432354,"byte_end":432371,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432718,"byte_end":432725,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432456,"byte_end":432524,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432529,"byte_end":432560,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432565,"byte_end":432568,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432573,"byte_end":432646,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432651,"byte_end":432706,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5953},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433072,"byte_end":433083,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432803,"byte_end":432878,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432883,"byte_end":432914,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432919,"byte_end":432922,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432927,"byte_end":433000,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433005,"byte_end":433060,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5954},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433457,"byte_end":433467,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433221,"byte_end":433284,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433289,"byte_end":433292,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433297,"byte_end":433369,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433374,"byte_end":433445,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14620},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434409,"byte_end":434413,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":14619},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434378,"byte_end":434404,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14622},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434451,"byte_end":434456,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":14619},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434419,"byte_end":434446,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":14619},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434363,"byte_end":434371,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":14620},{"krate":0,"index":14622}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434236,"byte_end":434302,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6007},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434537,"byte_end":434543,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434481,"byte_end":434525,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":14638},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435015,"byte_end":435033,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":14643},{"krate":0,"index":14644},{"krate":0,"index":14645},{"krate":0,"index":14646}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6010},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437325,"byte_end":437345,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435196,"byte_end":435273,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435274,"byte_end":435354,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435355,"byte_end":435437,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435438,"byte_end":435503,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435504,"byte_end":435507,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435508,"byte_end":435583,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435584,"byte_end":435653,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435654,"byte_end":435681,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435682,"byte_end":435685,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435686,"byte_end":435757,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435758,"byte_end":435778,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435779,"byte_end":435782,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435783,"byte_end":435798,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435799,"byte_end":435802,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435803,"byte_end":435819,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435820,"byte_end":435884,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435885,"byte_end":435888,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435889,"byte_end":435900,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435901,"byte_end":435942,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":435943,"byte_end":436022,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436023,"byte_end":436026,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436027,"byte_end":436052,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436053,"byte_end":436079,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436080,"byte_end":436083,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436084,"byte_end":436148,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436149,"byte_end":436223,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436224,"byte_end":436294,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436295,"byte_end":436346,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436347,"byte_end":436406,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436407,"byte_end":436410,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436411,"byte_end":436474,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436475,"byte_end":436478,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436479,"byte_end":436500,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436501,"byte_end":436556,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436557,"byte_end":436609,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436610,"byte_end":436615,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436616,"byte_end":436625,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436626,"byte_end":436633,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436634,"byte_end":436637,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436638,"byte_end":436657,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436658,"byte_end":436725,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436726,"byte_end":436802,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436803,"byte_end":436806,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436807,"byte_end":436818,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436819,"byte_end":436860,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436861,"byte_end":436940,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436941,"byte_end":436944,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436945,"byte_end":436970,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436971,"byte_end":436997,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":436998,"byte_end":437001,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437002,"byte_end":437055,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437056,"byte_end":437059,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437060,"byte_end":437120,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437121,"byte_end":437124,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437125,"byte_end":437146,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437147,"byte_end":437187,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437188,"byte_end":437240,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437241,"byte_end":437293,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437294,"byte_end":437299,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437300,"byte_end":437309,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437310,"byte_end":437317,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6020},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437962,"byte_end":437969,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437854,"byte_end":437928,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437933,"byte_end":437950,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6021},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438325,"byte_end":438332,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438063,"byte_end":438131,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438136,"byte_end":438167,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438172,"byte_end":438175,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438180,"byte_end":438253,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438258,"byte_end":438313,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6022},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438707,"byte_end":438718,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438438,"byte_end":438513,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438518,"byte_end":438549,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438554,"byte_end":438557,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438562,"byte_end":438635,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438640,"byte_end":438695,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6023},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":439124,"byte_end":439134,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438888,"byte_end":438951,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438956,"byte_end":438959,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":438964,"byte_end":439036,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":439041,"byte_end":439112,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":6092},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442812,"byte_end":442818,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441370,"byte_end":441440,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441441,"byte_end":441444,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441445,"byte_end":441514,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441515,"byte_end":441596,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441597,"byte_end":441628,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441629,"byte_end":441632,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441633,"byte_end":441712,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441713,"byte_end":441792,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441793,"byte_end":441847,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441848,"byte_end":441851,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441852,"byte_end":441932,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":441933,"byte_end":442003,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442004,"byte_end":442026,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442027,"byte_end":442030,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442031,"byte_end":442108,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442109,"byte_end":442181,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442182,"byte_end":442259,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442260,"byte_end":442320,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442321,"byte_end":442324,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442325,"byte_end":442338,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442339,"byte_end":442342,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442343,"byte_end":442350,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442351,"byte_end":442392,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442393,"byte_end":442436,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442437,"byte_end":442440,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442441,"byte_end":442496,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442497,"byte_end":442520,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442521,"byte_end":442560,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442561,"byte_end":442598,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442599,"byte_end":442638,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442639,"byte_end":442655,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442656,"byte_end":442672,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442673,"byte_end":442682,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442683,"byte_end":442690,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442691,"byte_end":442694,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442695,"byte_end":442747,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442748,"byte_end":442786,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442787,"byte_end":442796,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":442797,"byte_end":442804,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14707},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443165,"byte_end":443171,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":14711},{"krate":0,"index":14712}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6192},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448222,"byte_end":448236,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6194},{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446156,"byte_end":446190,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446191,"byte_end":446194,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446195,"byte_end":446274,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446275,"byte_end":446346,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446347,"byte_end":446423,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446424,"byte_end":446472,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446473,"byte_end":446476,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446477,"byte_end":446556,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446557,"byte_end":446632,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446633,"byte_end":446711,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446712,"byte_end":446792,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446793,"byte_end":446822,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446823,"byte_end":446826,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446827,"byte_end":446905,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446906,"byte_end":446980,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":446981,"byte_end":447056,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447057,"byte_end":447132,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447133,"byte_end":447208,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447209,"byte_end":447267,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447268,"byte_end":447271,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447272,"byte_end":447345,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447346,"byte_end":447424,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447425,"byte_end":447483,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447484,"byte_end":447557,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447558,"byte_end":447626,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447627,"byte_end":447703,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447704,"byte_end":447772,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447773,"byte_end":447826,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447827,"byte_end":447830,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447831,"byte_end":447897,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447898,"byte_end":447977,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":447978,"byte_end":448025,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448026,"byte_end":448029,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448030,"byte_end":448103,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448104,"byte_end":448161,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448162,"byte_end":448210,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6202},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448744,"byte_end":448747,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448524,"byte_end":448568,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448573,"byte_end":448576,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448581,"byte_end":448656,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448661,"byte_end":448732,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6203},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449244,"byte_end":449247,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448971,"byte_end":449028,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449033,"byte_end":449036,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449041,"byte_end":449104,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449109,"byte_end":449173,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449178,"byte_end":449232,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6204},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449405,"byte_end":449413,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449342,"byte_end":449393,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6205},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449837,"byte_end":449841,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449518,"byte_end":449551,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449556,"byte_end":449559,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449564,"byte_end":449640,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449645,"byte_end":449719,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449724,"byte_end":449797,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":449802,"byte_end":449825,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6232},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6240},{"krate":0,"index":6243},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6288},{"krate":0,"index":6291},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6312},{"krate":0,"index":6315},{"krate":0,"index":6318},{"krate":0,"index":6321},{"krate":0,"index":6324},{"krate":0,"index":6330},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6407},{"krate":0,"index":6410},{"krate":0,"index":6413},{"krate":0,"index":6477},{"krate":0,"index":6480},{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6543},{"krate":0,"index":6546},{"krate":0,"index":6551},{"krate":0,"index":6553},{"krate":0,"index":6555},{"krate":0,"index":6557},{"krate":0,"index":6559},{"krate":0,"index":6561},{"krate":0,"index":6564},{"krate":0,"index":6579},{"krate":0,"index":6592},{"krate":0,"index":6595},{"krate":0,"index":6599},{"krate":0,"index":6602},{"krate":0,"index":6608},{"krate":0,"index":6614},{"krate":0,"index":6619},{"krate":0,"index":6624},{"krate":0,"index":6627}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175321,"byte_end":175355,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175356,"byte_end":175381,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452206,"byte_end":452238,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452239,"byte_end":452242,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452243,"byte_end":452318,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":452319,"byte_end":452376,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14800},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":479582,"byte_end":479592,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":14803},{"krate":0,"index":14804},{"krate":0,"index":14805}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":479494,"byte_end":479553,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":479829,"byte_end":479836,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":479741,"byte_end":479800,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14819},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":479977,"byte_end":479987,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":14822},{"krate":0,"index":14823},{"krate":0,"index":14824},{"krate":0,"index":14825}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":479887,"byte_end":479948,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14830},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":480275,"byte_end":480279,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":480181,"byte_end":480246,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14839},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":480416,"byte_end":480424,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":14841},{"krate":0,"index":14842}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":480330,"byte_end":480387,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6546},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454243,"byte_end":454259,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453148,"byte_end":453201,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453202,"byte_end":453205,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453206,"byte_end":453274,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453275,"byte_end":453348,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453349,"byte_end":453425,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453426,"byte_end":453470,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453471,"byte_end":453474,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453475,"byte_end":453553,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453554,"byte_end":453612,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453613,"byte_end":453677,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453678,"byte_end":453731,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453732,"byte_end":453811,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453812,"byte_end":453841,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453842,"byte_end":453845,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453846,"byte_end":453916,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453917,"byte_end":453994,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":453995,"byte_end":454046,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454047,"byte_end":454050,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454051,"byte_end":454124,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454125,"byte_end":454182,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454183,"byte_end":454231,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6566},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456876,"byte_end":456879,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456605,"byte_end":456654,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456659,"byte_end":456662,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456667,"byte_end":456734,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456739,"byte_end":456813,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456818,"byte_end":456864,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6567},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":457874,"byte_end":457877,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":457736,"byte_end":457791,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":457796,"byte_end":457799,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":457804,"byte_end":457862,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6568},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458041,"byte_end":458049,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":457979,"byte_end":458029,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458632,"byte_end":458636,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458262,"byte_end":458293,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458298,"byte_end":458301,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458306,"byte_end":458376,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458381,"byte_end":458467,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458472,"byte_end":458548,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":458553,"byte_end":458620,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6570},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":459911,"byte_end":459915,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":459829,"byte_end":459899,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":460113,"byte_end":460125,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":460031,"byte_end":460101,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6572},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":460454,"byte_end":460462,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":460373,"byte_end":460442,"line_start":204,"line_end":204,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6573},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":460669,"byte_end":460681,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":460588,"byte_end":460657,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6597},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":475818,"byte_end":475823,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":475765,"byte_end":475806,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6634},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6642},{"krate":0,"index":6645},{"krate":0,"index":6648},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6655},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6662},{"krate":0,"index":6665},{"krate":0,"index":6668},{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6675},{"krate":0,"index":6678},{"krate":0,"index":6681},{"krate":0,"index":14846},{"krate":0,"index":14849},{"krate":0,"index":6684},{"krate":0,"index":6687},{"krate":0,"index":6696},{"krate":0,"index":6699},{"krate":0,"index":6703},{"krate":0,"index":6706},{"krate":0,"index":6708},{"krate":0,"index":6712},{"krate":0,"index":6716},{"krate":0,"index":6721},{"krate":0,"index":6727},{"krate":0,"index":14879},{"krate":0,"index":14884},{"krate":0,"index":14888},{"krate":0,"index":14893},{"krate":0,"index":14897},{"krate":0,"index":14901},{"krate":0,"index":6733},{"krate":0,"index":6739},{"krate":0,"index":6741},{"krate":0,"index":6747},{"krate":0,"index":6749},{"krate":0,"index":6754}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175537,"byte_end":175571,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175572,"byte_end":175597,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":492769,"byte_end":492800,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":14846},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":493840,"byte_end":493849,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":14848}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6689},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494331,"byte_end":494334,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494131,"byte_end":494170,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494175,"byte_end":494178,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494183,"byte_end":494253,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494258,"byte_end":494319,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6690},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494544,"byte_end":494547,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494406,"byte_end":494461,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494466,"byte_end":494469,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494474,"byte_end":494532,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6691},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494663,"byte_end":494671,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494602,"byte_end":494651,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6692},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495033,"byte_end":495037,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494730,"byte_end":494761,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494766,"byte_end":494769,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494774,"byte_end":494846,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494851,"byte_end":494925,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494930,"byte_end":494998,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495003,"byte_end":495021,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6693},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495203,"byte_end":495207,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495121,"byte_end":495191,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495357,"byte_end":495365,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495276,"byte_end":495345,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6695},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495501,"byte_end":495506,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495448,"byte_end":495489,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6706},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497213,"byte_end":497223,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496592,"byte_end":496666,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496667,"byte_end":496670,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496671,"byte_end":496750,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496751,"byte_end":496802,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496803,"byte_end":496877,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496878,"byte_end":496937,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496938,"byte_end":496941,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496942,"byte_end":497014,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497015,"byte_end":497065,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497066,"byte_end":497069,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497070,"byte_end":497147,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497148,"byte_end":497205,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14879},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498530,"byte_end":498534,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498440,"byte_end":498501,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14888},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498687,"byte_end":498694,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498599,"byte_end":498658,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14897},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498848,"byte_end":498856,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498762,"byte_end":498819,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6777},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500871,"byte_end":500880,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500501,"byte_end":500588,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500589,"byte_end":500592,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500593,"byte_end":500669,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500670,"byte_end":500723,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500724,"byte_end":500727,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500728,"byte_end":500805,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/abortable.rs","byte_start":500806,"byte_end":500863,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6811},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6816},{"krate":0,"index":6819},{"krate":0,"index":6822},{"krate":0,"index":6825},{"krate":0,"index":6826},{"krate":0,"index":6829},{"krate":0,"index":6832},{"krate":0,"index":6833},{"krate":0,"index":6836},{"krate":0,"index":6839},{"krate":0,"index":6842},{"krate":0,"index":6875},{"krate":0,"index":6878},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6916},{"krate":0,"index":6919},{"krate":0,"index":6967},{"krate":0,"index":6970},{"krate":0,"index":7005},{"krate":0,"index":7008},{"krate":0,"index":7041},{"krate":0,"index":7044},{"krate":0,"index":7085},{"krate":0,"index":7088},{"krate":0,"index":7139},{"krate":0,"index":7142},{"krate":0,"index":7178},{"krate":0,"index":7181},{"krate":0,"index":7250},{"krate":0,"index":7253},{"krate":0,"index":7300},{"krate":0,"index":7301},{"krate":0,"index":7304},{"krate":0,"index":7307},{"krate":0,"index":7388},{"krate":0,"index":7391},{"krate":0,"index":7464},{"krate":0,"index":7467},{"krate":0,"index":7520},{"krate":0,"index":7523},{"krate":0,"index":7526},{"krate":0,"index":7560}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11248,"byte_end":11272,"line_start":311,"line_end":311,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501108,"byte_end":501131,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501132,"byte_end":501135,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501136,"byte_end":501161,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501162,"byte_end":501165,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501166,"byte_end":501238,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501239,"byte_end":501318,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":501319,"byte_end":501331,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":14904},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512612,"byte_end":512617,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":14908},{"krate":0,"index":14909}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512456,"byte_end":512515,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512533,"byte_end":512600,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":14915},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513608,"byte_end":513613,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":14917}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513496,"byte_end":513532,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513550,"byte_end":513596,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":6901},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":514012,"byte_end":514017,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513650,"byte_end":513713,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513714,"byte_end":513717,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513718,"byte_end":513763,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513764,"byte_end":513767,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513768,"byte_end":513782,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513783,"byte_end":513786,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513787,"byte_end":513794,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513795,"byte_end":513836,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513837,"byte_end":513876,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513877,"byte_end":513880,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513881,"byte_end":513915,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513916,"byte_end":513941,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513942,"byte_end":513996,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":513997,"byte_end":514004,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14921},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515207,"byte_end":515213,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":14924},{"krate":0,"index":14925}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6950},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515493,"byte_end":515500,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515435,"byte_end":515481,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6951},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515631,"byte_end":515638,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515572,"byte_end":515619,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6952},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515796,"byte_end":515807,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515730,"byte_end":515784,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6953},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516179,"byte_end":516189,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515945,"byte_end":516006,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516011,"byte_end":516014,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516019,"byte_end":516088,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516093,"byte_end":516167,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":14966},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518435,"byte_end":518439,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":14970},{"krate":0,"index":14971}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518281,"byte_end":518338,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518356,"byte_end":518423,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":14977},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":519770,"byte_end":519775,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":14981},{"krate":0,"index":14982}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":519614,"byte_end":519673,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":519691,"byte_end":519758,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":14997},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521012,"byte_end":521023,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":15001}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15059},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":522323,"byte_end":522333,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":15062},{"krate":0,"index":15063}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15111},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524230,"byte_end":524234,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":15115}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524076,"byte_end":524133,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524151,"byte_end":524218,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7221},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":525663,"byte_end":525670,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":525427,"byte_end":525492,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":525493,"byte_end":525533,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":525584,"byte_end":525651,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15130},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528621,"byte_end":528627,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15134},{"krate":0,"index":15135}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7283},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529227,"byte_end":529233,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528718,"byte_end":528787,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528788,"byte_end":528791,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528792,"byte_end":528806,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528807,"byte_end":528810,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528811,"byte_end":528818,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528819,"byte_end":528860,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528861,"byte_end":528900,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528901,"byte_end":528904,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528905,"byte_end":528957,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528958,"byte_end":528978,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":528979,"byte_end":529000,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529001,"byte_end":529032,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529033,"byte_end":529080,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529081,"byte_end":529090,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529091,"byte_end":529098,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529099,"byte_end":529129,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529130,"byte_end":529156,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529157,"byte_end":529211,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529212,"byte_end":529219,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15179},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":531211,"byte_end":531215,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":15185},{"krate":0,"index":15186},{"krate":0,"index":15187},{"krate":0,"index":15188}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15262},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":534758,"byte_end":534769,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":15268},{"krate":0,"index":15269},{"krate":0,"index":15270},{"krate":0,"index":15271},{"krate":0,"index":15272}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15356},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":538504,"byte_end":538510,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":15359},{"krate":0,"index":15360},{"krate":0,"index":15361}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7526},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502425,"byte_end":502432,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":7528},{"krate":0,"index":7533},{"krate":0,"index":7537},{"krate":0,"index":7540},{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7552},{"krate":0,"index":7554},{"krate":0,"index":7556},{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7559}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502316,"byte_end":502388,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502389,"byte_end":502414,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7528},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503024,"byte_end":503028,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502457,"byte_end":502504,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502509,"byte_end":502512,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502517,"byte_end":502588,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502593,"byte_end":502644,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502649,"byte_end":502652,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502657,"byte_end":502732,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502737,"byte_end":502813,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502818,"byte_end":502887,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502892,"byte_end":502895,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502900,"byte_end":502972,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502977,"byte_end":503016,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7533},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504384,"byte_end":504397,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503290,"byte_end":503337,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503342,"byte_end":503345,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503350,"byte_end":503421,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503426,"byte_end":503477,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503482,"byte_end":503485,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503490,"byte_end":503561,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503566,"byte_end":503642,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503647,"byte_end":503678,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503683,"byte_end":503686,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503691,"byte_end":503763,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503768,"byte_end":503812,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503817,"byte_end":503820,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503825,"byte_end":503839,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503844,"byte_end":503847,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503852,"byte_end":503859,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503864,"byte_end":503905,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503910,"byte_end":503941,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503946,"byte_end":503977,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":503982,"byte_end":504025,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504030,"byte_end":504033,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504038,"byte_end":504074,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504079,"byte_end":504082,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504087,"byte_end":504126,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504131,"byte_end":504168,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504173,"byte_end":504180,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504185,"byte_end":504188,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504193,"byte_end":504223,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504228,"byte_end":504241,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504246,"byte_end":504294,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504299,"byte_end":504350,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504355,"byte_end":504364,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":504369,"byte_end":504376,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7537},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505137,"byte_end":505149,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505083,"byte_end":505129,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7540},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505517,"byte_end":505530,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505336,"byte_end":505411,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505416,"byte_end":505419,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505424,"byte_end":505509,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":7542},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506365,"byte_end":506371,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505716,"byte_end":505765,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505770,"byte_end":505773,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505778,"byte_end":505844,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505849,"byte_end":505925,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":505930,"byte_end":506005,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506010,"byte_end":506048,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506053,"byte_end":506056,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506061,"byte_end":506133,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506138,"byte_end":506177,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506182,"byte_end":506185,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506190,"byte_end":506265,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506270,"byte_end":506327,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506332,"byte_end":506357,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7543},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506565,"byte_end":506570,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506538,"byte_end":506557,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":7544},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506904,"byte_end":506910,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506725,"byte_end":506760,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506765,"byte_end":506768,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506773,"byte_end":506855,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":506860,"byte_end":506896,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7546},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507337,"byte_end":507342,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507136,"byte_end":507185,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507190,"byte_end":507193,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507198,"byte_end":507279,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507284,"byte_end":507329,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7547},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507824,"byte_end":507828,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507497,"byte_end":507570,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507575,"byte_end":507613,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507618,"byte_end":507621,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507626,"byte_end":507700,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507705,"byte_end":507766,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507771,"byte_end":507816,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7548},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508305,"byte_end":508309,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":507999,"byte_end":508065,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508070,"byte_end":508086,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508091,"byte_end":508094,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508099,"byte_end":508162,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508167,"byte_end":508232,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508237,"byte_end":508297,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7549},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509216,"byte_end":509224,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St: ?Sized>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin + ?Sized, Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508480,"byte_end":508555,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508560,"byte_end":508598,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508603,"byte_end":508606,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508611,"byte_end":508684,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508689,"byte_end":508765,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508770,"byte_end":508844,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508849,"byte_end":508927,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":508932,"byte_end":509015,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509020,"byte_end":509023,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509028,"byte_end":509086,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509091,"byte_end":509166,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509171,"byte_end":509208,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7552},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510022,"byte_end":510031,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509749,"byte_end":509820,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509825,"byte_end":509846,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509851,"byte_end":509854,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509859,"byte_end":509937,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":509942,"byte_end":510014,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7554},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510499,"byte_end":510509,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510222,"byte_end":510298,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510303,"byte_end":510324,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510329,"byte_end":510332,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510337,"byte_end":510414,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":510419,"byte_end":510491,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7556},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511154,"byte_end":511170,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511056,"byte_end":511126,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511131,"byte_end":511146,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7557},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511421,"byte_end":511437,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511323,"byte_end":511393,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511398,"byte_end":511413,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7558},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511674,"byte_end":511690,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511576,"byte_end":511646,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511651,"byte_end":511666,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7559},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511941,"byte_end":511957,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511843,"byte_end":511913,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":511918,"byte_end":511933,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":7571},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7582},{"krate":0,"index":7585},{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7592},{"krate":0,"index":7595},{"krate":0,"index":7598},{"krate":0,"index":7601},{"krate":0,"index":7604},{"krate":0,"index":7607},{"krate":0,"index":7610},{"krate":0,"index":7613},{"krate":0,"index":7616},{"krate":0,"index":7619},{"krate":0,"index":7620},{"krate":0,"index":7623},{"krate":0,"index":7626},{"krate":0,"index":7629},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7667}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541178,"byte_end":541211,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541212,"byte_end":541215,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541216,"byte_end":541241,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541242,"byte_end":541245,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541246,"byte_end":541294,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541295,"byte_end":541348,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541349,"byte_end":541397,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541398,"byte_end":541445,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541446,"byte_end":541449,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541450,"byte_end":541524,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":541525,"byte_end":541597,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":7657},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542871,"byte_end":542879,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":7658}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542828,"byte_end":542860,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7658},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543876,"byte_end":543881,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":7657},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542893,"byte_end":542958,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542963,"byte_end":542978,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542983,"byte_end":542986,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542991,"byte_end":543061,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543066,"byte_end":543085,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543090,"byte_end":543093,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543098,"byte_end":543167,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543172,"byte_end":543245,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543250,"byte_end":543289,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543294,"byte_end":543297,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543302,"byte_end":543368,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543373,"byte_end":543439,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543444,"byte_end":543515,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543520,"byte_end":543576,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543581,"byte_end":543584,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543589,"byte_end":543596,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543601,"byte_end":543639,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543644,"byte_end":543676,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543681,"byte_end":543684,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543689,"byte_end":543735,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543740,"byte_end":543743,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543748,"byte_end":543785,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543790,"byte_end":543826,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543831,"byte_end":543838,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":543843,"byte_end":543868,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":7660},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545635,"byte_end":545648,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":7661}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545587,"byte_end":545624,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7661},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546691,"byte_end":546702,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":7660},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545667,"byte_end":545732,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545737,"byte_end":545752,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545757,"byte_end":545760,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545765,"byte_end":545835,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545840,"byte_end":545859,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545864,"byte_end":545867,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545872,"byte_end":545941,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545946,"byte_end":546019,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546024,"byte_end":546063,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546068,"byte_end":546071,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546076,"byte_end":546142,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546147,"byte_end":546213,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546218,"byte_end":546289,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546294,"byte_end":546350,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546355,"byte_end":546358,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546363,"byte_end":546370,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546375,"byte_end":546412,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546417,"byte_end":546454,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546459,"byte_end":546462,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546467,"byte_end":546503,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546508,"byte_end":546545,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546550,"byte_end":546553,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546558,"byte_end":546595,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546600,"byte_end":546641,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546646,"byte_end":546653,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":546658,"byte_end":546683,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":7670},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","parent":null,"children":[{"krate":0,"index":7671}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548107,"byte_end":548149,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548150,"byte_end":548153,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548154,"byte_end":548220,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":7671},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548857,"byte_end":548862,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548222,"byte_end":548257,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548258,"byte_end":548261,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548262,"byte_end":548337,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548338,"byte_end":548375,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548376,"byte_end":548379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548380,"byte_end":548444,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548445,"byte_end":548448,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548449,"byte_end":548520,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548521,"byte_end":548572,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548573,"byte_end":548665,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548666,"byte_end":548669,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548670,"byte_end":548741,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":548742,"byte_end":548847,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":7672},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":7673},{"krate":0,"index":7855},{"krate":0,"index":7856},{"krate":0,"index":7859},{"krate":0,"index":7862},{"krate":0,"index":7865},{"krate":0,"index":7868},{"krate":0,"index":7950}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11853,"byte_end":11878,"line_start":338,"line_end":338,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":548893,"byte_end":548940,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":548941,"byte_end":548944,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":548945,"byte_end":549020,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mod.rs","byte_start":549021,"byte_end":549078,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7727},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550501,"byte_end":550506,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7729},{"krate":0,"index":7730},{"krate":0,"index":7731}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550174,"byte_end":550200,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550201,"byte_end":550204,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550205,"byte_end":550219,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550220,"byte_end":550223,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550224,"byte_end":550303,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550304,"byte_end":550386,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550387,"byte_end":550471,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550472,"byte_end":550489,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7754},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551732,"byte_end":551735,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551682,"byte_end":551720,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7755},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552162,"byte_end":552172,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551916,"byte_end":551971,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551976,"byte_end":551979,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551984,"byte_end":551998,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552003,"byte_end":552006,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552011,"byte_end":552018,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552023,"byte_end":552052,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552057,"byte_end":552060,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552065,"byte_end":552095,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552100,"byte_end":552138,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552143,"byte_end":552150,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7758},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552386,"byte_end":552394,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552258,"byte_end":552302,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552307,"byte_end":552310,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552315,"byte_end":552374,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7759},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552815,"byte_end":552819,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552650,"byte_end":552686,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552691,"byte_end":552694,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552699,"byte_end":552772,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552777,"byte_end":552803,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7760},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553447,"byte_end":553454,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552937,"byte_end":552992,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552997,"byte_end":553000,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553005,"byte_end":553080,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553085,"byte_end":553159,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553164,"byte_end":553167,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553172,"byte_end":553186,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553191,"byte_end":553194,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553199,"byte_end":553206,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553211,"byte_end":553252,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553257,"byte_end":553286,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553291,"byte_end":553294,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553299,"byte_end":553333,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553338,"byte_end":553364,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553369,"byte_end":553409,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553414,"byte_end":553423,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":553428,"byte_end":553435,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555176,"byte_end":555191,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":7767},{"krate":0,"index":7768}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555083,"byte_end":555164,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":7783},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557726,"byte_end":557736,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7786}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557562,"byte_end":557626,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557627,"byte_end":557700,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557701,"byte_end":557714,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7790},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558305,"byte_end":558308,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557826,"byte_end":557886,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557891,"byte_end":557894,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557899,"byte_end":557912,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557917,"byte_end":557920,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557925,"byte_end":557932,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557937,"byte_end":557978,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557983,"byte_end":558026,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558031,"byte_end":558034,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558039,"byte_end":558092,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558097,"byte_end":558102,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558107,"byte_end":558196,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558201,"byte_end":558243,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558248,"byte_end":558253,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558258,"byte_end":558267,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558272,"byte_end":558279,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558284,"byte_end":558293,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7806},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559600,"byte_end":559616,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7810},{"krate":0,"index":7811},{"krate":0,"index":7812}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559416,"byte_end":559504,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559505,"byte_end":559588,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":7817},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560382,"byte_end":560385,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559793,"byte_end":559853,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559858,"byte_end":559861,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559866,"byte_end":559879,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559884,"byte_end":559887,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559892,"byte_end":559899,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559904,"byte_end":559945,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559950,"byte_end":560011,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560016,"byte_end":560019,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560024,"byte_end":560077,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560082,"byte_end":560087,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560092,"byte_end":560181,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560186,"byte_end":560276,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560281,"byte_end":560320,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560325,"byte_end":560330,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560335,"byte_end":560344,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560349,"byte_end":560356,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560361,"byte_end":560370,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15432},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573439,"byte_end":573448,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":15434},{"krate":0,"index":15435}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12922459,"byte_end":12922468,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7991},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574858,"byte_end":574861,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573554,"byte_end":573636,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573641,"byte_end":573709,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573714,"byte_end":573717,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573722,"byte_end":573794,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573799,"byte_end":573882,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573887,"byte_end":573912,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573917,"byte_end":573920,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573925,"byte_end":573940,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573945,"byte_end":573948,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573953,"byte_end":573976,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573981,"byte_end":573984,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573989,"byte_end":573996,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574001,"byte_end":574042,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574047,"byte_end":574106,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574111,"byte_end":574114,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574119,"byte_end":574188,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574193,"byte_end":574258,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574263,"byte_end":574288,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574293,"byte_end":574336,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574341,"byte_end":574350,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574355,"byte_end":574362,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574367,"byte_end":574370,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574375,"byte_end":574398,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574403,"byte_end":574406,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574411,"byte_end":574418,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574423,"byte_end":574464,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574469,"byte_end":574521,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574526,"byte_end":574571,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574576,"byte_end":574579,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574584,"byte_end":574653,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574658,"byte_end":574743,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574748,"byte_end":574773,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574778,"byte_end":574820,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574825,"byte_end":574834,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574839,"byte_end":574846,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7992},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575366,"byte_end":575376,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":574956,"byte_end":575020,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575025,"byte_end":575093,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575098,"byte_end":575148,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575153,"byte_end":575207,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575212,"byte_end":575304,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575309,"byte_end":575354,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":15470},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575644,"byte_end":575661,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":15471}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575454,"byte_end":575504,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575505,"byte_end":575581,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575582,"byte_end":575615,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15474},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575767,"byte_end":575778,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":15475}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575695,"byte_end":575731,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7994},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576049,"byte_end":576057,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575835,"byte_end":575909,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575914,"byte_end":575954,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575959,"byte_end":575962,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575967,"byte_end":576037,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":15485},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576579,"byte_end":576586,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576470,"byte_end":576522,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8014},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578720,"byte_end":578725,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578353,"byte_end":578421,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578426,"byte_end":578429,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578434,"byte_end":578501,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578506,"byte_end":578574,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578579,"byte_end":578653,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578658,"byte_end":578708,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8026},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":578908,"byte_end":578915,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8028},{"krate":0,"index":8029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8028},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":578930,"byte_end":578936,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8029},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":578945,"byte_end":578954,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8036},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579147,"byte_end":579153,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8038},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579178,"byte_end":579186,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":8036},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8053},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580492,"byte_end":580496,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15516},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580852,"byte_end":580859,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15537},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581593,"byte_end":581606,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15553},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581948,"byte_end":581957,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15568},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582912,"byte_end":582919,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15583},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583630,"byte_end":583638,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15598},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584358,"byte_end":584369,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15610},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585254,"byte_end":585266,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15622},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586414,"byte_end":586428,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8217},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":587193,"byte_end":587199,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/poll.rs","byte_start":14653,"byte_end":14661,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/pending.rs","byte_start":15829,"byte_end":15840,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60543,"byte_end":60550,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60680,"byte_end":60687,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60912,"byte_end":60919,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":61693,"byte_end":61700,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":61925,"byte_end":61932,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":62785,"byte_end":62792,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":64946,"byte_end":64950,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65057,"byte_end":65061,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66790,"byte_end":66794,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66907,"byte_end":66911,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":67889,"byte_end":67892,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":68061,"byte_end":68064,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":68326,"byte_end":68329,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/catch_unwind.rs","byte_start":69535,"byte_end":69546,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/catch_unwind.rs","byte_start":69689,"byte_end":69700,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70927,"byte_end":70937,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71138,"byte_end":71144,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71187,"byte_end":71193,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71451,"byte_end":71456,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71610,"byte_end":71620,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71852,"byte_end":71857,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71954,"byte_end":71959,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72203,"byte_end":72209,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72633,"byte_end":72639,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74705,"byte_end":74710,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":76406,"byte_end":76412,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":76564,"byte_end":76570,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":78159,"byte_end":78164,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":79871,"byte_end":79877,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80036,"byte_end":80042,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80470,"byte_end":80478,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80837,"byte_end":80847,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43694,"byte_end":43695,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103273,"byte_end":103283,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103434,"byte_end":103444,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103567,"byte_end":103577,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104286,"byte_end":104296,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104426,"byte_end":104436,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104679,"byte_end":104689,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":105642,"byte_end":105652,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":105895,"byte_end":105905,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":106942,"byte_end":106952,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109229,"byte_end":109242,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109372,"byte_end":109385,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109628,"byte_end":109641,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85819,"byte_end":85822,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":110950,"byte_end":110954,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111550,"byte_end":111554,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111698,"byte_end":111702,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112305,"byte_end":112312,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112873,"byte_end":112880,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":113025,"byte_end":113032,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":113058,"byte_end":113065,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113819,"byte_end":113828,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114431,"byte_end":114440,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115538,"byte_end":115547,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115748,"byte_end":115757,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117077,"byte_end":117089,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117315,"byte_end":117327,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":118440,"byte_end":118452,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":118656,"byte_end":118668,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120318,"byte_end":120330,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120428,"byte_end":120440,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120754,"byte_end":120766,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120953,"byte_end":120965,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121403,"byte_end":121409,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":122103,"byte_end":122109,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":122251,"byte_end":122257,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":122985,"byte_end":122998,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":123564,"byte_end":123577,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":124597,"byte_end":124610,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126782,"byte_end":126787,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126966,"byte_end":126971,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127003,"byte_end":127008,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127105,"byte_end":127110,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135097,"byte_end":135104,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":137865,"byte_end":137872,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":138860,"byte_end":138867,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139363,"byte_end":139369,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141805,"byte_end":141811,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":142515,"byte_end":142521,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143084,"byte_end":143093,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144100,"byte_end":144109,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144292,"byte_end":144301,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144971,"byte_end":144980,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153588,"byte_end":153598,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155428,"byte_end":155438,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":156586,"byte_end":156596,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157078,"byte_end":157087,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158926,"byte_end":158935,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160297,"byte_end":160305,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":161383,"byte_end":161391,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":162822,"byte_end":162830,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163809,"byte_end":163815,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164154,"byte_end":164160,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164545,"byte_end":164551,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164932,"byte_end":164938,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165179,"byte_end":165185,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165524,"byte_end":165530,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165806,"byte_end":165812,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":166347,"byte_end":166353,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":166660,"byte_end":166666,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229244,"byte_end":229249,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229475,"byte_end":229480,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229689,"byte_end":229694,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231290,"byte_end":231297,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231562,"byte_end":231569,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231747,"byte_end":231754,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":232780,"byte_end":232785,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":233179,"byte_end":233184,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":233434,"byte_end":233439,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":234564,"byte_end":234570,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":234790,"byte_end":234796,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":235504,"byte_end":235510,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":236173,"byte_end":236178,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":236334,"byte_end":236339,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":237088,"byte_end":237093,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":237841,"byte_end":237850,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":11074},{"krate":0,"index":11075},{"krate":0,"index":11076},{"krate":0,"index":11077}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":238036,"byte_end":238045,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":238163,"byte_end":238172,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":238825,"byte_end":238834,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":11078},{"krate":0,"index":11079},{"krate":0,"index":11080},{"krate":0,"index":11081}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":239613,"byte_end":239619,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":240092,"byte_end":240098,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":11143},{"krate":0,"index":11144},{"krate":0,"index":11145},{"krate":0,"index":11146}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":240421,"byte_end":240427,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":240764,"byte_end":240770,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":242149,"byte_end":242155,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":11147},{"krate":0,"index":11148},{"krate":0,"index":11149},{"krate":0,"index":11150}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":242942,"byte_end":242951,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":243248,"byte_end":243257,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":11208},{"krate":0,"index":11209},{"krate":0,"index":11210},{"krate":0,"index":11211}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":243524,"byte_end":243533,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":243800,"byte_end":243809,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":245227,"byte_end":245236,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":11212},{"krate":0,"index":11213},{"krate":0,"index":11214},{"krate":0,"index":11215}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":245911,"byte_end":245918,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":11265},{"krate":0,"index":11266},{"krate":0,"index":11267},{"krate":0,"index":11268}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":246087,"byte_end":246094,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":246286,"byte_end":246293,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":247115,"byte_end":247122,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":11269},{"krate":0,"index":11270},{"krate":0,"index":11271},{"krate":0,"index":11272}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":247807,"byte_end":247811,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":248167,"byte_end":248171,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":248432,"byte_end":248436,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":248671,"byte_end":248675,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250264,"byte_end":250267,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250597,"byte_end":250600,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250853,"byte_end":250856,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":251085,"byte_end":251088,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2620},{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":252840,"byte_end":252843,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":253173,"byte_end":253176,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":253428,"byte_end":253431,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":253660,"byte_end":253663,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255499,"byte_end":255506,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255706,"byte_end":255713,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255915,"byte_end":255922,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":257727,"byte_end":257734,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":258027,"byte_end":258034,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":258265,"byte_end":258272,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":258511,"byte_end":258518,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259619,"byte_end":259623,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":11747},{"krate":0,"index":11748},{"krate":0,"index":11749},{"krate":0,"index":11750}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":260120,"byte_end":260124,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":260222,"byte_end":260226,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":260912,"byte_end":260916,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":11751},{"krate":0,"index":11752},{"krate":0,"index":11753},{"krate":0,"index":11754}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261428,"byte_end":261440,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263930,"byte_end":263942,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":264062,"byte_end":264074,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":264959,"byte_end":264962,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":265151,"byte_end":265154,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":11884},{"krate":0,"index":11885},{"krate":0,"index":11886},{"krate":0,"index":11887}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":265323,"byte_end":265326,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2922}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":265494,"byte_end":265497,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":266039,"byte_end":266042,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2934},{"krate":0,"index":11888},{"krate":0,"index":11889},{"krate":0,"index":11890},{"krate":0,"index":11891}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266609,"byte_end":266613,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266664,"byte_end":266668,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266819,"byte_end":266823,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266962,"byte_end":266966,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267617,"byte_end":267631,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267782,"byte_end":267796,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267940,"byte_end":267954,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269265,"byte_end":269273,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3075},{"krate":0,"index":12041},{"krate":0,"index":12042},{"krate":0,"index":12043},{"krate":0,"index":12044},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274770,"byte_end":274778,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274920,"byte_end":274928,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":275713,"byte_end":275721,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":12045},{"krate":0,"index":12046},{"krate":0,"index":12047},{"krate":0,"index":12048}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":276087,"byte_end":276091,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":276336,"byte_end":276340,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":276451,"byte_end":276455,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277152,"byte_end":277159,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277407,"byte_end":277414,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277525,"byte_end":277532,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278252,"byte_end":278258,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278610,"byte_end":278616,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278885,"byte_end":278891,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280152,"byte_end":280160,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280480,"byte_end":280488,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280672,"byte_end":280680,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3147},{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":281051,"byte_end":281061,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":281726,"byte_end":281730,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":12269},{"krate":0,"index":12270},{"krate":0,"index":12271},{"krate":0,"index":12272}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":281921,"byte_end":281925,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":282043,"byte_end":282047,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":282858,"byte_end":282862,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3218},{"krate":0,"index":12273},{"krate":0,"index":12274},{"krate":0,"index":12275},{"krate":0,"index":12276}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":283644,"byte_end":283653,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":284105,"byte_end":284114,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":12342},{"krate":0,"index":12343},{"krate":0,"index":12344},{"krate":0,"index":12345}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":284440,"byte_end":284449,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":284697,"byte_end":284706,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":286320,"byte_end":286329,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":12346},{"krate":0,"index":12347},{"krate":0,"index":12348},{"krate":0,"index":12349}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":287006,"byte_end":287010,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":12390},{"krate":0,"index":12391},{"krate":0,"index":12392},{"krate":0,"index":12393}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":287183,"byte_end":287187,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":288159,"byte_end":288163,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":288411,"byte_end":288415,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":12394},{"krate":0,"index":12395},{"krate":0,"index":12396},{"krate":0,"index":12397}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":289186,"byte_end":289195,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":289643,"byte_end":289652,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":12463},{"krate":0,"index":12464},{"krate":0,"index":12465},{"krate":0,"index":12466}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":289971,"byte_end":289980,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":291499,"byte_end":291508,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":291864,"byte_end":291873,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3394},{"krate":0,"index":12467},{"krate":0,"index":12468},{"krate":0,"index":12469},{"krate":0,"index":12470}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":292892,"byte_end":292901,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293189,"byte_end":293198,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":12524},{"krate":0,"index":12525},{"krate":0,"index":12526},{"krate":0,"index":12527},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295315,"byte_end":295324,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":296356,"byte_end":296365,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":296602,"byte_end":296611,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":12528},{"krate":0,"index":12529},{"krate":0,"index":12530},{"krate":0,"index":12531}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297307,"byte_end":297311,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297562,"byte_end":297566,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3502},{"krate":0,"index":12589},{"krate":0,"index":12590},{"krate":0,"index":12591},{"krate":0,"index":12592}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297812,"byte_end":297816,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":298042,"byte_end":298046,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":299225,"byte_end":299229,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3520},{"krate":0,"index":12593},{"krate":0,"index":12594},{"krate":0,"index":12595},{"krate":0,"index":12596}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":299928,"byte_end":299931,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301517,"byte_end":301520,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301715,"byte_end":301718,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":304413,"byte_end":304419,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":12698},{"krate":0,"index":12699},{"krate":0,"index":12700},{"krate":0,"index":12701}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":304927,"byte_end":304933,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":306549,"byte_end":306555,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":306778,"byte_end":306784,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":12702},{"krate":0,"index":12703},{"krate":0,"index":12704},{"krate":0,"index":12705}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":307527,"byte_end":307538,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":12750},{"krate":0,"index":12751},{"krate":0,"index":12752},{"krate":0,"index":12753}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":307890,"byte_end":307901,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":310070,"byte_end":310081,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":310304,"byte_end":310315,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":12754},{"krate":0,"index":12755},{"krate":0,"index":12756},{"krate":0,"index":12757}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":311079,"byte_end":311083,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3725}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":311569,"byte_end":311573,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":311737,"byte_end":311741,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3739},{"krate":0,"index":12823},{"krate":0,"index":12824},{"krate":0,"index":12825},{"krate":0,"index":12826}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":312103,"byte_end":312107,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":313334,"byte_end":313338,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":313708,"byte_end":313712,"line_start":121,"line_end":121,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":12827},{"krate":0,"index":12828},{"krate":0,"index":12829},{"krate":0,"index":12830}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":314512,"byte_end":314527,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3807}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":314859,"byte_end":314874,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":12872},{"krate":0,"index":12873},{"krate":0,"index":12874},{"krate":0,"index":12875}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":315261,"byte_end":315276,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":316730,"byte_end":316745,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":317029,"byte_end":317044,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3822},{"krate":0,"index":12876},{"krate":0,"index":12877},{"krate":0,"index":12878},{"krate":0,"index":12879}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":317855,"byte_end":317863,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":318210,"byte_end":318218,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":12921},{"krate":0,"index":12922},{"krate":0,"index":12923},{"krate":0,"index":12924}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":318498,"byte_end":318506,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":320024,"byte_end":320032,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3879},{"krate":0,"index":12925},{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12928}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":320843,"byte_end":320860,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3924}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":321206,"byte_end":321223,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":321656,"byte_end":321673,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":321903,"byte_end":321920,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324144,"byte_end":324155,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324178,"byte_end":324189,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324622,"byte_end":324633,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325211,"byte_end":325220,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325268,"byte_end":325277,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325741,"byte_end":325750,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":326472,"byte_end":326481,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328088,"byte_end":328100,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328276,"byte_end":328288,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328537,"byte_end":328549,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":329094,"byte_end":329105,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":13046},{"krate":0,"index":13047},{"krate":0,"index":13048},{"krate":0,"index":13049}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":329297,"byte_end":329308,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":330160,"byte_end":330171,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4081}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183071,"byte_end":183072,"line_start":222,"line_end":222,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369288,"byte_end":369295,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369588,"byte_end":369595,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4420},{"krate":0,"index":13107},{"krate":0,"index":13108},{"krate":0,"index":13109},{"krate":0,"index":13110}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369876,"byte_end":369883,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":371026,"byte_end":371033,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4432}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":371379,"byte_end":371386,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4438},{"krate":0,"index":13111},{"krate":0,"index":13112},{"krate":0,"index":13113},{"krate":0,"index":13114}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":371951,"byte_end":371961,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":13385},{"krate":0,"index":13386},{"krate":0,"index":13387},{"krate":0,"index":13388}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":372154,"byte_end":372164,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4474}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":372285,"byte_end":372295,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":372719,"byte_end":372729,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4483},{"krate":0,"index":13389},{"krate":0,"index":13390},{"krate":0,"index":13391},{"krate":0,"index":13392}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373394,"byte_end":373400,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4527}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373692,"byte_end":373698,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":13606},{"krate":0,"index":13607},{"krate":0,"index":13608},{"krate":0,"index":13609}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373976,"byte_end":373982,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":375259,"byte_end":375265,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4544}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":375608,"byte_end":375614,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4550},{"krate":0,"index":13610},{"krate":0,"index":13611},{"krate":0,"index":13612},{"krate":0,"index":13613}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376169,"byte_end":376176,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376230,"byte_end":376237,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376400,"byte_end":376407,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4590}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376549,"byte_end":376556,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377332,"byte_end":377342,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4632}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377638,"byte_end":377648,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4637}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377893,"byte_end":377903,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4643}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379302,"byte_end":379311,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379707,"byte_end":379716,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4692},{"krate":0,"index":13740},{"krate":0,"index":13741},{"krate":0,"index":13742},{"krate":0,"index":13743}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379959,"byte_end":379968,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4697}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":380225,"byte_end":380234,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":381623,"byte_end":381632,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":13744},{"krate":0,"index":13745},{"krate":0,"index":13746},{"krate":0,"index":13747}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382375,"byte_end":382387,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4755}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382687,"byte_end":382699,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4760},{"krate":0,"index":13805},{"krate":0,"index":13806},{"krate":0,"index":13807},{"krate":0,"index":13808}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382896,"byte_end":382908,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4766}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":383186,"byte_end":383198,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":384698,"byte_end":384710,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4780},{"krate":0,"index":13809},{"krate":0,"index":13810},{"krate":0,"index":13811},{"krate":0,"index":13812}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385382,"byte_end":385392,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":13853},{"krate":0,"index":13854},{"krate":0,"index":13855},{"krate":0,"index":13856}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385657,"byte_end":385667,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385913,"byte_end":385923,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4823}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":386842,"byte_end":386852,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4827},{"krate":0,"index":13857},{"krate":0,"index":13858},{"krate":0,"index":13859},{"krate":0,"index":13860}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387532,"byte_end":387542,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387682,"byte_end":387692,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387880,"byte_end":387890,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4876},{"krate":0,"index":4877}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":388888,"byte_end":388897,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":389116,"byte_end":389125,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4909},{"krate":0,"index":4910}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":390509,"byte_end":390518,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":13994},{"krate":0,"index":13995},{"krate":0,"index":13996},{"krate":0,"index":13997}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":391013,"byte_end":391022,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":392970,"byte_end":392979,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393202,"byte_end":393211,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4979},{"krate":0,"index":13998},{"krate":0,"index":13999},{"krate":0,"index":14000},{"krate":0,"index":14001}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393638,"byte_end":393652,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4983}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393797,"byte_end":393811,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4987}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393998,"byte_end":394012,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":394622,"byte_end":394629,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5036}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":394988,"byte_end":394995,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5042}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":395275,"byte_end":395282,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5048}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":395536,"byte_end":395543,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5054},{"krate":0,"index":5055}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":399406,"byte_end":399415,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5097}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":399677,"byte_end":399686,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5103},{"krate":0,"index":5104}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":401432,"byte_end":401444,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":401900,"byte_end":401912,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5157},{"krate":0,"index":14214},{"krate":0,"index":14215},{"krate":0,"index":14216},{"krate":0,"index":14217}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":402252,"byte_end":402264,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":403763,"byte_end":403775,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5169}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":404142,"byte_end":404154,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5176},{"krate":0,"index":14218},{"krate":0,"index":14219},{"krate":0,"index":14220},{"krate":0,"index":14221}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":405003,"byte_end":405015,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5220}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":405467,"byte_end":405479,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5225},{"krate":0,"index":14287},{"krate":0,"index":14288},{"krate":0,"index":14289},{"krate":0,"index":14290}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":405817,"byte_end":405829,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":407436,"byte_end":407448,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5237}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":407835,"byte_end":407847,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5244},{"krate":0,"index":14291},{"krate":0,"index":14292},{"krate":0,"index":14293},{"krate":0,"index":14294}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":408736,"byte_end":408754,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5297},{"krate":0,"index":14339},{"krate":0,"index":14340},{"krate":0,"index":14341},{"krate":0,"index":14342}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409093,"byte_end":409111,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5300},{"krate":0,"index":5301}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":410388,"byte_end":410406,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5306},{"krate":0,"index":14343},{"krate":0,"index":14344},{"krate":0,"index":14345},{"krate":0,"index":14346}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":411317,"byte_end":411328,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":14391},{"krate":0,"index":14392},{"krate":0,"index":14393},{"krate":0,"index":14394}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":411665,"byte_end":411676,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5362},{"krate":0,"index":5363}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":412953,"byte_end":412964,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5368},{"krate":0,"index":14395},{"krate":0,"index":14396},{"krate":0,"index":14397},{"krate":0,"index":14398}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":413834,"byte_end":413854,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5416}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414219,"byte_end":414239,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414478,"byte_end":414498,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414946,"byte_end":414966,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5431},{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335571,"byte_end":335572,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417730,"byte_end":417734,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418356,"byte_end":418360,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5598}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419551,"byte_end":419557,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419584,"byte_end":419590,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419898,"byte_end":419904,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420501,"byte_end":420511,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420555,"byte_end":420565,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5673},{"krate":0,"index":5674},{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420879,"byte_end":420889,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5679}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423409,"byte_end":423414,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423446,"byte_end":423451,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423536,"byte_end":423541,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423790,"byte_end":423795,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424734,"byte_end":424738,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424867,"byte_end":424871,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":425476,"byte_end":425480,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5778}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426139,"byte_end":426146,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426178,"byte_end":426185,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5816}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426270,"byte_end":426277,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426522,"byte_end":426529,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5824}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426916,"byte_end":426922,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426953,"byte_end":426959,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5859}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427724,"byte_end":427730,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5866},{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":428426,"byte_end":428439,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429352,"byte_end":429365,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5900}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432252,"byte_end":432258,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433562,"byte_end":433568,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5958}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433747,"byte_end":433753,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5962},{"krate":0,"index":5963}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434466,"byte_end":434474,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6007}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434771,"byte_end":434779,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6009}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437806,"byte_end":437824,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6020},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":439273,"byte_end":439291,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6029}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":439571,"byte_end":439589,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6035},{"krate":0,"index":6036}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":440701,"byte_end":440719,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6045}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443290,"byte_end":443296,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6101}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443536,"byte_end":443542,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443822,"byte_end":443828,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6114}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445376,"byte_end":445388,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6178}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445493,"byte_end":445505,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445536,"byte_end":445548,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6183}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445671,"byte_end":445683,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6186}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445864,"byte_end":445876,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6189},{"krate":0,"index":6190}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448458,"byte_end":448472,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448498,"byte_end":448512,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":450078,"byte_end":450092,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":450185,"byte_end":450199,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":451361,"byte_end":451375,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":451541,"byte_end":451555,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6219}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":451835,"byte_end":451849,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6224}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":452019,"byte_end":452033,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/abort.rs","byte_start":479174,"byte_end":479185,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6329}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":480544,"byte_end":480552,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":481626,"byte_end":481634,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":481671,"byte_end":481681,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6356},{"krate":0,"index":6357},{"krate":0,"index":6358}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482533,"byte_end":482543,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482591,"byte_end":482598,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482861,"byte_end":482868,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482909,"byte_end":482919,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6372},{"krate":0,"index":6373},{"krate":0,"index":6374}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":483788,"byte_end":483798,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":483846,"byte_end":483850,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484109,"byte_end":484113,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484282,"byte_end":484292,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484337,"byte_end":484347,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484393,"byte_end":484403,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484448,"byte_end":484458,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484512,"byte_end":484520,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484569,"byte_end":484577,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":486062,"byte_end":486066,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":486101,"byte_end":486105,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":486137,"byte_end":486141,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6469}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":487218,"byte_end":487222,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":488222,"byte_end":488226,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6476}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":489676,"byte_end":489691,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":492347,"byte_end":492362,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6538}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454420,"byte_end":454436,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454477,"byte_end":454493,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454522,"byte_end":454538,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454563,"byte_end":454579,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6558}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454764,"byte_end":454780,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456487,"byte_end":456503,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6563}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456577,"byte_end":456593,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6566},{"krate":0,"index":6567},{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6578}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":468124,"byte_end":468140,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":473324,"byte_end":473328,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":475583,"byte_end":475599,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6594}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":475737,"byte_end":475753,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6597},{"krate":0,"index":6598}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":476324,"byte_end":476340,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6601}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":477990,"byte_end":478006,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6616},{"krate":0,"index":6617},{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":478476,"byte_end":478492,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6621}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":478768,"byte_end":478784,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":478906,"byte_end":478922,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6629}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":493957,"byte_end":493966,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6686}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494111,"byte_end":494120,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691},{"krate":0,"index":6692},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495593,"byte_end":495602,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6698}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495701,"byte_end":495710,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6701},{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496494,"byte_end":496503,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6705}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497521,"byte_end":497530,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6710}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497675,"byte_end":497684,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497867,"byte_end":497876,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6720}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498959,"byte_end":498963,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6736},{"krate":0,"index":6737},{"krate":0,"index":6738}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499396,"byte_end":499400,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499455,"byte_end":499462,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499899,"byte_end":499906,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499957,"byte_end":499965,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6751},{"krate":0,"index":6752},{"krate":0,"index":6753}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":500393,"byte_end":500401,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512745,"byte_end":512750,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512944,"byte_end":512949,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6869}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":513125,"byte_end":513130,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6873},{"krate":0,"index":6874}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":514120,"byte_end":514125,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":514153,"byte_end":514158,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515319,"byte_end":515325,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6952},{"krate":0,"index":6953}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516293,"byte_end":516299,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6957}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516511,"byte_end":516517,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6962},{"krate":0,"index":6963},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6966}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518596,"byte_end":518600,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518667,"byte_end":518671,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6997},{"krate":0,"index":6998},{"krate":0,"index":6999}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":519035,"byte_end":519039,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7003},{"krate":0,"index":7004}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":519941,"byte_end":519946,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":520297,"byte_end":520302,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7035}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":520478,"byte_end":520483,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7039},{"krate":0,"index":7040}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521143,"byte_end":521154,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":15042},{"krate":0,"index":15043},{"krate":0,"index":15044},{"krate":0,"index":15045}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521411,"byte_end":521422,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7074},{"krate":0,"index":15046},{"krate":0,"index":15047},{"krate":0,"index":15048},{"krate":0,"index":15049}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521626,"byte_end":521637,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7079},{"krate":0,"index":15050},{"krate":0,"index":15051}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521799,"byte_end":521810,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7084}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":522419,"byte_end":522429,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7115},{"krate":0,"index":15105},{"krate":0,"index":15106},{"krate":0,"index":15107},{"krate":0,"index":15108},{"krate":0,"index":7116}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":522732,"byte_end":522742,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7122},{"krate":0,"index":7123},{"krate":0,"index":7125},{"krate":0,"index":7127},{"krate":0,"index":7129}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":523698,"byte_end":523708,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7134},{"krate":0,"index":15109},{"krate":0,"index":15110}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":523814,"byte_end":523824,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7138}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524375,"byte_end":524379,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524446,"byte_end":524450,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7172}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524638,"byte_end":524642,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7176},{"krate":0,"index":7177}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":525848,"byte_end":525855,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7231}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":526294,"byte_end":526301,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":526413,"byte_end":526420,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7241},{"krate":0,"index":7242}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":527196,"byte_end":527203,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7248},{"krate":0,"index":7249}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529502,"byte_end":529508,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7295},{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7299}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":531425,"byte_end":531429,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":531692,"byte_end":531696,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7352}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":532033,"byte_end":532037,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7360}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":532408,"byte_end":532412,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7367},{"krate":0,"index":15256},{"krate":0,"index":15257}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":532596,"byte_end":532600,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":15258},{"krate":0,"index":15259},{"krate":0,"index":15260},{"krate":0,"index":15261},{"krate":0,"index":7375}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":533275,"byte_end":533279,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":534998,"byte_end":535009,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7430}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":535382,"byte_end":535393,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":15343},{"krate":0,"index":15344},{"krate":0,"index":15345},{"krate":0,"index":15346},{"krate":0,"index":7438}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":536680,"byte_end":536691,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":15347},{"krate":0,"index":15348}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":536914,"byte_end":536925,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7452}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":537174,"byte_end":537185,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7459},{"krate":0,"index":7460},{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7463}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":538729,"byte_end":538735,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":15402},{"krate":0,"index":15403},{"krate":0,"index":15404},{"krate":0,"index":15405},{"krate":0,"index":7501}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":539463,"byte_end":539469,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":539799,"byte_end":539805,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7511}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":539979,"byte_end":539985,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7517},{"krate":0,"index":7518},{"krate":0,"index":7519}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502290,"byte_end":502291,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542743,"byte_end":542745,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542800,"byte_end":542802,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550641,"byte_end":550646,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7734}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550979,"byte_end":550984,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7737}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551077,"byte_end":551082,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7740}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551215,"byte_end":551221,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551667,"byte_end":551672,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7754},{"krate":0,"index":7755}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552243,"byte_end":552248,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555363,"byte_end":555378,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7771}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555809,"byte_end":555824,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7774}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555941,"byte_end":555956,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7778},{"krate":0,"index":7779}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557185,"byte_end":557200,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7782}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557802,"byte_end":557812,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558824,"byte_end":558834,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7795}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559040,"byte_end":559050,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7798}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559148,"byte_end":559158,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7801},{"krate":0,"index":7802}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559299,"byte_end":559309,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7805}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559760,"byte_end":559776,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7817}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560906,"byte_end":560922,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7823}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561187,"byte_end":561203,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7827}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561315,"byte_end":561331,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7831},{"krate":0,"index":7832}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561474,"byte_end":561490,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7836}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561767,"byte_end":561772,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561818,"byte_end":561823,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561990,"byte_end":562005,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562109,"byte_end":562124,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562328,"byte_end":562338,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562388,"byte_end":562398,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562466,"byte_end":562482,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562553,"byte_end":562569,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":564573,"byte_end":564578,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":564615,"byte_end":564620,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":564636,"byte_end":564642,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7913},{"krate":0,"index":7914},{"krate":0,"index":7916},{"krate":0,"index":7917}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570262,"byte_end":570267,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570389,"byte_end":570394,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7923}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570722,"byte_end":570734,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7931}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570898,"byte_end":570910,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7934}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571131,"byte_end":571143,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571525,"byte_end":571536,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7939},{"krate":0,"index":7940}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571699,"byte_end":571710,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7943}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571848,"byte_end":571859,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7946}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":572211,"byte_end":572222,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7949}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573535,"byte_end":573544,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7992}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575817,"byte_end":575828,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7994}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576611,"byte_end":576618,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7996}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576801,"byte_end":576808,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576821,"byte_end":576830,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8000}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":577819,"byte_end":577828,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8005},{"krate":0,"index":8006}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578067,"byte_end":578076,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8010},{"krate":0,"index":8011}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578335,"byte_end":578346,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8014}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579018,"byte_end":579019,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8034},{"krate":0,"index":8035}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579254,"byte_end":579255,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8043}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579525,"byte_end":579526,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8051}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580542,"byte_end":580546,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8059}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580640,"byte_end":580644,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8063},{"krate":0,"index":8064}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580903,"byte_end":580910,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8069},{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581133,"byte_end":581140,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8075}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581331,"byte_end":581338,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581643,"byte_end":581656,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8086},{"krate":0,"index":8087}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582073,"byte_end":582082,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8092},{"krate":0,"index":8093}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582366,"byte_end":582375,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8098}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582637,"byte_end":582646,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8103}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582968,"byte_end":582975,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8110},{"krate":0,"index":8111}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583194,"byte_end":583201,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8117}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583379,"byte_end":583386,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8123}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583687,"byte_end":583695,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8131},{"krate":0,"index":8132}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583918,"byte_end":583926,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8138}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584108,"byte_end":584116,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8144}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584426,"byte_end":584437,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8153},{"krate":0,"index":8154}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584697,"byte_end":584708,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8160}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584945,"byte_end":584956,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8166}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585323,"byte_end":585335,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8174},{"krate":0,"index":8175}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585596,"byte_end":585608,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8181}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585846,"byte_end":585858,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8187}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586477,"byte_end":586491,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8200},{"krate":0,"index":8201}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586714,"byte_end":586728,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8207}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586929,"byte_end":586943,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8213}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":587249,"byte_end":587255,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8223}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":587348,"byte_end":587354,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8227},{"krate":0,"index":8228}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/unfold_state.rs","byte_start":587959,"byte_end":587970,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8239},{"krate":0,"index":8240}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11048,"byte_end":11054,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":165}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11152,"byte_end":11158,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1977}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175390,"byte_end":175407,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6232}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":175606,"byte_end":175616,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6634}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11329,"byte_end":11333,"line_start":313,"line_end":313,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6811}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11425,"byte_end":11429,"line_start":318,"line_end":318,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7571}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11440,"byte_end":11445,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7670}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11887,"byte_end":11891,"line_start":339,"line_end":339,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7672}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/poll.rs","byte_start":14653,"byte_end":14661,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/async_await/pending.rs","byte_start":15829,"byte_end":15840,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60543,"byte_end":60550,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60680,"byte_end":60687,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8253},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":60912,"byte_end":60919,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8253},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":61693,"byte_end":61700,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8253},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":61925,"byte_end":61932,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8253},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":62785,"byte_end":62792,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8253},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":64946,"byte_end":64950,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":65057,"byte_end":65061,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66790,"byte_end":66794,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8301},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":66907,"byte_end":66911,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8301},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":67889,"byte_end":67892,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":8336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":68061,"byte_end":68064,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":8336},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":68326,"byte_end":68329,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":8336},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/catch_unwind.rs","byte_start":69535,"byte_end":69546,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":8897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/catch_unwind.rs","byte_start":69689,"byte_end":69700,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":8897},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":70927,"byte_end":70937,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71138,"byte_end":71144,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71187,"byte_end":71193,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71451,"byte_end":71456,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71610,"byte_end":71620,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71852,"byte_end":71857,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":71954,"byte_end":71959,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72203,"byte_end":72209,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":72633,"byte_end":72639,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":74705,"byte_end":74710,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":76406,"byte_end":76412,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":496},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":76564,"byte_end":76570,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":78159,"byte_end":78164,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":79871,"byte_end":79877,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80036,"byte_end":80042,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80470,"byte_end":80478,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":504},"to":{"krate":23,"index":94}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/shared.rs","byte_start":80837,"byte_end":80847,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43694,"byte_end":43695,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":594},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":43826,"byte_end":43832,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12560},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103273,"byte_end":103283,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":8933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103434,"byte_end":103444,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":8933},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":103567,"byte_end":103577,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":8933},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104286,"byte_end":104296,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":8968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104426,"byte_end":104436,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":8968},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":104679,"byte_end":104689,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":8968},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":105642,"byte_end":105652,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":8968},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":105895,"byte_end":105905,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":8968},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":106942,"byte_end":106952,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":8968},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109229,"byte_end":109242,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":9015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109372,"byte_end":109385,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":9015},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":109628,"byte_end":109641,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":9015},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85819,"byte_end":85822,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":887},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":85905,"byte_end":85914,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":110950,"byte_end":110954,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":9957},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111550,"byte_end":111554,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":9957},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":111698,"byte_end":111702,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":9957},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112305,"byte_end":112312,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":9963},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":112873,"byte_end":112880,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":9963},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":113025,"byte_end":113032,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":9963},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":113058,"byte_end":113065,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":9963},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":113819,"byte_end":113828,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":114431,"byte_end":114440,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":9969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115538,"byte_end":115547,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":9969},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":115748,"byte_end":115757,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117077,"byte_end":117089,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":9982},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":117315,"byte_end":117327,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":9982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":118440,"byte_end":118452,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":9982},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":118656,"byte_end":118668,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":9982},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120318,"byte_end":120330,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":10000},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120428,"byte_end":120440,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":10000},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120754,"byte_end":120766,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":10000},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":120953,"byte_end":120965,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10000},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":121403,"byte_end":121409,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":122103,"byte_end":122109,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":122251,"byte_end":122257,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":122985,"byte_end":122998,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10039},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":123564,"byte_end":123577,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10039},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":124597,"byte_end":124610,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10039},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126782,"byte_end":126787,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":126966,"byte_end":126971,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10073},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127003,"byte_end":127008,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10073},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":127105,"byte_end":127110,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10073},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":135097,"byte_end":135104,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":137865,"byte_end":137872,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join_all.rs","byte_start":138860,"byte_end":138867,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":139363,"byte_end":139369,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10427},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":141805,"byte_end":141811,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10427},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":142515,"byte_end":142521,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10427},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":143084,"byte_end":143093,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10435},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144100,"byte_end":144109,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144292,"byte_end":144301,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10435},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_all.rs","byte_start":144971,"byte_end":144980,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10435},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":153588,"byte_end":153598,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":155428,"byte_end":155438,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join_all.rs","byte_start":156586,"byte_end":156596,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":157078,"byte_end":157087,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":10763},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":158926,"byte_end":158935,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10763},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":160297,"byte_end":160305,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10771},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":161383,"byte_end":161391,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10771},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select_ok.rs","byte_start":162822,"byte_end":162830,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10771},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":163809,"byte_end":163815,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164154,"byte_end":164160,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164545,"byte_end":164551,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":164932,"byte_end":164938,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165179,"byte_end":165185,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10777},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165524,"byte_end":165530,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10777},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":165806,"byte_end":165812,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10777},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":166347,"byte_end":166353,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10777},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":166660,"byte_end":166666,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10777},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229244,"byte_end":229249,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229475,"byte_end":229480,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10801},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":229689,"byte_end":229694,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10801},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231290,"byte_end":231297,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231562,"byte_end":231569,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10850},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":231747,"byte_end":231754,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10850},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":232780,"byte_end":232785,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":233179,"byte_end":233184,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":10901},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":233434,"byte_end":233439,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":10901},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":234564,"byte_end":234570,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":10959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":234790,"byte_end":234796,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":235504,"byte_end":235510,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10959},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":236173,"byte_end":236178,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":236334,"byte_end":236339,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10999},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":237088,"byte_end":237093,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10999},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":237841,"byte_end":237850,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":238036,"byte_end":238045,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11039},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":238163,"byte_end":238172,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11039},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":238825,"byte_end":238834,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11039},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":239613,"byte_end":239619,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11082},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":240092,"byte_end":240098,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":240421,"byte_end":240427,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11082},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":240764,"byte_end":240770,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11082},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":242149,"byte_end":242155,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11082},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":242942,"byte_end":242951,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11151},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":243248,"byte_end":243257,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":243524,"byte_end":243533,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11151},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":243800,"byte_end":243809,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11151},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":245227,"byte_end":245236,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11151},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":245911,"byte_end":245918,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":246087,"byte_end":246094,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11223},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":246286,"byte_end":246293,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11223},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":247115,"byte_end":247122,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11223},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":247807,"byte_end":247811,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":248167,"byte_end":248171,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":248432,"byte_end":248436,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11336},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":248671,"byte_end":248675,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250264,"byte_end":250267,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250597,"byte_end":250600,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":250853,"byte_end":250856,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11405},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":251085,"byte_end":251088,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":252840,"byte_end":252843,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11466},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":253173,"byte_end":253176,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":253428,"byte_end":253431,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11466},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":253660,"byte_end":253663,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11466},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255499,"byte_end":255506,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255706,"byte_end":255713,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11536},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/forward.rs","byte_start":255915,"byte_end":255922,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11536},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":257727,"byte_end":257734,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":11650},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":258027,"byte_end":258034,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":11650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":258265,"byte_end":258272,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11650},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":258511,"byte_end":258518,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":11650},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":259619,"byte_end":259623,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":11712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":260120,"byte_end":260124,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":11712},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":260222,"byte_end":260226,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":11712},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":260912,"byte_end":260916,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":11712},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":261428,"byte_end":261440,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":11755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":263930,"byte_end":263942,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":11755},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":264062,"byte_end":264074,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":11755},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":264959,"byte_end":264962,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":11839},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":265151,"byte_end":265154,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":11839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":265323,"byte_end":265326,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":11839},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":265494,"byte_end":265497,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":11839},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":266039,"byte_end":266042,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":11839},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266609,"byte_end":266613,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":11985},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266664,"byte_end":266668,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":11985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266819,"byte_end":266823,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":11985},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":266962,"byte_end":266966,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":11985},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267617,"byte_end":267631,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":11993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267782,"byte_end":267796,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":11993},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":267940,"byte_end":267954,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":11993},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":269265,"byte_end":269273,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274770,"byte_end":274778,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12006},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":274920,"byte_end":274928,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12006},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":275713,"byte_end":275721,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12006},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":276087,"byte_end":276091,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12049},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":276336,"byte_end":276340,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12049},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":276451,"byte_end":276455,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12049},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277152,"byte_end":277159,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12090},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277407,"byte_end":277414,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12090},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":277525,"byte_end":277532,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":12090},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278252,"byte_end":278258,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12131},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278610,"byte_end":278616,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12131},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":278885,"byte_end":278891,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12131},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280152,"byte_end":280160,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12180},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280480,"byte_end":280488,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12180},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":280672,"byte_end":280680,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12180},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":281051,"byte_end":281061,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3149},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":281726,"byte_end":281730,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":281921,"byte_end":281925,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12234},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":282043,"byte_end":282047,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12234},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":282858,"byte_end":282862,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12234},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":283644,"byte_end":283653,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12277},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":284105,"byte_end":284114,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":284440,"byte_end":284449,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12277},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":284697,"byte_end":284706,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12277},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":286320,"byte_end":286329,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12277},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":287006,"byte_end":287010,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":287183,"byte_end":287187,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12355},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":288159,"byte_end":288163,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12355},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":288411,"byte_end":288415,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12355},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":289186,"byte_end":289195,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12398},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":289643,"byte_end":289652,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":289971,"byte_end":289980,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12398},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":291499,"byte_end":291508,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12398},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":291864,"byte_end":291873,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12398},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":292892,"byte_end":292901,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12471},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":293189,"byte_end":293198,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":295315,"byte_end":295324,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12471},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":296356,"byte_end":296365,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12471},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":296602,"byte_end":296611,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12471},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297307,"byte_end":297311,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12532},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297562,"byte_end":297566,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":12532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":297812,"byte_end":297816,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":12532},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":298042,"byte_end":298046,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":12532},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":299225,"byte_end":299229,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12532},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":299928,"byte_end":299931,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301517,"byte_end":301520,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12604},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":301715,"byte_end":301718,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":12604},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":304413,"byte_end":304419,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":12659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":304927,"byte_end":304933,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":12659},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":306549,"byte_end":306555,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":12659},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chunks.rs","byte_start":306778,"byte_end":306784,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":12659},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":307527,"byte_end":307538,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":12711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":307890,"byte_end":307901,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":12711},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":310070,"byte_end":310081,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":12711},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/ready_chunks.rs","byte_start":310304,"byte_end":310315,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":12711},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":311079,"byte_end":311083,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":12758},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":311569,"byte_end":311573,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":12758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":311737,"byte_end":311741,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":12758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":312103,"byte_end":312107,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":12758},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":313334,"byte_end":313338,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":12758},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":313708,"byte_end":313712,"line_start":121,"line_end":121,"column_start":38,"column_end":42},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":12758},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":314512,"byte_end":314527,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":12831},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":314859,"byte_end":314874,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":12831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":315261,"byte_end":315276,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":12831},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":316730,"byte_end":316745,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":12831},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffer_unordered.rs","byte_start":317029,"byte_end":317044,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":12831},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":317855,"byte_end":317863,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":12880},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":318210,"byte_end":318218,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":12880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":318498,"byte_end":318506,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":12880},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/buffered.rs","byte_start":320024,"byte_end":320032,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":12880},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":320843,"byte_end":320860,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":12929},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":321206,"byte_end":321223,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":12929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":321656,"byte_end":321673,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":12929},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each_concurrent.rs","byte_start":321903,"byte_end":321920,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":12929},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324144,"byte_end":324155,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":12990},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324178,"byte_end":324189,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":12990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":324622,"byte_end":324633,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":12990},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325211,"byte_end":325220,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":12997},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325268,"byte_end":325277,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":12997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":325741,"byte_end":325750,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":12997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":326472,"byte_end":326481,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":12997},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328088,"byte_end":328100,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4008},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328276,"byte_end":328288,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4008},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/split.rs","byte_start":328537,"byte_end":328549,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4008},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":329094,"byte_end":329105,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":13011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":329297,"byte_end":329308,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":13011},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/catch_unwind.rs","byte_start":330160,"byte_end":330171,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":13011},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183071,"byte_end":183072,"line_start":222,"line_end":222,"column_start":31,"column_end":32},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4086},"to":{"krate":0,"index":4087}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":183215,"byte_end":183221,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":4087}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369288,"byte_end":369295,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13050},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369588,"byte_end":369595,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":369876,"byte_end":369883,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13050},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":371026,"byte_end":371033,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":13050},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":371379,"byte_end":371386,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":13050},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":371951,"byte_end":371961,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":13354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":372154,"byte_end":372164,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":13354},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":372285,"byte_end":372295,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":13354},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":372719,"byte_end":372729,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":13354},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373394,"byte_end":373400,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":13549},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373692,"byte_end":373698,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":13549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":373976,"byte_end":373982,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":13549},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":375259,"byte_end":375265,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":13549},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":375608,"byte_end":375614,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":13549},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376169,"byte_end":376176,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":13614},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376230,"byte_end":376237,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":13614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376400,"byte_end":376407,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":13614},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":376549,"byte_end":376556,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":13614},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377332,"byte_end":377342,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":13622},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377638,"byte_end":377648,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":13622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":377893,"byte_end":377903,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":13622},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379302,"byte_end":379311,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":13679},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379707,"byte_end":379716,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":13679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":379959,"byte_end":379968,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":13679},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":380225,"byte_end":380234,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":13679},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":381623,"byte_end":381632,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":13679},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382375,"byte_end":382387,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":13748},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382687,"byte_end":382699,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":13748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":382896,"byte_end":382908,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":13748},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":383186,"byte_end":383198,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":13748},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":384698,"byte_end":384710,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":13748},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385382,"byte_end":385392,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":13818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385657,"byte_end":385667,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":13818},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":385913,"byte_end":385923,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":13818},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":386842,"byte_end":386852,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":13818},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387532,"byte_end":387542,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":13868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387682,"byte_end":387692,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":13868},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":387880,"byte_end":387890,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":13868},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":388888,"byte_end":388897,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":13915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":389116,"byte_end":389125,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":13915},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":390509,"byte_end":390518,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":13955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":391013,"byte_end":391022,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":13955},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":392970,"byte_end":392979,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":13955},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393202,"byte_end":393211,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":13955},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393638,"byte_end":393652,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14002},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393797,"byte_end":393811,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14002},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_chunks.rs","byte_start":393998,"byte_end":394012,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14002},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":394622,"byte_end":394629,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14023},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":394988,"byte_end":394995,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":395275,"byte_end":395282,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14023},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":395536,"byte_end":395543,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14023},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":399406,"byte_end":399415,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14092},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":399677,"byte_end":399686,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14092},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":401432,"byte_end":401444,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14149},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":401900,"byte_end":401912,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":402252,"byte_end":402264,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":14149},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":403763,"byte_end":403775,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":14149},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":404142,"byte_end":404154,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":14149},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":405003,"byte_end":405015,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14222},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":405467,"byte_end":405479,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":405817,"byte_end":405829,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14222},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":407436,"byte_end":407448,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":14222},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":407835,"byte_end":407847,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14222},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":408736,"byte_end":408754,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409093,"byte_end":409111,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":14300},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffer_unordered.rs","byte_start":410388,"byte_end":410406,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14300},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":411317,"byte_end":411328,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":411665,"byte_end":411676,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14352},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_buffered.rs","byte_start":412953,"byte_end":412964,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14352},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":413834,"byte_end":413854,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14399},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414219,"byte_end":414239,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14399},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414478,"byte_end":414498,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414946,"byte_end":414966,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14399},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335571,"byte_end":335572,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5438},"to":{"krate":0,"index":5439}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":335653,"byte_end":335662,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5439}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":417730,"byte_end":417734,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":14460},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":418356,"byte_end":418360,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":14460},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419551,"byte_end":419557,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14469},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419584,"byte_end":419590,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":14469},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":419898,"byte_end":419904,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":14469},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420501,"byte_end":420511,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":14478},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420555,"byte_end":420565,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":14478},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":420879,"byte_end":420889,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":14478},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423409,"byte_end":423414,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":14487},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423446,"byte_end":423451,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":14487},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423536,"byte_end":423541,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":14487},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":423790,"byte_end":423795,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":14487},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424734,"byte_end":424738,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":14498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":424867,"byte_end":424871,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":14498},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":425476,"byte_end":425480,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":14498},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426139,"byte_end":426146,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":14529},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426178,"byte_end":426185,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":14529},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426270,"byte_end":426277,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":14529},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":426522,"byte_end":426529,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":14529},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426916,"byte_end":426922,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":426953,"byte_end":426959,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":427724,"byte_end":427730,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5852},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":428426,"byte_end":428439,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":14540},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":429352,"byte_end":429365,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":14540},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":432252,"byte_end":432258,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":14581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433562,"byte_end":433568,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":14581},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":433747,"byte_end":433753,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14581},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434466,"byte_end":434474,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":434771,"byte_end":434779,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":14619},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":437806,"byte_end":437824,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":14638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":439273,"byte_end":439291,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":14638},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":439571,"byte_end":439589,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":14638},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":440701,"byte_end":440719,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":14638},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443290,"byte_end":443296,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":14707},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443536,"byte_end":443542,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":14707},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":443822,"byte_end":443828,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":14707},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445376,"byte_end":445388,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":14765},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445493,"byte_end":445505,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":14765},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445536,"byte_end":445548,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":14765},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445671,"byte_end":445683,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":14765},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":445864,"byte_end":445876,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":14765},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448458,"byte_end":448472,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":448498,"byte_end":448512,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":450078,"byte_end":450092,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":450185,"byte_end":450199,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6192},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":451361,"byte_end":451375,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":451541,"byte_end":451555,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":451835,"byte_end":451849,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6192},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_ordered.rs","byte_start":452019,"byte_end":452033,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/abort.rs","byte_start":479174,"byte_end":479185,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6326},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":480544,"byte_end":480552,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":14839},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":481626,"byte_end":481634,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":14839},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":481671,"byte_end":481681,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":14800},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482533,"byte_end":482543,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":14800},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482591,"byte_end":482598,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":14810},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482861,"byte_end":482868,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":14810},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":482909,"byte_end":482919,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":14819},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":483788,"byte_end":483798,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":14819},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":483846,"byte_end":483850,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":14830},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484109,"byte_end":484113,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":14830},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484282,"byte_end":484292,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":14819},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484337,"byte_end":484347,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":14819},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484393,"byte_end":484403,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":14800},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484448,"byte_end":484458,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":14800},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484512,"byte_end":484520,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":14839},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/iter.rs","byte_start":484569,"byte_end":484577,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":14839},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":486062,"byte_end":486066,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6454},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":486101,"byte_end":486105,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6454},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":486137,"byte_end":486141,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6454},"to":{"krate":23,"index":94}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":487218,"byte_end":487222,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/task.rs","byte_start":488222,"byte_end":488226,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6454},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":489676,"byte_end":489691,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":492347,"byte_end":492362,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6524},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454420,"byte_end":454436,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454477,"byte_end":454493,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454522,"byte_end":454538,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454563,"byte_end":454579,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6546},"to":{"krate":23,"index":15}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":454764,"byte_end":454780,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6546},"to":{"krate":23,"index":18}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456487,"byte_end":456503,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":456577,"byte_end":456593,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":468124,"byte_end":468140,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6546},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":473324,"byte_end":473328,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":475583,"byte_end":475599,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":475737,"byte_end":475753,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":476324,"byte_end":476340,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":477990,"byte_end":478006,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":478476,"byte_end":478492,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":478768,"byte_end":478784,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6546},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/futures_unordered/mod.rs","byte_start":478906,"byte_end":478922,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":493957,"byte_end":493966,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":14846},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":494111,"byte_end":494120,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":14846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495593,"byte_end":495602,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":14846},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":495701,"byte_end":495710,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":14846},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":496494,"byte_end":496503,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":14846},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497521,"byte_end":497530,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":14846},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497675,"byte_end":497684,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":14846},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":497867,"byte_end":497876,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":14846},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":498959,"byte_end":498963,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":14879},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499396,"byte_end":499400,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":14879},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499455,"byte_end":499462,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":14888},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499899,"byte_end":499906,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":14888},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":499957,"byte_end":499965,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":14897},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_all.rs","byte_start":500393,"byte_end":500401,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":14897},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512745,"byte_end":512750,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":14904},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":512944,"byte_end":512949,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":14904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/close.rs","byte_start":513125,"byte_end":513130,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":14904},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":514120,"byte_end":514125,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":14915},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/drain.rs","byte_start":514153,"byte_end":514158,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":14915},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":515319,"byte_end":515325,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":14921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516293,"byte_end":516299,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":14921},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/fanout.rs","byte_start":516511,"byte_end":516517,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":14921},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518596,"byte_end":518600,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":14966},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":518667,"byte_end":518671,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":14966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/feed.rs","byte_start":519035,"byte_end":519039,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":14966},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":519941,"byte_end":519946,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":14977},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":520297,"byte_end":520302,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":14977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/flush.rs","byte_start":520478,"byte_end":520483,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":14977},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521143,"byte_end":521154,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":14997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521411,"byte_end":521422,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":14997},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521626,"byte_end":521637,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":14997},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/err_into.rs","byte_start":521799,"byte_end":521810,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":14997},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":522419,"byte_end":522429,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":522732,"byte_end":522742,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15059},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":523698,"byte_end":523708,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15059},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/map_err.rs","byte_start":523814,"byte_end":523824,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15059},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524375,"byte_end":524379,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15111},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524446,"byte_end":524450,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send.rs","byte_start":524638,"byte_end":524642,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15111},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":525848,"byte_end":525855,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7221},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":526294,"byte_end":526301,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7221},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":526413,"byte_end":526420,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/send_all.rs","byte_start":527196,"byte_end":527203,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":7221},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/unfold.rs","byte_start":529502,"byte_end":529508,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":15130},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":531425,"byte_end":531429,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":15179},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":531692,"byte_end":531696,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":15179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":532033,"byte_end":532037,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15179},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":532408,"byte_end":532412,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15179},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":532596,"byte_end":532600,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with.rs","byte_start":533275,"byte_end":533279,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15179},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":534998,"byte_end":535009,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15262},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":535382,"byte_end":535393,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":536680,"byte_end":536691,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15262},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":536914,"byte_end":536925,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15262},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/with_flat_map.rs","byte_start":537174,"byte_end":537185,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15262},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":538729,"byte_end":538735,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":539463,"byte_end":539469,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15356},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":539799,"byte_end":539805,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15356},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/buffer.rs","byte_start":539979,"byte_end":539985,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":15356},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502290,"byte_end":502291,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7524},"to":{"krate":0,"index":7526}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/sink/mod.rs","byte_start":502440,"byte_end":502444,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":24,"index":17},"to":{"krate":0,"index":7526}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542743,"byte_end":542745,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7654},"to":{"krate":0,"index":7657}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542800,"byte_end":542802,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7656},"to":{"krate":0,"index":7660}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":542881,"byte_end":542886,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":23,"index":15},"to":{"krate":0,"index":7657}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":545650,"byte_end":545660,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":18},"to":{"krate":0,"index":7660}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550641,"byte_end":550646,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7727},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":550979,"byte_end":550984,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7727},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551077,"byte_end":551082,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7727},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551215,"byte_end":551221,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":551667,"byte_end":551672,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":552243,"byte_end":552248,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555363,"byte_end":555378,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555809,"byte_end":555824,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7764},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":555941,"byte_end":555956,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557185,"byte_end":557200,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":557802,"byte_end":557812,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":558824,"byte_end":558834,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559040,"byte_end":559050,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559148,"byte_end":559158,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559299,"byte_end":559309,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":559760,"byte_end":559776,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":560906,"byte_end":560922,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561187,"byte_end":561203,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561315,"byte_end":561331,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561474,"byte_end":561490,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561767,"byte_end":561772,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7727},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561818,"byte_end":561823,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7727},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":561990,"byte_end":562005,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562109,"byte_end":562124,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562328,"byte_end":562338,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562388,"byte_end":562398,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562466,"byte_end":562482,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/mutex.rs","byte_start":562553,"byte_end":562569,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":564573,"byte_end":564578,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":15412},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":564615,"byte_end":564620,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":15412},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":564636,"byte_end":564642,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":15406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570262,"byte_end":570267,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":15412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570389,"byte_end":570394,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":15412},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570722,"byte_end":570734,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7924},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":570898,"byte_end":570910,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7924},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571131,"byte_end":571143,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7924},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571525,"byte_end":571536,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":15419},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571699,"byte_end":571710,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":15419},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":571848,"byte_end":571859,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":15419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lock/bilock.rs","byte_start":572211,"byte_end":572222,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":15419},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":573535,"byte_end":573544,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":15432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":575817,"byte_end":575828,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":15474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576611,"byte_end":576618,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":15485},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576801,"byte_end":576808,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":15485},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":576821,"byte_end":576830,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":15432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":577819,"byte_end":577828,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":15432},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578067,"byte_end":578076,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":15432},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/abortable.rs","byte_start":578335,"byte_end":578346,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":15474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579018,"byte_end":579019,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8031},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579158,"byte_end":579165,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8026},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579254,"byte_end":579255,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8040},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579441,"byte_end":579447,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8036},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":579525,"byte_end":579526,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8048},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580542,"byte_end":580546,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8053},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580640,"byte_end":580644,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8053},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":580903,"byte_end":580910,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":15516},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581133,"byte_end":581140,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":15516},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581331,"byte_end":581338,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":15516},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":581643,"byte_end":581656,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":15537},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582073,"byte_end":582082,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":15553},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582366,"byte_end":582375,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":15553},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582637,"byte_end":582646,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":15553},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":582968,"byte_end":582975,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":15568},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583194,"byte_end":583201,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":15568},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583379,"byte_end":583386,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":15568},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583687,"byte_end":583695,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":15583},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":583918,"byte_end":583926,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":15583},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584108,"byte_end":584116,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":15583},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584426,"byte_end":584437,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":15598},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584697,"byte_end":584708,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":15598},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":584945,"byte_end":584956,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":15598},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585323,"byte_end":585335,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":15610},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585596,"byte_end":585608,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":15610},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":585846,"byte_end":585858,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":15610},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586477,"byte_end":586491,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":15622},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586714,"byte_end":586728,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":15622},"to":{"krate":0,"index":8036}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":586929,"byte_end":586943,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":15622},"to":{"krate":0,"index":8044}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":587249,"byte_end":587255,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":8217},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":587348,"byte_end":587354,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8217},"to":{"krate":0,"index":8026}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/unfold_state.rs","byte_start":587959,"byte_end":587970,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":15659},"to":{"krate":4294967295,"index":4294967295}}]}