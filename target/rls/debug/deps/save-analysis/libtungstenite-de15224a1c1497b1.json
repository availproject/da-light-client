{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0","program":"/home/kroos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tungstenite","--edition=2018","/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=de15224a1c1497b1","-C","extra-filename=-de15224a1c1497b1","--out-dir","/home/kroos/matic/da-light-client/target/rls/debug/deps","-L","dependency=/home/kroos/matic/da-light-client/target/rls/debug/deps","--extern","base64=/home/kroos/matic/da-light-client/target/rls/debug/deps/libbase64-67ca47b261bc1218.rmeta","--extern","byteorder=/home/kroos/matic/da-light-client/target/rls/debug/deps/libbyteorder-9f06ba7fb5104227.rmeta","--extern","bytes=/home/kroos/matic/da-light-client/target/rls/debug/deps/libbytes-1af1b0bdb80529c2.rmeta","--extern","http=/home/kroos/matic/da-light-client/target/rls/debug/deps/libhttp-cd3b02138373edd3.rmeta","--extern","httparse=/home/kroos/matic/da-light-client/target/rls/debug/deps/libhttparse-298d31d0e3d1fda0.rmeta","--extern","log=/home/kroos/matic/da-light-client/target/rls/debug/deps/liblog-a026ca4a371fce43.rmeta","--extern","rand=/home/kroos/matic/da-light-client/target/rls/debug/deps/librand-f755c1a9c012965e.rmeta","--extern","sha1=/home/kroos/matic/da-light-client/target/rls/debug/deps/libsha1-8c472dc4c19063b9.rmeta","--extern","thiserror=/home/kroos/matic/da-light-client/target/rls/debug/deps/libthiserror-5a9f4d335d78312f.rmeta","--extern","url=/home/kroos/matic/da-light-client/target/rls/debug/deps/liburl-58b4dd519cccf402.rmeta","--extern","utf8=/home/kroos/matic/da-light-client/target/rls/debug/deps/libutf8-8d527c06116fdf6c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kroos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kroos/matic/da-light-client/target/rls/debug/deps/libtungstenite-de15224a1c1497b1.rmeta"},"prelude":{"crate_id":{"name":"tungstenite","disambiguator":[3946235101029696527,0]},"crate_root":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src","external_crates":[{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12183244430281887400,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8357241026203332200,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12366212805520858122,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16942624007396114565,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9146905573849924534,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3984974423095474310,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17062249482329071005,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9650074992516280531,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11294981568525771845,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2937232846550133502,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[916118139006228645,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10588692737450637690,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[6136648393888539129,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12981437011810194475,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[148412131477461657,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9709332217955803794,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10989117992165357727,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2143393700537892828,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[11382580725447476280,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":20,"id":{"name":"http","disambiguator":[6058151397249470918,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":21,"id":{"name":"fnv","disambiguator":[1018933771133609151,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","num":22,"id":{"name":"bytes","disambiguator":[550512058244518972,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","num":23,"id":{"name":"itoa","disambiguator":[11954155351822307679,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":24,"id":{"name":"log","disambiguator":[9279222388630044704,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":25,"id":{"name":"cfg_if","disambiguator":[1967106275440090275,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":26,"id":{"name":"url","disambiguator":[14522785872444169035,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":27,"id":{"name":"matches","disambiguator":[886494795260571592,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":28,"id":{"name":"form_urlencoded","disambiguator":[10265804871827461083,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":29,"id":{"name":"percent_encoding","disambiguator":[15837084541907236475,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":30,"id":{"name":"idna","disambiguator":[9046385599685326252,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":31,"id":{"name":"unicode_bidi","disambiguator":[2140904222280160272,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":32,"id":{"name":"unicode_normalization","disambiguator":[6857311366366152374,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":33,"id":{"name":"tinyvec","disambiguator":[8357682035015118115,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","num":34,"id":{"name":"tinyvec_macros","disambiguator":[2998004247158070098,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","num":35,"id":{"name":"thiserror","disambiguator":[8659522936504394679,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","num":36,"id":{"name":"thiserror_impl","disambiguator":[10245519490656785102,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":37,"id":{"name":"httparse","disambiguator":[3728051174917908359,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":38,"id":{"name":"sha1","disambiguator":[15724374525663176177,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":39,"id":{"name":"digest","disambiguator":[529669902788572855,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":40,"id":{"name":"generic_array","disambiguator":[14627604118282954274,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":41,"id":{"name":"typenum","disambiguator":[7598869597415156226,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":42,"id":{"name":"block_buffer","disambiguator":[6672711473433271297,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":43,"id":{"name":"cpufeatures","disambiguator":[7634539950531839386,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","num":44,"id":{"name":"opaque_debug","disambiguator":[8627298668637790067,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","num":45,"id":{"name":"byteorder","disambiguator":[17971070512694542499,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","num":46,"id":{"name":"utf8","disambiguator":[13253561633308321712,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":47,"id":{"name":"rand","disambiguator":[4342830125807332853,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":48,"id":{"name":"rand_core","disambiguator":[13238029461893306616,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":49,"id":{"name":"getrandom","disambiguator":[312470090550714469,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":50,"id":{"name":"libc","disambiguator":[17227270739937170455,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":51,"id":{"name":"rand_chacha","disambiguator":[6270868230779013915,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":52,"id":{"name":"ppv_lite86","disambiguator":[12981908141787715347,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","num":53,"id":{"name":"base64","disambiguator":[3077003908617245258,0]}}],"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":0,"byte_end":782,"line_start":1,"line_end":35,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":306,"byte_end":310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":7896,"byte_end":7906,"line_start":111,"line_end":111,"column_start":27,"column_end":37},"alias_span":null,"name":"AutoStream","value":"","parent":{"krate":0,"index":37}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89458,"byte_end":89468,"line_start":13,"line_end":13,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1718},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89470,"byte_end":89475,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89477,"byte_end":89488,"line_start":13,"line_end":13,"column_start":42,"column_end":53},"alias_span":null,"name":"FrameHeader","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59165,"byte_end":59175,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":1757},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59186,"byte_end":59193,"line_start":7,"line_end":7,"column_start":44,"column_end":51},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":132742,"byte_end":132757,"line_start":3,"line_end":3,"column_start":35,"column_end":50},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":1113}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":581,"byte_end":587,"line_start":30,"line_end":30,"column_start":14,"column_end":20},"alias_span":null,"name":"client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":589,"byte_end":596,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"alias_span":null,"name":"connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":611,"byte_end":616,"line_start":31,"line_end":31,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":618,"byte_end":624,"line_start":31,"line_end":31,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1473},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":651,"byte_end":666,"line_start":32,"line_end":32,"column_start":25,"column_end":40},"alias_span":null,"name":"ClientHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":676,"byte_end":691,"line_start":32,"line_end":32,"column_start":50,"column_end":65},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":693,"byte_end":707,"line_start":32,"line_end":32,"column_start":67,"column_end":81},"alias_span":null,"name":"HandshakeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1757},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":725,"byte_end":732,"line_start":33,"line_end":33,"column_start":16,"column_end":23},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":734,"byte_end":743,"line_start":33,"line_end":33,"column_start":25,"column_end":34},"alias_span":null,"name":"WebSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":759,"byte_end":765,"line_start":34,"line_end":34,"column_start":14,"column_end":20},"alias_span":null,"name":"accept","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1149},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":767,"byte_end":777,"line_start":34,"line_end":34,"column_start":22,"column_end":32},"alias_span":null,"name":"accept_hdr","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":0,"byte_end":782,"line_start":1,"line_end":35,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":37},{"krate":0,"index":179},{"krate":0,"index":224},{"krate":0,"index":614},{"krate":0,"index":1113},{"krate":0,"index":1152},{"krate":0,"index":1183},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1251}],"decl_id":null,"docs":" Lightweight, flexible WebSockets for Rust.\n","sig":null,"attributes":[{"value":"/ Lightweight, flexible WebSockets for Rust.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"deny(missing_docs, missing_copy_implementations,\n       missing_debug_implementations, trivial_casts, trivial_numeric_casts,\n       unstable_features, unused_must_use, unused_mut, unused_imports,\n       unused_import_braces)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":47,"byte_end":296,"line_start":2,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":1254},{"krate":0,"index":1259},{"krate":0,"index":20},{"krate":0,"index":32}],"decl_id":null,"docs":" A buffer for reading data from the network.","sig":null,"attributes":[{"value":"/ A buffer for reading data from the network.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":784,"byte_end":831,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":832,"byte_end":835,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `ReadBuffer` is a buffer of bytes similar to a first-in, first-out queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":836,"byte_end":917,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ It is filled by reading from a stream supporting `Read` and is then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":918,"byte_end":989,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ accessible as a cursor for reading bytes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":990,"byte_end":1035,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1188,"byte_end":1198,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ReadBuffer","qualname":"::buffer::ReadBuffer","value":"ReadBuffer {  }","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257}],"decl_id":null,"docs":" A FIFO buffer for reading packets from the network.\n","sig":null,"attributes":[{"value":"/ A FIFO buffer for reading packets from the network.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1104,"byte_end":1159,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1395,"byte_end":1398,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuffer<CHUNK_SIZE>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1347,"byte_end":1383,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1534,"byte_end":1547,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReadBuffer<CHUNK_SIZE>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer with a given `capacity`.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer with a given `capacity`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1462,"byte_end":1522,"line_start":24,"line_end":24,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1721,"byte_end":1740,"line_start":30,"line_end":30,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<ReadBuffer<CHUNK_SIZE>>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a input buffer filled with previously read data.\n","sig":null,"attributes":[{"value":"/ Create a input buffer filled with previously read data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1650,"byte_end":1709,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1894,"byte_end":1903,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor","value":"pub fn as_cursor(&Self) -> &Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the data storage.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1845,"byte_end":1882,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":2023,"byte_end":2036,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"as_cursor_mut","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor_mut","value":"pub fn as_cursor_mut(&mut Self) -> &mut Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the mutable data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the mutable data storage.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1966,"byte_end":2011,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":2181,"byte_end":2189,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ReadBuffer<CHUNK_SIZE>>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `ReadBuffer` and get the internal storage.\n","sig":null,"attributes":[{"value":"/ Consume the `ReadBuffer` and get the internal storage.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":2111,"byte_end":2169,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":2586,"byte_end":2595,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"read_from","qualname":"<ReadBuffer<CHUNK_SIZE>>::read_from","value":"pub fn read_from<S: Read>(&mut Self, &mut S) -> IoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read next portion of data from the given input stream.\n","sig":null,"attributes":[{"value":"/ Read next portion of data from the given input stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":2516,"byte_end":2574,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172}],"decl_id":null,"docs":" Methods to connect to a WebSocket as a client.\n","sig":null,"attributes":[{"value":"/ Methods to connect to a WebSocket as a client.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":4463,"byte_end":4513,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":7564,"byte_end":7574,"line_start":100,"line_end":100,"column_start":14,"column_end":24},"name":"AutoStream","qualname":"::client::encryption::AutoStream","value":"TcpStream","parent":null,"children":[],"decl_id":null,"docs":" TLS support is not compiled in, this is just standard `TcpStream`.\n","sig":null,"attributes":[{"value":"/ TLS support is not compiled in, this is just standard `TcpStream`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":7480,"byte_end":7550,"line_start":99,"line_end":99,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8912,"byte_end":8931,"line_start":135,"line_end":135,"column_start":8,"column_end":27},"name":"connect_with_config","qualname":"::client::connect_with_config","value":"pub fn connect_with_config<Req: IntoClientRequest>(Req,\n                                                   Option<WebSocketConfig>,\n                                                   u8)\n-> Result<(WebSocket<AutoStream>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8076,"byte_end":8128,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8129,"byte_end":8132,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Uses a websocket configuration passed as an argument to the function. Calling it with `None` is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8133,"byte_end":8232,"line_start":122,"line_end":122,"column_start":1,"column_end":100}},{"value":"/ equal to calling `connect()` function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8233,"byte_end":8275,"line_start":123,"line_end":123,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8276,"byte_end":8279,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8280,"byte_end":8322,"line_start":125,"line_end":125,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8323,"byte_end":8406,"line_start":126,"line_end":126,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8407,"byte_end":8410,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8411,"byte_end":8488,"line_start":128,"line_end":128,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8489,"byte_end":8562,"line_start":129,"line_end":129,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8563,"byte_end":8604,"line_start":130,"line_end":130,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8605,"byte_end":8608,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8609,"byte_end":8709,"line_start":132,"line_end":132,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8710,"byte_end":8806,"line_start":133,"line_end":133,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":8807,"byte_end":8904,"line_start":134,"line_end":134,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11819,"byte_end":11826,"line_start":203,"line_end":203,"column_start":8,"column_end":15},"name":"connect","qualname":"::client::connect","value":"pub fn connect<Req: IntoClientRequest>(Req)\n-> Result<(WebSocket<AutoStream>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11130,"byte_end":11182,"line_start":191,"line_end":191,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11183,"byte_end":11186,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11187,"byte_end":11229,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11230,"byte_end":11313,"line_start":194,"line_end":194,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11314,"byte_end":11317,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11318,"byte_end":11395,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11396,"byte_end":11469,"line_start":197,"line_end":197,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11470,"byte_end":11511,"line_start":198,"line_end":198,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11512,"byte_end":11515,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11516,"byte_end":11616,"line_start":200,"line_end":200,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11617,"byte_end":11713,"line_start":201,"line_end":201,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":11714,"byte_end":11811,"line_start":202,"line_end":202,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12679,"byte_end":12687,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"uri_mode","qualname":"::client::uri_mode","value":"pub fn uri_mode(&Uri) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Get the mode of the given URL.","sig":null,"attributes":[{"value":"/ Get the mode of the given URL.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12462,"byte_end":12496,"line_start":220,"line_end":220,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12497,"byte_end":12500,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This function may be used to ease the creation of custom TLS streams","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12501,"byte_end":12573,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ in non-blocking algorithms or for use with TLS libraries other than `native_tls` or `rustls`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12574,"byte_end":12671,"line_start":223,"line_end":223,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13281,"byte_end":13299,"line_start":238,"line_end":238,"column_start":8,"column_end":26},"name":"client_with_config","qualname":"::client::client_with_config","value":"pub fn client_with_config<Stream, Req>(Req, Stream, Option<WebSocketConfig>)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream given a web socket configuration. Passing `None`\n as configuration is equal to calling `client()` function.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream given a web socket configuration. Passing `None`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12894,"byte_end":12992,"line_start":232,"line_end":232,"column_start":1,"column_end":99}},{"value":"/ as configuration is equal to calling `client()` function.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":12993,"byte_end":13054,"line_start":233,"line_end":233,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13055,"byte_end":13058,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13059,"byte_end":13134,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13135,"byte_end":13223,"line_start":236,"line_end":236,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13224,"byte_end":13273,"line_start":237,"line_end":237,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13906,"byte_end":13912,"line_start":255,"line_end":255,"column_start":8,"column_end":14},"name":"client","qualname":"::client::client","value":"pub fn client<Stream, Req>(Req, Stream)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13629,"byte_end":13679,"line_start":250,"line_end":250,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13680,"byte_end":13683,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13684,"byte_end":13759,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13760,"byte_end":13848,"line_start":253,"line_end":253,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":13849,"byte_end":13898,"line_start":254,"line_end":254,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":150},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14387,"byte_end":14404,"line_start":270,"line_end":270,"column_start":11,"column_end":28},"name":"IntoClientRequest","qualname":"::client::IntoClientRequest","value":"IntoClientRequest","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Trait for converting various types into HTTP requests used for a client connection.","sig":null,"attributes":[{"value":"/ Trait for converting various types into HTTP requests used for a client connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14163,"byte_end":14250,"line_start":266,"line_end":266,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14251,"byte_end":14254,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by default for string slices, strings, `url::Url`, `http::Uri` and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14255,"byte_end":14351,"line_start":268,"line_end":268,"column_start":1,"column_end":97}},{"value":"/ `http::Request<()>`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14352,"byte_end":14376,"line_start":269,"line_end":269,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14489,"byte_end":14508,"line_start":272,"line_end":272,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"::client::IntoClientRequest::into_client_request","value":"pub fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":150},"children":[],"decl_id":null,"docs":" Convert into a `Request` that can be used for a client connection.\n","sig":null,"attributes":[{"value":"/ Convert into a `Request` that can be used for a client connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14411,"byte_end":14481,"line_start":271,"line_end":271,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":179},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1269},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1356},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471}],"decl_id":null,"docs":" Error handling.\n","sig":null,"attributes":[{"value":"/ Error handling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":15931,"byte_end":15950,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":206},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16144,"byte_end":16150,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type of all Tungstenite library calls.\n","sig":null,"attributes":[{"value":"/ Result type of all Tungstenite library calls.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16085,"byte_end":16134,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16935,"byte_end":16951,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"ConnectionClosed","qualname":"::error::Error::ConnectionClosed","value":"Error::ConnectionClosed","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" WebSocket connection closed normally. This informs you of the close.\n It's not an error as such and nothing wrong happened.","sig":null,"attributes":[{"value":"/ WebSocket connection closed normally. This informs you of the close.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16259,"byte_end":16331,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ It's not an error as such and nothing wrong happened.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16336,"byte_end":16393,"line_start":16,"line_end":16,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16398,"byte_end":16401,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This is returned as soon as the close handshake is finished (we have both sent and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16406,"byte_end":16492,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ received a close frame) on the server end and as soon as the server has closed the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16497,"byte_end":16583,"line_start":19,"line_end":19,"column_start":5,"column_end":91}},{"value":"/ underlying connection if this endpoint is a client.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16588,"byte_end":16643,"line_start":20,"line_end":20,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16648,"byte_end":16651,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Thus when you receive this, it is safe to drop the underlying connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16656,"byte_end":16733,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16738,"byte_end":16741,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Receiving this error means that the WebSocket object is not usable anymore and the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16746,"byte_end":16832,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ only meaningful action with it is dropping it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16837,"byte_end":16887,"line_start":25,"line_end":25,"column_start":5,"column_end":55}},{"value":"error(\"Connection closed normally\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16892,"byte_end":16930,"line_start":26,"line_end":26,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17372,"byte_end":17385,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"AlreadyClosed","qualname":"::error::Error::AlreadyClosed","value":"Error::AlreadyClosed","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Trying to work with already closed connection.","sig":null,"attributes":[{"value":"/ Trying to work with already closed connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16957,"byte_end":17007,"line_start":28,"line_end":28,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17012,"byte_end":17015,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Trying to read or write after receiving `ConnectionClosed` causes this.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17020,"byte_end":17095,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17100,"byte_end":17103,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ As opposed to `ConnectionClosed`, this indicates your code tries to operate on the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17108,"byte_end":17194,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ connection when it really shouldn't anymore, so this really indicates a programmer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17199,"byte_end":17285,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"/ error on your part.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17290,"byte_end":17313,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"error(\"Trying to work with closed connection\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17318,"byte_end":17367,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1296},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17583,"byte_end":17585,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Input-output error. Apart from WouldBlock, these are generally errors with the\n underlying connection and you should probably consider them fatal.\n","sig":null,"attributes":[{"value":"/ Input-output error. Apart from WouldBlock, these are generally errors with the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17391,"byte_end":17473,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ underlying connection and you should probably consider them fatal.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17478,"byte_end":17548,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"error(\"IO error: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17553,"byte_end":17578,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17818,"byte_end":17821,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Tls","qualname":"::error::Error::Tls","value":"Error::Tls(TlsError)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" TLS error.","sig":null,"attributes":[{"value":"/ TLS error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17610,"byte_end":17624,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17629,"byte_end":17632,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this error variant is enabled unconditionally even if no TLS feature is enabled,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17637,"byte_end":17731,"line_start":43,"line_end":43,"column_start":5,"column_end":99}},{"value":"/ to provide a feature-agnostic API surface.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17736,"byte_end":17782,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"error(\"TLS error: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17787,"byte_end":17813,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18051,"byte_end":18059,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::error::Error::Capacity","value":"Error::Capacity(CapacityError)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" - When reading: buffer capacity exhausted.\n - When writing: your message is bigger than the configured max message size\n   (64MB by default).\n","sig":null,"attributes":[{"value":"/ - When reading: buffer capacity exhausted.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17845,"byte_end":17891,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/ - When writing: your message is bigger than the configured max message size","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17896,"byte_end":17975,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/   (64MB by default).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":17980,"byte_end":18004,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"error(\"Space limit exceeded: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18009,"byte_end":18046,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18162,"byte_end":18170,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::error::Error::Protocol","value":"Error::Protocol(ProtocolError)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Protocol violation.\n","sig":null,"attributes":[{"value":"/ Protocol violation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18088,"byte_end":18111,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"error(\"WebSocket protocol error: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18116,"byte_end":18157,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18267,"byte_end":18280,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"SendQueueFull","qualname":"::error::Error::SendQueueFull","value":"Error::SendQueueFull(Message)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Message send queue full.\n","sig":null,"attributes":[{"value":"/ Message send queue full.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18199,"byte_end":18227,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"error(\"Send queue is full\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18232,"byte_end":18262,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18358,"byte_end":18362,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::Error::Utf8","value":"Error::Utf8","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" UTF coding error.\n","sig":null,"attributes":[{"value":"/ UTF coding error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18295,"byte_end":18316,"line_start":58,"line_end":58,"column_start":5,"column_end":26}},{"value":"error(\"UTF-8 encoding error\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18321,"byte_end":18353,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18420,"byte_end":18423,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Url","qualname":"::error::Error::Url","value":"Error::Url(UrlError)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Invalid URL.\n","sig":null,"attributes":[{"value":"/ Invalid URL.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18368,"byte_end":18384,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"error(\"URL error: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18389,"byte_end":18415,"line_start":62,"line_end":62,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18511,"byte_end":18515,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Http","qualname":"::error::Error::Http","value":"Error::Http(Response<Option<String>>)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" HTTP error.\n","sig":null,"attributes":[{"value":"/ HTTP error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18447,"byte_end":18462,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"error(\"HTTP error: {}\",.0.status())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18467,"byte_end":18506,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18613,"byte_end":18623,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"HttpFormat","qualname":"::error::Error::HttpFormat","value":"Error::HttpFormat(http::Error)","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" HTTP format error.\n","sig":null,"attributes":[{"value":"/ HTTP format error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18547,"byte_end":18569,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"error(\"HTTP format error: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18574,"byte_end":18608,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1263},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16247,"byte_end":16252,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConnectionClosed,\n    AlreadyClosed,\n    Io(io::Error),\n    Tls(TlsError),\n    Capacity(CapacityError),\n    Protocol(ProtocolError),\n    SendQueueFull(Message),\n    Utf8,\n    Url(UrlError),\n    Http(Response<Option<String>>),\n    HttpFormat(http::Error),\n}","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319}],"decl_id":null,"docs":" Possible WebSocket errors.\n","sig":null,"attributes":[{"value":"/ Possible WebSocket errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":16183,"byte_end":16213,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20171,"byte_end":20185,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"TooManyHeaders","qualname":"::error::CapacityError::TooManyHeaders","value":"CapacityError::TooManyHeaders","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Too many headers provided (see [`httparse::Error::TooManyHeaders`]).\n","sig":null,"attributes":[{"value":"/ Too many headers provided (see [`httparse::Error::TooManyHeaders`]).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20061,"byte_end":20133,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"error(\"Too many headers\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20138,"byte_end":20166,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1347},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20339,"byte_end":20353,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"MessageTooLong","qualname":"::error::CapacityError::MessageTooLong","value":"CapacityError::MessageTooLong { size, max_size }","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Received header is too long.\n Message is bigger than the maximum allowed size.\n","sig":null,"attributes":[{"value":"/ Received header is too long.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20191,"byte_end":20223,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/ Message is bigger than the maximum allowed size.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20228,"byte_end":20280,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"error(\"Message too long: {size} > {max_size}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20285,"byte_end":20334,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1322},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20041,"byte_end":20054,"line_start":125,"line_end":125,"column_start":10,"column_end":23},"name":"CapacityError","qualname":"::error::CapacityError","value":"pub enum CapacityError {\n    TooManyHeaders,\n    MessageTooLong {\n        size: usize,\n        max_size: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1347}],"decl_id":null,"docs":" Indicates the specific type/cause of a capacity error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a capacity error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19921,"byte_end":19979,"line_start":123,"line_end":123,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20797,"byte_end":20812,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"WrongHttpMethod","qualname":"::error::ProtocolError::WrongHttpMethod","value":"ProtocolError::WrongHttpMethod","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).\n","sig":null,"attributes":[{"value":"/ Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20635,"byte_end":20725,"line_start":143,"line_end":143,"column_start":5,"column_end":95}},{"value":"error(\"Unsupported HTTP method used - only GET is allowed\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20730,"byte_end":20792,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20958,"byte_end":20974,"line_start":148,"line_end":148,"column_start":5,"column_end":21},"name":"WrongHttpVersion","qualname":"::error::ProtocolError::WrongHttpVersion","value":"ProtocolError::WrongHttpVersion","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).\n","sig":null,"attributes":[{"value":"/ Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20818,"byte_end":20902,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"error(\"HTTP version must be 1.1 or higher\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20907,"byte_end":20953,"line_start":147,"line_end":147,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21081,"byte_end":21111,"line_start":151,"line_end":151,"column_start":5,"column_end":35},"name":"MissingConnectionUpgradeHeader","qualname":"::error::ProtocolError::MissingConnectionUpgradeHeader","value":"ProtocolError::MissingConnectionUpgradeHeader","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Missing `Connection: upgrade` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Connection: upgrade` HTTP header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20980,"byte_end":21026,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"error(\"No \\\"Connection: upgrade\\\" header\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21031,"byte_end":21076,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21216,"byte_end":21245,"line_start":154,"line_end":154,"column_start":5,"column_end":34},"name":"MissingUpgradeWebSocketHeader","qualname":"::error::ProtocolError::MissingUpgradeWebSocketHeader","value":"ProtocolError::MissingUpgradeWebSocketHeader","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Missing `Upgrade: websocket` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Upgrade: websocket` HTTP header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21117,"byte_end":21162,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"error(\"No \\\"Upgrade: websocket\\\" header\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21167,"byte_end":21211,"line_start":153,"line_end":153,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21364,"byte_end":21396,"line_start":157,"line_end":157,"column_start":5,"column_end":37},"name":"MissingSecWebSocketVersionHeader","qualname":"::error::ProtocolError::MissingSecWebSocketVersionHeader","value":"ProtocolError::MissingSecWebSocketVersionHeader","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Version: 13` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Version: 13` HTTP header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21251,"byte_end":21303,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"error(\"No \\\"Sec-WebSocket-Version: 13\\\" header\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21308,"byte_end":21359,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21499,"byte_end":21521,"line_start":160,"line_end":160,"column_start":5,"column_end":27},"name":"MissingSecWebSocketKey","qualname":"::error::ProtocolError::MissingSecWebSocketKey","value":"ProtocolError::MissingSecWebSocketKey","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Key` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Key` HTTP header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21402,"byte_end":21446,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"error(\"No \\\"Sec-WebSocket-Key\\\" header\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21451,"byte_end":21494,"line_start":159,"line_end":159,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21698,"byte_end":21727,"line_start":163,"line_end":163,"column_start":5,"column_end":34},"name":"SecWebSocketAcceptKeyMismatch","qualname":"::error::ProtocolError::SecWebSocketAcceptKeyMismatch","value":"ProtocolError::SecWebSocketAcceptKeyMismatch","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.\n","sig":null,"attributes":[{"value":"/ The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21527,"byte_end":21629,"line_start":161,"line_end":161,"column_start":5,"column_end":107}},{"value":"error(\"Key mismatch in \\\"Sec-WebSocket-Accept\\\" header\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21634,"byte_end":21693,"line_start":162,"line_end":162,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21830,"byte_end":21846,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"JunkAfterRequest","qualname":"::error::ProtocolError::JunkAfterRequest","value":"ProtocolError::JunkAfterRequest","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Garbage data encountered after client request.\n","sig":null,"attributes":[{"value":"/ Garbage data encountered after client request.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21733,"byte_end":21783,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"error(\"Junk after client request\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21788,"byte_end":21825,"line_start":165,"line_end":165,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21954,"byte_end":21978,"line_start":169,"line_end":169,"column_start":5,"column_end":29},"name":"CustomResponseSuccessful","qualname":"::error::ProtocolError::CustomResponseSuccessful","value":"ProtocolError::CustomResponseSuccessful","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Custom responses must be unsuccessful.\n","sig":null,"attributes":[{"value":"/ Custom responses must be unsuccessful.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21852,"byte_end":21894,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"error(\"Custom response must not be successful\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21899,"byte_end":21949,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22078,"byte_end":22097,"line_start":172,"line_end":172,"column_start":5,"column_end":24},"name":"HandshakeIncomplete","qualname":"::error::ProtocolError::HandshakeIncomplete","value":"ProtocolError::HandshakeIncomplete","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" No more data while still performing handshake.\n","sig":null,"attributes":[{"value":"/ No more data while still performing handshake.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":21984,"byte_end":22034,"line_start":170,"line_end":170,"column_start":5,"column_end":55}},{"value":"error(\"Handshake not finished\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22039,"byte_end":22073,"line_start":171,"line_end":171,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22191,"byte_end":22204,"line_start":175,"line_end":175,"column_start":5,"column_end":18},"name":"HttparseError","qualname":"::error::ProtocolError::HttparseError","value":"ProtocolError::HttparseError(httparse::Error)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Wrapper around a [`httparse::Error`] value.\n","sig":null,"attributes":[{"value":"/ Wrapper around a [`httparse::Error`] value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22103,"byte_end":22150,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"error(\"httparse error: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22155,"byte_end":22186,"line_start":174,"line_end":174,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22351,"byte_end":22367,"line_start":178,"line_end":178,"column_start":5,"column_end":21},"name":"SendAfterClosing","qualname":"::error::ProtocolError::SendAfterClosing","value":"ProtocolError::SendAfterClosing","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Not allowed to send after having sent a closing frame.\n","sig":null,"attributes":[{"value":"/ Not allowed to send after having sent a closing frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22235,"byte_end":22293,"line_start":176,"line_end":176,"column_start":5,"column_end":63}},{"value":"error(\"Sending after closing is not allowed\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22298,"byte_end":22346,"line_start":177,"line_end":177,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1404},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22477,"byte_end":22497,"line_start":181,"line_end":181,"column_start":5,"column_end":25},"name":"ReceivedAfterClosing","qualname":"::error::ProtocolError::ReceivedAfterClosing","value":"ProtocolError::ReceivedAfterClosing","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Remote sent data after sending a closing frame.\n","sig":null,"attributes":[{"value":"/ Remote sent data after sending a closing frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22373,"byte_end":22424,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"error(\"Remote sent after having closed\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22429,"byte_end":22472,"line_start":180,"line_end":180,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1406},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22598,"byte_end":22617,"line_start":184,"line_end":184,"column_start":5,"column_end":24},"name":"NonZeroReservedBits","qualname":"::error::ProtocolError::NonZeroReservedBits","value":"ProtocolError::NonZeroReservedBits","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Reserved bits in frame header are non-zero.\n","sig":null,"attributes":[{"value":"/ Reserved bits in frame header are non-zero.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22503,"byte_end":22550,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"error(\"Reserved bits are non-zero\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22555,"byte_end":22593,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1408},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22759,"byte_end":22782,"line_start":187,"line_end":187,"column_start":5,"column_end":28},"name":"UnmaskedFrameFromClient","qualname":"::error::ProtocolError::UnmaskedFrameFromClient","value":"ProtocolError::UnmaskedFrameFromClient","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The server must close the connection when an unmasked frame is received.\n","sig":null,"attributes":[{"value":"/ The server must close the connection when an unmasked frame is received.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22623,"byte_end":22699,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"error(\"Received an unmasked frame from client\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22704,"byte_end":22754,"line_start":186,"line_end":186,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22918,"byte_end":22939,"line_start":190,"line_end":190,"column_start":5,"column_end":26},"name":"MaskedFrameFromServer","qualname":"::error::ProtocolError::MaskedFrameFromServer","value":"ProtocolError::MaskedFrameFromServer","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The client must close the connection when a masked frame is received.\n","sig":null,"attributes":[{"value":"/ The client must close the connection when a masked frame is received.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22788,"byte_end":22861,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"error(\"Received a masked frame from server\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22866,"byte_end":22913,"line_start":189,"line_end":189,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23033,"byte_end":23055,"line_start":193,"line_end":193,"column_start":5,"column_end":27},"name":"FragmentedControlFrame","qualname":"::error::ProtocolError::FragmentedControlFrame","value":"ProtocolError::FragmentedControlFrame","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Control frames must not be fragmented.\n","sig":null,"attributes":[{"value":"/ Control frames must not be fragmented.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22945,"byte_end":22987,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"error(\"Fragmented control frame\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":22992,"byte_end":23028,"line_start":192,"line_end":192,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23200,"byte_end":23218,"line_start":196,"line_end":196,"column_start":5,"column_end":23},"name":"ControlFrameTooBig","qualname":"::error::ProtocolError::ControlFrameTooBig","value":"ProtocolError::ControlFrameTooBig","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Control frames must have a payload of 125 bytes or less.\n","sig":null,"attributes":[{"value":"/ Control frames must have a payload of 125 bytes or less.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23061,"byte_end":23121,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"error(\"Control frame too big (payload must be 125 bytes or less)\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23126,"byte_end":23195,"line_start":195,"line_end":195,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23318,"byte_end":23341,"line_start":199,"line_end":199,"column_start":5,"column_end":28},"name":"UnknownControlFrameType","qualname":"::error::ProtocolError::UnknownControlFrameType","value":"ProtocolError::UnknownControlFrameType(u8)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Type of control frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of control frame not recognised.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23224,"byte_end":23265,"line_start":197,"line_end":197,"column_start":5,"column_end":46}},{"value":"error(\"Unknown control frame type: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23270,"byte_end":23313,"line_start":198,"line_end":198,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23439,"byte_end":23459,"line_start":202,"line_end":202,"column_start":5,"column_end":25},"name":"UnknownDataFrameType","qualname":"::error::ProtocolError::UnknownDataFrameType","value":"ProtocolError::UnknownDataFrameType(u8)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Type of data frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of data frame not recognised.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23351,"byte_end":23389,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"error(\"Unknown data frame type: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23394,"byte_end":23434,"line_start":201,"line_end":201,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23599,"byte_end":23622,"line_start":205,"line_end":205,"column_start":5,"column_end":28},"name":"UnexpectedContinueFrame","qualname":"::error::ProtocolError::UnexpectedContinueFrame","value":"ProtocolError::UnexpectedContinueFrame","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Received a continue frame despite there being nothing to continue.\n","sig":null,"attributes":[{"value":"/ Received a continue frame despite there being nothing to continue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23469,"byte_end":23539,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"error(\"Continue frame but nothing to continue\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23544,"byte_end":23594,"line_start":204,"line_end":204,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23747,"byte_end":23763,"line_start":208,"line_end":208,"column_start":5,"column_end":21},"name":"ExpectedFragment","qualname":"::error::ProtocolError::ExpectedFragment","value":"ProtocolError::ExpectedFragment(Data)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Received data while waiting for more fragments.\n","sig":null,"attributes":[{"value":"/ Received data while waiting for more fragments.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23628,"byte_end":23679,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"error(\"While waiting for more fragments received: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23684,"byte_end":23742,"line_start":207,"line_end":207,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1427},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23902,"byte_end":23930,"line_start":211,"line_end":211,"column_start":5,"column_end":33},"name":"ResetWithoutClosingHandshake","qualname":"::error::ProtocolError::ResetWithoutClosingHandshake","value":"ProtocolError::ResetWithoutClosingHandshake","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Connection closed without performing the closing handshake.\n","sig":null,"attributes":[{"value":"/ Connection closed without performing the closing handshake.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23775,"byte_end":23838,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"error(\"Connection reset without closing handshake\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23843,"byte_end":23897,"line_start":210,"line_end":210,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24023,"byte_end":24036,"line_start":214,"line_end":214,"column_start":5,"column_end":18},"name":"InvalidOpcode","qualname":"::error::ProtocolError::InvalidOpcode","value":"ProtocolError::InvalidOpcode(u8)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Encountered an invalid opcode.\n","sig":null,"attributes":[{"value":"/ Encountered an invalid opcode.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23936,"byte_end":23970,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"error(\"Encountered invalid opcode: {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":23975,"byte_end":24018,"line_start":213,"line_end":213,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1432},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24139,"byte_end":24159,"line_start":217,"line_end":217,"column_start":5,"column_end":25},"name":"InvalidCloseSequence","qualname":"::error::ProtocolError::InvalidCloseSequence","value":"ProtocolError::InvalidCloseSequence","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The payload for the closing frame is invalid.\n","sig":null,"attributes":[{"value":"/ The payload for the closing frame is invalid.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24046,"byte_end":24095,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"error(\"Invalid close sequence\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24100,"byte_end":24134,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1350},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20615,"byte_end":20628,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ProtocolError","qualname":"::error::ProtocolError","value":"pub enum ProtocolError {\n    WrongHttpMethod,\n    WrongHttpVersion,\n    MissingConnectionUpgradeHeader,\n    MissingUpgradeWebSocketHeader,\n    MissingSecWebSocketVersionHeader,\n    MissingSecWebSocketKey,\n    SecWebSocketAcceptKeyMismatch,\n    JunkAfterRequest,\n    CustomResponseSuccessful,\n    HandshakeIncomplete,\n    HttparseError(httparse::Error),\n    SendAfterClosing,\n    ReceivedAfterClosing,\n    NonZeroReservedBits,\n    UnmaskedFrameFromClient,\n    MaskedFrameFromServer,\n    FragmentedControlFrame,\n    ControlFrameTooBig,\n    UnknownControlFrameType(u8),\n    UnknownDataFrameType(u8),\n    UnexpectedContinueFrame,\n    ExpectedFragment(Data),\n    ResetWithoutClosingHandshake,\n    InvalidOpcode(u8),\n    InvalidCloseSequence,\n}","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1432}],"decl_id":null,"docs":" Indicates the specific type/cause of a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a protocol error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":20495,"byte_end":20553,"line_start":140,"line_end":140,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1454},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24400,"byte_end":24420,"line_start":225,"line_end":225,"column_start":5,"column_end":25},"name":"TlsFeatureNotEnabled","qualname":"::error::UrlError::TlsFeatureNotEnabled","value":"UrlError::TlsFeatureNotEnabled","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" TLS is used despite not being compiled with the TLS feature enabled.\n","sig":null,"attributes":[{"value":"/ TLS is used despite not being compiled with the TLS feature enabled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24279,"byte_end":24351,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"error(\"TLS support not compiled in\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24356,"byte_end":24395,"line_start":224,"line_end":224,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1456},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24512,"byte_end":24522,"line_start":228,"line_end":228,"column_start":5,"column_end":15},"name":"NoHostName","qualname":"::error::UrlError::NoHostName","value":"UrlError::NoHostName","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" The URL does not include a host name.\n","sig":null,"attributes":[{"value":"/ The URL does not include a host name.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24426,"byte_end":24467,"line_start":226,"line_end":226,"column_start":5,"column_end":46}},{"value":"error(\"No host name in the URL\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24472,"byte_end":24507,"line_start":227,"line_end":227,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24610,"byte_end":24625,"line_start":231,"line_end":231,"column_start":5,"column_end":20},"name":"UnableToConnect","qualname":"::error::UrlError::UnableToConnect","value":"UrlError::UnableToConnect(String)","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" Failed to connect with this URL.\n","sig":null,"attributes":[{"value":"/ Failed to connect with this URL.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24528,"byte_end":24564,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"error(\"Unable to connect to {0}\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24569,"byte_end":24605,"line_start":230,"line_end":230,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24756,"byte_end":24776,"line_start":234,"line_end":234,"column_start":5,"column_end":25},"name":"UnsupportedUrlScheme","qualname":"::error::UrlError::UnsupportedUrlScheme","value":"UrlError::UnsupportedUrlScheme","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" Unsupported URL scheme used (only `ws://` or `wss://` may be used).\n","sig":null,"attributes":[{"value":"/ Unsupported URL scheme used (only `ws://` or `wss://` may be used).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24639,"byte_end":24710,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"error(\"URL scheme not supported\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24715,"byte_end":24751,"line_start":233,"line_end":233,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24881,"byte_end":24894,"line_start":237,"line_end":237,"column_start":5,"column_end":18},"name":"EmptyHostName","qualname":"::error::UrlError::EmptyHostName","value":"UrlError::EmptyHostName","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" The URL host name, though included, is empty.\n","sig":null,"attributes":[{"value":"/ The URL host name, though included, is empty.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24782,"byte_end":24831,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"error(\"URL contains empty host name\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24836,"byte_end":24876,"line_start":236,"line_end":236,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24984,"byte_end":24997,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"NoPathOrQuery","qualname":"::error::UrlError::NoPathOrQuery","value":"UrlError::NoPathOrQuery","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" The URL does not include a path/query.\n","sig":null,"attributes":[{"value":"/ The URL does not include a path/query.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24900,"byte_end":24942,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"error(\"No path/query in URL\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24947,"byte_end":24979,"line_start":239,"line_end":239,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1434},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24264,"byte_end":24272,"line_start":222,"line_end":222,"column_start":10,"column_end":18},"name":"UrlError","qualname":"::error::UrlError","value":"pub enum UrlError {\n    TlsFeatureNotEnabled,\n    NoHostName,\n    UnableToConnect(String),\n    UnsupportedUrlScheme,\n    EmptyHostName,\n    NoPathOrQuery,\n}","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1465}],"decl_id":null,"docs":" Indicates the specific type/cause of URL error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of URL error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":24164,"byte_end":24215,"line_start":220,"line_end":220,"column_start":1,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1467},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25302,"byte_end":25310,"line_start":250,"line_end":250,"column_start":10,"column_end":18},"name":"TlsError","qualname":"::error::TlsError","value":"pub enum TlsError { }","parent":null,"children":[],"decl_id":null,"docs":" TLS errors.","sig":null,"attributes":[{"value":"/ TLS errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25002,"byte_end":25017,"line_start":243,"line_end":243,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25018,"byte_end":25021,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ Note that even if you enable only the rustls-based TLS support, the error at runtime could still","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25022,"byte_end":25122,"line_start":245,"line_end":245,"column_start":1,"column_end":101}},{"value":"/ be `Native`, as another crate in the dependency graph may enable native TLS support.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25123,"byte_end":25211,"line_start":246,"line_end":246,"column_start":1,"column_end":89}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25212,"byte_end":25250,"line_start":247,"line_end":247,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":25275,"byte_end":25292,"line_start":249,"line_end":249,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":224},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handshake","qualname":"::handshake","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":337},{"krate":0,"index":368},{"krate":0,"index":501},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":1549},{"krate":0,"index":1553},{"krate":0,"index":583},{"krate":0,"index":588},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":1556},{"krate":0,"index":1565},{"krate":0,"index":612}],"decl_id":null,"docs":" WebSocket handshake control.\n","sig":null,"attributes":[{"value":"/ WebSocket handshake control.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":25743,"byte_end":25775,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":225},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::handshake::client","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":1473},{"krate":0,"index":1478},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":319},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":320},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":335}],"decl_id":null,"docs":" Client handshake machine.\n","sig":null,"attributes":[{"value":"/ Client handshake machine.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":29833,"byte_end":29862,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":308},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30389,"byte_end":30396,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::client::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Client request type.\n","sig":null,"attributes":[{"value":"/ Client request type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30355,"byte_end":30379,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":309},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30452,"byte_end":30460,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::client::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Client response type.\n","sig":null,"attributes":[{"value":"/ Client response type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30417,"byte_end":30442,"line_start":26,"line_end":26,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30537,"byte_end":30552,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"ClientHandshake","qualname":"::handshake::client::ClientHandshake","value":"ClientHandshake {  }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"decl_id":null,"docs":" Client handshake role.\n","sig":null,"attributes":[{"value":"/ Client handshake role.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30482,"byte_end":30508,"line_start":29,"line_end":29,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30747,"byte_end":30752,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<ClientHandshake<S>>::start","value":"pub fn start(S, Request, Option<WebSocketConfig>)\n-> Result<MidHandshake<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a client handshake.\n","sig":null,"attributes":[{"value":"/ Initiate a client handshake.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30703,"byte_end":30735,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::handshake::headers","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":365}],"decl_id":null,"docs":" HTTP Request and response header handling.\n","sig":null,"attributes":[{"value":"/ HTTP Request and response header handling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":41411,"byte_end":41457,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":41647,"byte_end":41658,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"MAX_HEADERS","qualname":"::handshake::headers::MAX_HEADERS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Limit for the number of header lines.\n","sig":null,"attributes":[{"value":"/ Limit for the number of header lines.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":41595,"byte_end":41636,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::handshake::server","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":488},{"krate":0,"index":1492},{"krate":0,"index":1499},{"krate":0,"index":490},{"krate":0,"index":494}],"decl_id":null,"docs":" Server handshake machine.\n","sig":null,"attributes":[{"value":"/ Server handshake machine.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44083,"byte_end":44112,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44694,"byte_end":44701,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::server::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Server request type.\n","sig":null,"attributes":[{"value":"/ Server request type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44660,"byte_end":44684,"line_start":26,"line_end":26,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":458},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44757,"byte_end":44765,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::server::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Server response type.\n","sig":null,"attributes":[{"value":"/ Server response type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44722,"byte_end":44747,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":459},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44828,"byte_end":44841,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"name":"ErrorResponse","qualname":"::handshake::server::ErrorResponse","value":"HttpResponse<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Server error response type.\n","sig":null,"attributes":[{"value":"/ Server error response type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":44787,"byte_end":44818,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":469},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":46467,"byte_end":46482,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"create_response","qualname":"::handshake::server::create_response","value":"pub fn create_response(&Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request.\n","sig":null,"attributes":[{"value":"/ Create a response for the request.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":46421,"byte_end":46459,"line_start":83,"line_end":83,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":46634,"byte_end":46659,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"create_response_with_body","qualname":"::handshake::server::create_response_with_body","value":"pub fn create_response_with_body<T, impl FnOnce() -> T: FnOnce() ->\n                                 T>(&HttpRequest<T>, impl FnOnce() -> T)\n-> Result<HttpResponse<T>>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request with a custom body.\n","sig":null,"attributes":[{"value":"/ Create a response for the request with a custom body.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":46569,"byte_end":46626,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":483},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48946,"byte_end":48954,"line_start":155,"line_end":155,"column_start":11,"column_end":19},"name":"Callback","qualname":"::handshake::server::Callback","value":"Callback: Sized","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" The callback trait.","sig":null,"attributes":[{"value":"/ The callback trait.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48591,"byte_end":48614,"line_start":149,"line_end":149,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48615,"byte_end":48618,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The callback is called when the server receives an incoming WebSocket","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48619,"byte_end":48692,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ handshake request from the client. Specifying a callback allows you to analyze incoming headers","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48693,"byte_end":48792,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ and add additional headers to the response that server sends to the client and/or reject the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48793,"byte_end":48889,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ connection based on the incoming headers.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48890,"byte_end":48935,"line_start":154,"line_end":154,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49188,"byte_end":49198,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handshake::server::Callback::on_request","value":"pub fn on_request(Self, &Request, Response)\n-> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":" Called whenever the server read the request from the client and is ready to reply to it.\n May return additional reply headers.\n Returning an error resulting in rejecting the incoming connection.\n","sig":null,"attributes":[{"value":"/ Called whenever the server read the request from the client and is ready to reply to it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48968,"byte_end":49060,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ May return additional reply headers.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49065,"byte_end":49105,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ Returning an error resulting in rejecting the incoming connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49110,"byte_end":49180,"line_start":158,"line_end":158,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49678,"byte_end":49688,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"NoCallback","qualname":"::handshake::server::NoCallback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stub for callback that does nothing.\n","sig":null,"attributes":[{"value":"/ Stub for callback that does nothing.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49596,"byte_end":49636,"line_start":179,"line_end":179,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49981,"byte_end":49996,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"ServerHandshake","qualname":"::handshake::server::ServerHandshake","value":"ServerHandshake {  }","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" Server handshake role.\n","sig":null,"attributes":[{"value":"/ Server handshake role.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49887,"byte_end":49913,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49914,"byte_end":49952,"line_start":194,"line_end":194,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50953,"byte_end":50958,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"start","qualname":"<ServerHandshake<S, C>>::start","value":"pub fn start(S, C, Option<WebSocketConfig>) -> MidHandshake<Self>","parent":null,"children":[],"decl_id":null,"docs":" Start server handshake. `callback` specifies a custom callback which the user can pass to\n the handshake, this callback will be called when the a websocket client connnects to the\n server, you can specify the callback if you want to add additional header to the client\n upon join based on the incoming headers.\n","sig":null,"attributes":[{"value":"/ Start server handshake. `callback` specifies a custom callback which the user can pass to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50606,"byte_end":50699,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ the handshake, this callback will be called when the a websocket client connnects to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50704,"byte_end":50796,"line_start":211,"line_end":211,"column_start":5,"column_end":97}},{"value":"/ server, you can specify the callback if you want to add additional header to the client","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50801,"byte_end":50892,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ upon join based on the incoming headers.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50897,"byte_end":50941,"line_start":213,"line_end":213,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1503},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55122,"byte_end":55138,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"HandshakeMachine","qualname":"::handshake::machine::HandshakeMachine","value":"HandshakeMachine {  }","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506}],"decl_id":null,"docs":" A generic handshake state machine.\n","sig":null,"attributes":[{"value":"/ A generic handshake state machine.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55055,"byte_end":55093,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55292,"byte_end":55302,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"start_read","qualname":"<HandshakeMachine<Stream>>::start_read","value":"pub fn start_read(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start reading data from the peer.\n","sig":null,"attributes":[{"value":"/ Start reading data from the peer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55243,"byte_end":55280,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55473,"byte_end":55484,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"start_write","qualname":"<HandshakeMachine<Stream>>::start_write","value":"pub fn start_write<D: Into<Vec<u8>>>(Stream, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start writing data to the peer.\n","sig":null,"attributes":[{"value":"/ Start writing data to the peer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55426,"byte_end":55461,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55705,"byte_end":55712,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<HandshakeMachine<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55642,"byte_end":55693,"line_start":27,"line_end":27,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55828,"byte_end":55835,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HandshakeMachine<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55764,"byte_end":55816,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":56005,"byte_end":56017,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"single_round","qualname":"<HandshakeMachine<Stream>>::single_round","value":"pub fn single_round<Obj: TryParse>(Self) -> Result<RoundResult<Obj, Stream>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a single handshake round.\n","sig":null,"attributes":[{"value":"/ Perform a single handshake round.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55956,"byte_end":55993,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1513},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58274,"byte_end":58284,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::handshake::machine::RoundResult::WouldBlock","value":"RoundResult::WouldBlock(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":" Round not done, I/O would block.\n","sig":null,"attributes":[{"value":"/ Round not done, I/O would block.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58233,"byte_end":58269,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1516},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58353,"byte_end":58363,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::handshake::machine::RoundResult::Incomplete","value":"RoundResult::Incomplete(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":" Round done, state unchanged.\n","sig":null,"attributes":[{"value":"/ Round done, state unchanged.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58316,"byte_end":58348,"line_start":94,"line_end":94,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1519},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58419,"byte_end":58432,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"name":"StageFinished","qualname":"::handshake::machine::RoundResult::StageFinished","value":"RoundResult::StageFinished(StageResult<Obj, Stream>)","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":" Stage complete.\n","sig":null,"attributes":[{"value":"/ Stage complete.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58395,"byte_end":58414,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1510},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58202,"byte_end":58213,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"name":"RoundResult","qualname":"::handshake::machine::RoundResult","value":"pub enum RoundResult<Obj, Stream> {\n    WouldBlock(HandshakeMachine<Stream>),\n    Incomplete(HandshakeMachine<Stream>),\n    StageFinished(StageResult<Obj, Stream>),\n}","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519}],"decl_id":null,"docs":" The result of the round.\n","sig":null,"attributes":[{"value":"/ The result of the round.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58147,"byte_end":58175,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":1529},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58581,"byte_end":58592,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"DoneReading","qualname":"::handshake::machine::StageResult::DoneReading","value":"StageResult::DoneReading { result, stream, tail }","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":" Reading round finished.\n","sig":null,"attributes":[{"value":"/ Reading round finished.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58549,"byte_end":58576,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58677,"byte_end":58688,"line_start":106,"line_end":106,"column_start":5,"column_end":16},"name":"DoneWriting","qualname":"::handshake::machine::StageResult::DoneWriting","value":"StageResult::DoneWriting(Stream)","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":" Writing round finished.\n","sig":null,"attributes":[{"value":"/ Writing round finished.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58645,"byte_end":58672,"line_start":105,"line_end":105,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1526},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58518,"byte_end":58529,"line_start":102,"line_end":102,"column_start":10,"column_end":21},"name":"StageResult","qualname":"::handshake::machine::StageResult","value":"pub enum StageResult<Obj, Stream> {\n    DoneReading {\n        result: Obj,\n        stream: Stream,\n        tail: Vec<u8>,\n    },\n    DoneWriting(Stream),\n}","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1533}],"decl_id":null,"docs":" The result of the stage.\n","sig":null,"attributes":[{"value":"/ The result of the stage.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58463,"byte_end":58491,"line_start":100,"line_end":100,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58737,"byte_end":58745,"line_start":110,"line_end":110,"column_start":11,"column_end":19},"name":"TryParse","qualname":"::handshake::machine::TryParse","value":"TryParse: Sized","parent":null,"children":[{"krate":0,"index":545}],"decl_id":null,"docs":" The parseable object.\n","sig":null,"attributes":[{"value":"/ The parseable object.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58701,"byte_end":58726,"line_start":109,"line_end":109,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58822,"byte_end":58831,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"try_parse","qualname":"::handshake::machine::TryParse::try_parse","value":"pub fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Return Ok(None) if incomplete, Err on syntax error.\n","sig":null,"attributes":[{"value":"/ Return Ok(None) if incomplete, Err on syntax error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58759,"byte_end":58814,"line_start":111,"line_end":111,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1549},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26103,"byte_end":26115,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"MidHandshake","qualname":"::handshake::MidHandshake","value":"MidHandshake {  }","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"decl_id":null,"docs":" A WebSocket handshake.\n","sig":null,"attributes":[{"value":"/ A WebSocket handshake.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26048,"byte_end":26074,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26301,"byte_end":26308,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshake<Role>>::get_ref","value":"pub fn get_ref(&Self) -> &HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to machine\n","sig":null,"attributes":[{"value":"/ Allow access to machine","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26262,"byte_end":26289,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26441,"byte_end":26448,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshake<Role>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow mutable access to machine\n","sig":null,"attributes":[{"value":"/ Allow mutable access to machine","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26394,"byte_end":26429,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26593,"byte_end":26602,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshake<Role>>::handshake","value":"pub fn handshake(Self) -> Result<Role::FinalResult, HandshakeError<Role>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[{"value":"/ Restarts the handshake process.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26546,"byte_end":26581,"line_start":38,"line_end":38,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27369,"byte_end":27380,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::handshake::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshake<Role>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Handshake was interrupted (would block).\n","sig":null,"attributes":[{"value":"/ Handshake was interrupted (would block).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27320,"byte_end":27364,"line_start":58,"line_end":58,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27432,"byte_end":27439,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Failure","qualname":"::handshake::HandshakeError::Failure","value":"HandshakeError::Failure(Error)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Handshake failed.\n","sig":null,"attributes":[{"value":"/ Handshake failed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27406,"byte_end":27427,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":588},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27278,"byte_end":27292,"line_start":57,"line_end":57,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::handshake::HandshakeError","value":"pub enum HandshakeError<Role: HandshakeRole> {\n    Interrupted(MidHandshake<Role>),\n    Failure(Error),\n}","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":593}],"decl_id":null,"docs":" A handshake result.\n","sig":null,"attributes":[{"value":"/ A handshake result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27245,"byte_end":27268,"line_start":56,"line_end":56,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":607},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28369,"byte_end":28382,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"HandshakeRole","qualname":"::handshake::HandshakeRole","value":"HandshakeRole","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Handshake role.\n","sig":null,"attributes":[{"value":"/ Handshake role.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28339,"byte_end":28358,"line_start":90,"line_end":90,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":608},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28413,"byte_end":28425,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"name":"IncomingData","qualname":"::handshake::HandshakeRole::IncomingData","value":"type IncomingData: TryParse;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":609},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28465,"byte_end":28479,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"InternalStream","qualname":"::handshake::HandshakeRole::InternalStream","value":"type InternalStream: Read + Write;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":610},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28523,"byte_end":28534,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"name":"FinalResult","qualname":"::handshake::HandshakeRole::FinalResult","value":"type FinalResult;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28562,"byte_end":28576,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"::handshake::HandshakeRole::stage_finished","value":"pub fn stage_finished(&mut Self,\n                      StageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>, Error>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28868,"byte_end":28876,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Continue","qualname":"::handshake::ProcessingResult::Continue","value":"ProcessingResult::Continue(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1562},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28908,"byte_end":28912,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Done","qualname":"::handshake::ProcessingResult::Done","value":"ProcessingResult::Done(FinalResult)","parent":{"krate":0,"index":1556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1556},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28824,"byte_end":28840,"line_start":108,"line_end":108,"column_start":10,"column_end":26},"name":"ProcessingResult","qualname":"::handshake::ProcessingResult","value":"pub enum ProcessingResult<Stream, FinalResult> {\n    Continue(HandshakeMachine<Stream>),\n    Done(FinalResult),\n}","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1562}],"decl_id":null,"docs":" Stage processing result.\n","sig":null,"attributes":[{"value":"/ Stage processing result.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28754,"byte_end":28782,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":612},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":29207,"byte_end":29224,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"derive_accept_key","qualname":"::handshake::derive_accept_key","value":"pub fn derive_accept_key(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","sig":null,"attributes":[{"value":"/ Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28930,"byte_end":29026,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":29027,"byte_end":29030,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function can be used to perform a handshake before passing a raw TCP stream to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":29031,"byte_end":29118,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ [`WebSocket::from_raw_socket`][crate::protocol::WebSocket::from_raw_socket].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":29119,"byte_end":29199,"line_start":116,"line_end":116,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":614},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"protocol","qualname":"::protocol","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":898},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1784},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1062},{"krate":0,"index":1810},{"krate":0,"index":1814},{"krate":0,"index":1064},{"krate":0,"index":1075},{"krate":0,"index":1817},{"krate":0,"index":1825},{"krate":0,"index":1081},{"krate":0,"index":1827},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1104},{"krate":0,"index":1108},{"krate":0,"index":1110}],"decl_id":null,"docs":" Generic WebSocket message stream.\n","sig":null,"attributes":[{"value":"/ Generic WebSocket message stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59074,"byte_end":59111,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":615},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::protocol::frame","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":694},{"krate":0,"index":828},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":1726},{"krate":0,"index":1730},{"krate":0,"index":875},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":1733},{"krate":0,"index":1737},{"krate":0,"index":889}],"decl_id":null,"docs":" Utilities to work with raw WebSocket frames.\n","sig":null,"attributes":[{"value":"/ Utilities to work with raw WebSocket frames.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89226,"byte_end":89274,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":616},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coding","qualname":"::protocol::frame::coding","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":1569},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":658},{"krate":0,"index":682},{"krate":0,"index":1632},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":692}],"decl_id":null,"docs":" Various codes defined in RFC 6455.\n","sig":null,"attributes":[{"value":"/ Various codes defined in RFC 6455.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97549,"byte_end":97587,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1570},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97783,"byte_end":97787,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Data","qualname":"::protocol::frame::coding::OpCode::Data","value":"OpCode::Data(Data)","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":" Data (text or binary).\n","sig":null,"attributes":[{"value":"/ Data (text or binary).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97752,"byte_end":97778,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1573},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97844,"byte_end":97851,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Control","qualname":"::protocol::frame::coding::OpCode::Control","value":"OpCode::Control(Control)","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":" Control message (close, ping, pong).\n","sig":null,"attributes":[{"value":"/ Control message (close, ping, pong).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97799,"byte_end":97839,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1569},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97739,"byte_end":97745,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::frame::coding::OpCode","value":"pub enum OpCode { Data(Data), Control(Control), }","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1573}],"decl_id":null,"docs":" WebSocket message opcode as in RFC 6455.\n","sig":null,"attributes":[{"value":"/ WebSocket message opcode as in RFC 6455.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97640,"byte_end":97684,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1589},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98003,"byte_end":98011,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::frame::coding::Data::Continue","value":"Data::Continue","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":" 0x0 denotes a continuation frame\n","sig":null,"attributes":[{"value":"/ 0x0 denotes a continuation frame","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97962,"byte_end":97998,"line_start":20,"line_end":20,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1591},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98050,"byte_end":98054,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::frame::coding::Data::Text","value":"Data::Text","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":" 0x1 denotes a text frame\n","sig":null,"attributes":[{"value":"/ 0x1 denotes a text frame","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98017,"byte_end":98045,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1593},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98095,"byte_end":98101,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::frame::coding::Data::Binary","value":"Data::Binary","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":" 0x2 denotes a binary frame\n","sig":null,"attributes":[{"value":"/ 0x2 denotes a binary frame","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98060,"byte_end":98090,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1595},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98165,"byte_end":98173,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Data::Reserved","value":"Data::Reserved(u8)","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":" 0x3-7 are reserved for further non-control frames\n","sig":null,"attributes":[{"value":"/ 0x3-7 are reserved for further non-control frames","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98107,"byte_end":98160,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1588},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97951,"byte_end":97955,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Data","qualname":"::protocol::frame::coding::Data","value":"pub enum Data { Continue, Text, Binary, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":1595}],"decl_id":null,"docs":" Data opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Data opcodes as in RFC 6455","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":97865,"byte_end":97896,"line_start":17,"line_end":17,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98324,"byte_end":98329,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::frame::coding::Control::Close","value":"Control::Close","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" 0x8 denotes a connection close\n","sig":null,"attributes":[{"value":"/ 0x8 denotes a connection close","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98285,"byte_end":98319,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1613},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98362,"byte_end":98366,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::frame::coding::Control::Ping","value":"Control::Ping","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" 0x9 denotes a ping\n","sig":null,"attributes":[{"value":"/ 0x9 denotes a ping","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98335,"byte_end":98357,"line_start":35,"line_end":35,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1615},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98399,"byte_end":98403,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::frame::coding::Control::Pong","value":"Control::Pong","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" 0xa denotes a pong\n","sig":null,"attributes":[{"value":"/ 0xa denotes a pong","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98372,"byte_end":98394,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98463,"byte_end":98471,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Control::Reserved","value":"Control::Reserved(u8)","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" 0xb-f are reserved for further control frames\n","sig":null,"attributes":[{"value":"/ 0xb-f are reserved for further control frames","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98409,"byte_end":98458,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1610},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98271,"byte_end":98278,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Control","qualname":"::protocol::frame::coding::Control","value":"pub enum Control { Close, Ping, Pong, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1617}],"decl_id":null,"docs":" Control opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Control opcodes as in RFC 6455","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98182,"byte_end":98216,"line_start":30,"line_end":30,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1633},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100832,"byte_end":100838,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::frame::coding::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[{"value":"/ Indicates a normal closure, meaning that the purpose for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100702,"byte_end":100762,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ which the connection was established has been fulfilled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100767,"byte_end":100827,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1635},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100980,"byte_end":100984,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::frame::coding::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is \"going away\", such as a server","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100844,"byte_end":100908,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ going down or a browser having navigated away from a page.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100913,"byte_end":100975,"line_start":124,"line_end":124,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1637},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101088,"byte_end":101096,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::frame::coding::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection due","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100990,"byte_end":101054,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ to a protocol error.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101059,"byte_end":101083,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1639},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101346,"byte_end":101357,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::frame::coding::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101102,"byte_end":101162,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/ because it has received a type of data it cannot accept (e.g., an","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101167,"byte_end":101236,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/ endpoint that understands only text data MAY send this if it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101241,"byte_end":101305,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ receives a binary message).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101310,"byte_end":101341,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101574,"byte_end":101580,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::frame::coding::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[{"value":"/ Indicates that no status code was included in a closing frame. This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101363,"byte_end":101434,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ close code makes it possible to use a single method, `on_close` to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101439,"byte_end":101509,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ handle even cases where no close code was provided.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101514,"byte_end":101569,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1643},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101922,"byte_end":101930,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::frame::coding::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[{"value":"/ Indicates an abnormal closure. If the abnormal closure was due to an","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101586,"byte_end":101658,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ error, this close code will not be used. Instead, the `on_error` method","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101663,"byte_end":101738,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ of the handler will be called with the error. However, if the connection","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101743,"byte_end":101819,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ is simply dropped, without an error, this close code will be sent to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101824,"byte_end":101900,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ handler.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101905,"byte_end":101917,"line_start":142,"line_end":142,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102182,"byte_end":102189,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::frame::coding::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]\n data within a text message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":101936,"byte_end":101996,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/ because it has received data within a message that was not","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102001,"byte_end":102063,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/ consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102068,"byte_end":102140,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ data within a text message).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102145,"byte_end":102177,"line_start":147,"line_end":147,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102546,"byte_end":102552,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::frame::coding::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102195,"byte_end":102255,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that violates its policy.  This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102260,"byte_end":102329,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ is a generic status code that can be returned when there is no","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102334,"byte_end":102400,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ other more suitable status code (e.g., Unsupported or Size) or if there","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102405,"byte_end":102480,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ is a need to hide specific details about the policy.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102485,"byte_end":102541,"line_start":153,"line_end":153,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1649},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102708,"byte_end":102712,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::frame::coding::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102558,"byte_end":102618,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that is too big for it to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102623,"byte_end":102686,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/ process.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102691,"byte_end":102703,"line_start":157,"line_end":157,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1651},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103187,"byte_end":103196,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::frame::coding::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint (client) is terminating the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102718,"byte_end":102776,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ connection because it has expected the server to negotiate one or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102781,"byte_end":102850,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ more extension, but the server didn't return them in the response","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102855,"byte_end":102924,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ message of the WebSocket handshake.  The list of extensions that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":102929,"byte_end":102997,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ are needed should be given as the reason for closing.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103002,"byte_end":103059,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ Note that this status code is not used by the server, because it","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103064,"byte_end":103132,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ can fail the WebSocket handshake instead.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103137,"byte_end":103182,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1653},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103374,"byte_end":103379,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::frame::coding::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[{"value":"/ Indicates that a server is terminating the connection because","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103202,"byte_end":103267,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/ it encountered an unexpected condition that prevented it from","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103272,"byte_end":103337,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ fulfilling the request.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103342,"byte_end":103369,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1655},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103559,"byte_end":103566,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::frame::coding::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is restarting. A client may choose to reconnect,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103385,"byte_end":103463,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ and if it does, it should use a randomized delay of 5-30 seconds between attempts.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103468,"byte_end":103554,"line_start":172,"line_end":172,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1657},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103787,"byte_end":103792,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::frame::coding::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is overloaded and the client should either connect","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103572,"byte_end":103652,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ to a different IP (when multiple targets exist), or reconnect to the same IP","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103657,"byte_end":103737,"line_start":175,"line_end":175,"column_start":5,"column_end":85}},{"value":"/ when a user has performed an action.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103742,"byte_end":103782,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1659},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103817,"byte_end":103820,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::frame::coding::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1661},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103845,"byte_end":103853,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::CloseCode::Reserved","value":"CloseCode::Reserved(u16)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1664},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103883,"byte_end":103887,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Iana","qualname":"::protocol::frame::coding::CloseCode::Iana","value":"CloseCode::Iana(u16)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103917,"byte_end":103924,"line_start":185,"line_end":185,"column_start":5,"column_end":12},"name":"Library","qualname":"::protocol::frame::coding::CloseCode::Library","value":"CloseCode::Library(u16)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103954,"byte_end":103957,"line_start":187,"line_end":187,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::frame::coding::CloseCode::Bad","value":"CloseCode::Bad(u16)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1632},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100686,"byte_end":100695,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::frame::coding::CloseCode","value":"pub enum CloseCode {\n    Normal,\n    Away,\n    Protocol,\n    Unsupported,\n    Status,\n    Abnormal,\n    Invalid,\n    Policy,\n    Size,\n    Extension,\n    Error,\n    Restart,\n    Again,\n    Tls,\n    Reserved(u16),\n    Iana(u16),\n    Library(u16),\n    Bad(u16),\n}","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[{"value":"/ Status code used to indicate why an endpoint is closing the WebSocket connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":100546,"byte_end":100631,"line_start":117,"line_end":117,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":104039,"byte_end":104049,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_allowed","qualname":"<CloseCode>::is_allowed","value":"pub fn is_allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this CloseCode is allowed.\n","sig":null,"attributes":[{"value":"/ Check if this CloseCode is allowed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103988,"byte_end":104027,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":106951,"byte_end":106961,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"CloseFrame","qualname":"::protocol::frame::frame::CloseFrame","value":"CloseFrame { code, reason }","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"decl_id":null,"docs":" A struct representing the close command.\n","sig":null,"attributes":[{"value":"/ A struct representing the close command.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":106856,"byte_end":106900,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1687},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107006,"byte_end":107010,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"code","qualname":"::protocol::frame::frame::CloseFrame::code","value":"protocol::frame::coding::CloseCode","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The reason as a code.\n","sig":null,"attributes":[{"value":"/ The reason as a code.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":106972,"byte_end":106997,"line_start":21,"line_end":21,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1688},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107066,"byte_end":107072,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"reason","qualname":"::protocol::frame::frame::CloseFrame::reason","value":"std::borrow::Cow<'t, str>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The reason as text string.\n","sig":null,"attributes":[{"value":"/ The reason as text string.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107027,"byte_end":107057,"line_start":23,"line_end":23,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107165,"byte_end":107175,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<CloseFrame>::into_owned","value":"pub fn into_owned(Self) -> CloseFrame","parent":null,"children":[],"decl_id":null,"docs":" Convert into a owned string.\n","sig":null,"attributes":[{"value":"/ Convert into a owned string.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107121,"byte_end":107153,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107586,"byte_end":107597,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"FrameHeader","qualname":"::protocol::frame::frame::FrameHeader","value":"FrameHeader { is_final, rsv1, rsv2, rsv3, opcode, mask }","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712}],"decl_id":null,"docs":" A struct representing a WebSocket frame header.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107460,"byte_end":107511,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107512,"byte_end":107550,"line_start":41,"line_end":41,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1707},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107691,"byte_end":107699,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"is_final","qualname":"::protocol::frame::frame::FrameHeader::is_final","value":"bool","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" Indicates that the frame is the last one of a possibly fragmented message.\n","sig":null,"attributes":[{"value":"/ Indicates that the frame is the last one of a possibly fragmented message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107604,"byte_end":107682,"line_start":44,"line_end":44,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1708},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107757,"byte_end":107761,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"rsv1","qualname":"::protocol::frame::frame::FrameHeader::rsv1","value":"bool","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107711,"byte_end":107748,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1709},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107819,"byte_end":107823,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"rsv2","qualname":"::protocol::frame::frame::FrameHeader::rsv2","value":"bool","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107773,"byte_end":107810,"line_start":48,"line_end":48,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1710},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107881,"byte_end":107885,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"name":"rsv3","qualname":"::protocol::frame::frame::FrameHeader::rsv3","value":"bool","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107835,"byte_end":107872,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1711},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107936,"byte_end":107942,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"opcode","qualname":"::protocol::frame::frame::FrameHeader::opcode","value":"protocol::frame::coding::OpCode","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" WebSocket protocol opcode.\n","sig":null,"attributes":[{"value":"/ WebSocket protocol opcode.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107897,"byte_end":107927,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1712},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107990,"byte_end":107994,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"name":"mask","qualname":"::protocol::frame::frame::FrameHeader::mask","value":"std::option::Option<[u8; 4]>","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" A frame mask, if any.\n","sig":null,"attributes":[{"value":"/ A frame mask, if any.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107956,"byte_end":107981,"line_start":54,"line_end":54,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108514,"byte_end":108519,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"parse","qualname":"<FrameHeader>::parse","value":"pub fn parse<impl AsRef<[u8]>: AsRef<[u8]>>(&mut Cursor<impl AsRef<[u8]>>)\n-> Result<Option<(Self, u64)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a header from an input stream.\n Returns `None` if insufficient data and does not consume anything in this case.\n Payload size is returned along with the header.\n","sig":null,"attributes":[{"value":"/ Parse a header from an input stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108318,"byte_end":108358,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"/ Returns `None` if insufficient data and does not consume anything in this case.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108363,"byte_end":108446,"line_start":73,"line_end":73,"column_start":5,"column_end":88}},{"value":"/ Payload size is returned along with the header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108451,"byte_end":108502,"line_start":74,"line_end":74,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108914,"byte_end":108917,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameHeader>::len","value":"pub fn len(&Self, u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the header formatted with given payload length.\n","sig":null,"attributes":[{"value":"/ Get the size of the header formatted with given payload length.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108835,"byte_end":108902,"line_start":86,"line_end":86,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":109116,"byte_end":109122,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<FrameHeader>::format","value":"pub fn format<impl Write: Write>(&Self, u64, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Format a header for given payload size.\n","sig":null,"attributes":[{"value":"/ Format a header for given payload size.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":109061,"byte_end":109104,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1718},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112545,"byte_end":112550,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"Frame","qualname":"::protocol::frame::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112465,"byte_end":112509,"line_start":200,"line_end":200,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112748,"byte_end":112751,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"/ Get the length of the frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112620,"byte_end":112652,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/ This is the length of the header + the length of the payload.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112657,"byte_end":112722,"line_start":209,"line_end":209,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112727,"byte_end":112736,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112928,"byte_end":112936,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Frame>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the frame is empty.\n","sig":null,"attributes":[{"value":"/ Check if the frame is empty.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112870,"byte_end":112902,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112907,"byte_end":112916,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113057,"byte_end":113063,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"header","qualname":"<Frame>::header","value":"pub fn header(&Self) -> &FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112989,"byte_end":113031,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113036,"byte_end":113045,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113197,"byte_end":113207,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Frame>::header_mut","value":"pub fn header_mut(&mut Self) -> &mut FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's header.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113121,"byte_end":113171,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113176,"byte_end":113185,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113346,"byte_end":113353,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"pub fn payload(&Self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's payload.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113277,"byte_end":113320,"line_start":234,"line_end":234,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113325,"byte_end":113334,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113485,"byte_end":113496,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"pub fn payload_mut(&mut Self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's payload.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113408,"byte_end":113459,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":113464,"byte_end":113473,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":114456,"byte_end":114465,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as binary.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as binary.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":114381,"byte_end":114430,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":114435,"byte_end":114444,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":114592,"byte_end":114603,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Frame>::into_string","value":"pub fn into_string(Self) -> StdResult<String, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as string.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as string.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":114517,"byte_end":114566,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":114571,"byte_end":114580,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115350,"byte_end":115357,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"pub fn message(Vec<u8>, OpCode, bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"/ Create a new data frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115296,"byte_end":115324,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115329,"byte_end":115338,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115682,"byte_end":115686,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"pub fn pong(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Pong control frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115620,"byte_end":115656,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115661,"byte_end":115670,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115985,"byte_end":115989,"line_start":320,"line_end":320,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"pub fn ping(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Ping control frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115923,"byte_end":115959,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":115964,"byte_end":115973,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116289,"byte_end":116294,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"pub fn close(Option<CloseFrame>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Close control frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116226,"byte_end":116263,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116268,"byte_end":116277,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116798,"byte_end":116810,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"from_payload","qualname":"<Frame>::from_payload","value":"pub fn from_payload(FrameHeader, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a frame from given header and data.\n","sig":null,"attributes":[{"value":"/ Create a frame from given header and data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116740,"byte_end":116786,"line_start":345,"line_end":345,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116950,"byte_end":116956,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"pub fn format<impl Write: Write>(Self, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[{"value":"/ Write a frame out to a buffer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":116905,"byte_end":116938,"line_start":350,"line_end":350,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1726},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89641,"byte_end":89652,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"FrameSocket","qualname":"::protocol::frame::FrameSocket","value":"FrameSocket {  }","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"decl_id":null,"docs":" A reader and writer for WebSocket frames.\n","sig":null,"attributes":[{"value":"/ A reader and writer for WebSocket frames.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89567,"byte_end":89612,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89871,"byte_end":89874,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameSocket<Stream>>::new","value":"pub fn new(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89829,"byte_end":89859,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90036,"byte_end":90055,"line_start":35,"line_end":35,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<FrameSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket from partially read data.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket from partially read data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89969,"byte_end":90024,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90234,"byte_end":90244,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameSocket<Stream>>::into_inner","value":"pub fn into_inner(Self) -> (Stream, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Extract a stream from the socket.\n","sig":null,"attributes":[{"value":"/ Extract a stream from the socket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90185,"byte_end":90222,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90403,"byte_end":90410,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90340,"byte_end":90391,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90527,"byte_end":90534,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90463,"byte_end":90515,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90701,"byte_end":90711,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"read_frame","qualname":"<FrameSocket<Stream>>::read_frame","value":"pub fn read_frame(&mut Self, Option<usize>) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Read a frame from stream.\n","sig":null,"attributes":[{"value":"/ Read a frame from stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90660,"byte_end":90689,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91170,"byte_end":91181,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<FrameSocket<Stream>>::write_frame","value":"pub fn write_frame(&mut Self, Frame) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame to stream.","sig":null,"attributes":[{"value":"/ Write a frame to stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90906,"byte_end":90934,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90939,"byte_end":90942,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the frame is queued regardless of any errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90947,"byte_end":91026,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ There is no need to resend the frame. In order to handle WouldBlock or Incomplete,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91031,"byte_end":91117,"line_start":72,"line_end":72,"column_start":5,"column_end":91}},{"value":"/ call write_pending() afterwards.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91122,"byte_end":91158,"line_start":73,"line_end":73,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91337,"byte_end":91350,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<FrameSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Complete pending write, if any.\n","sig":null,"attributes":[{"value":"/ Complete pending write, if any.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91290,"byte_end":91325,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1758},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127043,"byte_end":127047,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[{"value":"/ A text WebSocket message","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127010,"byte_end":127038,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1761},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127096,"byte_end":127102,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[{"value":"/ A binary WebSocket message","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127061,"byte_end":127091,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127239,"byte_end":127243,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::message::Message::Ping","value":"Message::Ping(Vec<u8>)","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A ping message with the specified payload","sig":null,"attributes":[{"value":"/ A ping message with the specified payload","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127117,"byte_end":127162,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127167,"byte_end":127170,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127175,"byte_end":127234,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1767},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127380,"byte_end":127384,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::message::Message::Pong","value":"Message::Pong(Vec<u8>)","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A pong message with the specified payload","sig":null,"attributes":[{"value":"/ A pong message with the specified payload","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127258,"byte_end":127303,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127308,"byte_end":127311,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127316,"byte_end":127375,"line_start":171,"line_end":171,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1770},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127454,"byte_end":127459,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::message::Message::Close","value":"Message::Close(Option<CloseFrame>)","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A close message with the optional close frame.\n","sig":null,"attributes":[{"value":"/ A close message with the optional close frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127399,"byte_end":127449,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1757},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":126996,"byte_end":127003,"line_start":160,"line_end":160,"column_start":10,"column_end":17},"name":"Message","qualname":"::protocol::message::Message","value":"pub enum Message {\n    Text(String),\n    Binary(Vec<u8>),\n    Ping(Vec<u8>),\n    Pong(Vec<u8>),\n    Close(Option<CloseFrame>),\n}","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1770}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[{"value":"/ An enum representing the various forms of a WebSocket message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":126881,"byte_end":126947,"line_start":158,"line_end":158,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127582,"byte_end":127586,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"pub fn text<S>(S) -> Message where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[{"value":"/ Create a new text WebSocket message from a stringable.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127512,"byte_end":127570,"line_start":178,"line_end":178,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127780,"byte_end":127786,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"pub fn binary<B>(B) -> Message where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[{"value":"/ Create a new binary WebSocket message by converting to Vec<u8>.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127701,"byte_end":127768,"line_start":186,"line_end":186,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127960,"byte_end":127967,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a text message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127898,"byte_end":127948,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128102,"byte_end":128111,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"pub fn is_binary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a binary message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128038,"byte_end":128090,"line_start":199,"line_end":199,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128246,"byte_end":128253,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"is_ping","qualname":"<Message>::is_ping","value":"pub fn is_ping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a ping message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a ping message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128184,"byte_end":128234,"line_start":204,"line_end":204,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128386,"byte_end":128393,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_pong","qualname":"<Message>::is_pong","value":"pub fn is_pong(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a pong message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a pong message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128324,"byte_end":128374,"line_start":209,"line_end":209,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128527,"byte_end":128535,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"is_close","qualname":"<Message>::is_close","value":"pub fn is_close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message ia s close message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message ia s close message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128464,"byte_end":128515,"line_start":214,"line_end":214,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128663,"byte_end":128666,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[{"value":"/ Get the length of the WebSocket message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":128607,"byte_end":128651,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129159,"byte_end":129167,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[{"value":"/ Returns true if the WebSocket message has no content.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129011,"byte_end":129068,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ For example, if the other side of the connection sent an empty string.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129073,"byte_end":129147,"line_start":231,"line_end":231,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129287,"byte_end":129296,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[{"value":"/ Consume the WebSocket and return it as binary data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129220,"byte_end":129275,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129718,"byte_end":129727,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"pub fn into_text(Self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[{"value":"/ Attempt to consume the WebSocket message and convert it to a String.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":129634,"byte_end":129706,"line_start":246,"line_end":246,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130267,"byte_end":130274,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Message>::to_text","value":"pub fn to_text(&Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[{"value":"/ Attempt to get a &str from the WebSocket message,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130148,"byte_end":130201,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/ this will try to convert binary data to utf8.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130206,"byte_end":130255,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1785},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59749,"byte_end":59755,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Server","qualname":"::protocol::Role::Server","value":"Role::Server","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" This socket is a server\n","sig":null,"attributes":[{"value":"/ This socket is a server","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59717,"byte_end":59744,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1787},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59793,"byte_end":59799,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Client","qualname":"::protocol::Role::Client","value":"Role::Client","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" This socket is a client\n","sig":null,"attributes":[{"value":"/ This socket is a client","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59761,"byte_end":59788,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1784},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59706,"byte_end":59710,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"Role","qualname":"::protocol::Role","value":"pub enum Role { Server, Client, }","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1787}],"decl_id":null,"docs":" Indicates a Client or Server role of the websocket\n","sig":null,"attributes":[{"value":"/ Indicates a Client or Server role of the websocket","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59597,"byte_end":59651,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1800},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59893,"byte_end":59908,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"WebSocketConfig","qualname":"::protocol::WebSocketConfig","value":"WebSocketConfig { max_send_queue, max_message_size, max_frame_size, accept_unmasked_frames }","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"decl_id":null,"docs":" The configuration for WebSocket connection.\n","sig":null,"attributes":[{"value":"/ The configuration for WebSocket connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59804,"byte_end":59851,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1801},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60129,"byte_end":60143,"line_start":43,"line_end":43,"column_start":9,"column_end":23},"name":"max_send_queue","qualname":"::protocol::WebSocketConfig::max_send_queue","value":"std::option::Option<usize>","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" The size of the send queue. You can use it to turn on/off the backpressure features. `None`\n means here that the size of the queue is unlimited. The default value is the unlimited\n queue.\n","sig":null,"attributes":[{"value":"/ The size of the send queue. You can use it to turn on/off the backpressure features. `None`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59915,"byte_end":60010,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ means here that the size of the queue is unlimited. The default value is the unlimited","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60015,"byte_end":60105,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60110,"byte_end":60120,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60398,"byte_end":60414,"line_start":47,"line_end":47,"column_start":9,"column_end":25},"name":"max_message_size","qualname":"::protocol::WebSocketConfig::max_message_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" The maximum size of a message. `None` means no size limit. The default value is 64 MiB\n which should be reasonably big for all normal use-cases but small enough to prevent\n memory eating by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a message. `None` means no size limit. The default value is 64 MiB","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60164,"byte_end":60254,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ which should be reasonably big for all normal use-cases but small enough to prevent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60259,"byte_end":60346,"line_start":45,"line_end":45,"column_start":5,"column_end":92}},{"value":"/ memory eating by a malicious user.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60351,"byte_end":60389,"line_start":46,"line_end":46,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60753,"byte_end":60767,"line_start":52,"line_end":52,"column_start":9,"column_end":23},"name":"max_frame_size","qualname":"::protocol::WebSocketConfig::max_frame_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" The maximum size of a single message frame. `None` means no size limit. The limit is for\n frame payload NOT including the frame header. The default value is 16 MiB which should\n be reasonably big for all normal use-cases but small enough to prevent memory eating\n by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a single message frame. `None` means no size limit. The limit is for","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60435,"byte_end":60527,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ frame payload NOT including the frame header. The default value is 16 MiB which should","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60532,"byte_end":60622,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ be reasonably big for all normal use-cases but small enough to prevent memory eating","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60627,"byte_end":60715,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ by a malicious user.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60720,"byte_end":60744,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1804},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61189,"byte_end":61211,"line_start":58,"line_end":58,"column_start":9,"column_end":31},"name":"accept_unmasked_frames","qualname":"::protocol::WebSocketConfig::accept_unmasked_frames","value":"bool","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" When set to `true`, the server will accept and handle unmasked frames\n from the client. According to the RFC 6455, the server must close the\n connection to the client in such cases, however it seems like there are\n some popular libraries that are sending unmasked frames, ignoring the RFC.\n By default this option is set to `false`, i.e. according to RFC 6455.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the server will accept and handle unmasked frames","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60788,"byte_end":60861,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ from the client. According to the RFC 6455, the server must close the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60866,"byte_end":60939,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ connection to the client in such cases, however it seems like there are","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":60944,"byte_end":61019,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ some popular libraries that are sending unmasked frames, ignoring the RFC.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61024,"byte_end":61102,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ By default this option is set to `false`, i.e. according to RFC 6455.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61107,"byte_end":61180,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1810},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61728,"byte_end":61737,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::protocol::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813}],"decl_id":null,"docs":" WebSocket input-output stream.","sig":null,"attributes":[{"value":"/ WebSocket input-output stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61496,"byte_end":61530,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61531,"byte_end":61534,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is THE structure you want to create to be able to speak the WebSocket protocol.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61535,"byte_end":61623,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ It may be created by calling `connect`, `accept` or `client` functions.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61624,"byte_end":61699,"line_start":75,"line_end":75,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62256,"byte_end":62271,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"from_raw_socket","qualname":"<WebSocket<Stream>>::from_raw_socket","value":"pub fn from_raw_socket(Stream, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61916,"byte_end":61989,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61994,"byte_end":61997,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62002,"byte_end":62081,"line_start":87,"line_end":87,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62086,"byte_end":62161,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62166,"byte_end":62244,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62777,"byte_end":62796,"line_start":99,"line_end":99,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>, Role, Option<WebSocketConfig>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62437,"byte_end":62510,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62515,"byte_end":62518,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62523,"byte_end":62602,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62607,"byte_end":62682,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":62687,"byte_end":62765,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63134,"byte_end":63141,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WebSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63071,"byte_end":63122,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63257,"byte_end":63264,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WebSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63193,"byte_end":63245,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63370,"byte_end":63380,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocket<Stream>>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63329,"byte_end":63358,"line_start":120,"line_end":120,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63531,"byte_end":63541,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocket<Stream>>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63492,"byte_end":63519,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63865,"byte_end":63873,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocket<Stream>>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63616,"byte_end":63661,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63666,"byte_end":63669,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63674,"byte_end":63760,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63765,"byte_end":63853,"line_start":133,"line_end":133,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64089,"byte_end":64098,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocket<Stream>>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63934,"byte_end":63980,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63985,"byte_end":63988,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":63993,"byte_end":64077,"line_start":140,"line_end":140,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65075,"byte_end":65087,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocket<Stream>>::read_message","value":"pub fn read_message(&mut Self) -> Result<Message>","parent":null,"children":[],"decl_id":null,"docs":" Read a message from stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from stream, if possible.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64209,"byte_end":64253,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64258,"byte_end":64261,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This will queue responses to ping and close messages to be sent. It will call","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64266,"byte_end":64347,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ `write_pending` before trying to read in order to make sure that those responses","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64352,"byte_end":64436,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ make progress even if you never call `write_pending`. That does mean that they","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64441,"byte_end":64523,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/ get sent out earliest on the next call to `read_message`, `write_message` or `write_pending`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64528,"byte_end":64625,"line_start":152,"line_end":152,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64630,"byte_end":64633,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ## Closing the connection","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64638,"byte_end":64667,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ When the remote endpoint decides to close the connection this will return","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64672,"byte_end":64749,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ the close message with an optional close frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64754,"byte_end":64805,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64810,"byte_end":64813,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ You should continue calling `read_message`, `write_message` or `write_pending` to drive","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64818,"byte_end":64909,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ the reply to the close frame until [Error::ConnectionClosed] is returned. Once that happens","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64914,"byte_end":65009,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ it is safe to drop the underlying connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65014,"byte_end":65063,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67111,"byte_end":67124,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocket<Stream>>::write_message","value":"pub fn write_message(&mut Self, Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to stream, if possible.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65183,"byte_end":65225,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65230,"byte_end":65233,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65238,"byte_end":65332,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ requests. A Pong reply will jump the queue because the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65337,"byte_end":65395,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ [websocket RFC](https://tools.ietf.org/html/rfc6455#section-5.5.2) specifies it should be sent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65400,"byte_end":65498,"line_start":169,"line_end":169,"column_start":5,"column_end":103}},{"value":"/ as soon as is practical.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65503,"byte_end":65531,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65536,"byte_end":65539,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that upon receiving a ping message, tungstenite cues a pong reply automatically.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65544,"byte_end":65633,"line_start":172,"line_end":172,"column_start":5,"column_end":94}},{"value":"/ When you call either `read_message`, `write_message` or `write_pending` next it will try to send","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65638,"byte_end":65738,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"/ that pong out if the underlying connection can take more data. This means you should not","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65743,"byte_end":65835,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ respond to ping frames manually.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65840,"byte_end":65876,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65881,"byte_end":65884,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ You can however send pong frames manually in order to indicate a unidirectional heartbeat","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65889,"byte_end":65982,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ as described in [RFC 6455](https://tools.ietf.org/html/rfc6455#section-5.5.3). Note that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":65987,"byte_end":66079,"line_start":178,"line_end":178,"column_start":5,"column_end":97}},{"value":"/ if `read_message` returns a ping, you should call `write_pending` until it doesn't return","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66084,"byte_end":66177,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ WouldBlock before passing a pong to `write_message`, otherwise the response to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66182,"byte_end":66268,"line_start":180,"line_end":180,"column_start":5,"column_end":91}},{"value":"/ ping will not be sent, but rather replaced by your custom pong message.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66273,"byte_end":66348,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66353,"byte_end":66356,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66361,"byte_end":66374,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ - If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66379,"byte_end":66456,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66461,"byte_end":66552,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ - If the connection is closed and should be dropped, this will return [Error::ConnectionClosed].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66557,"byte_end":66657,"line_start":186,"line_end":186,"column_start":5,"column_end":105}},{"value":"/ - If you try again after [Error::ConnectionClosed] was returned either from here or from `read_message`,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66662,"byte_end":66770,"line_start":187,"line_end":187,"column_start":5,"column_end":113}},{"value":"/   [Error::AlreadyClosed] will be returned. This indicates a program error on your part.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66775,"byte_end":66866,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ - [Error::Io] is returned if the underlying connection returns an error","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66871,"byte_end":66946,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/   (consider these fatal except for WouldBlock).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":66951,"byte_end":67002,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/ - [Error::Capacity] if your message size is bigger than the configured max message size.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67007,"byte_end":67099,"line_start":191,"line_end":191,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67288,"byte_end":67301,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67243,"byte_end":67276,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68506,"byte_end":68511,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket<Stream>>::close","value":"pub fn close(&mut Self, Option<CloseFrame>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67393,"byte_end":67418,"line_start":201,"line_end":201,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67423,"byte_end":67426,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67431,"byte_end":67496,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67501,"byte_end":67564,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write_message(Message::Close(..))`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67569,"byte_end":67629,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67634,"byte_end":67637,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ After queing the close frame you should continue calling `read_message` or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67642,"byte_end":67720,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ `write_pending` to drive the close handshake to completion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67725,"byte_end":67788,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67793,"byte_end":67796,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The websocket RFC defines that the underlying connection should be closed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67801,"byte_end":67878,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ by the server. Tungstenite takes care of this asymmetry for you.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67883,"byte_end":67951,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67956,"byte_end":67959,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When the close handshake is finished (we have both sent and received","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":67964,"byte_end":68036,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ a close message), `read_message` or `write_pending` will return","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68041,"byte_end":68108,"line_start":214,"line_end":214,"column_start":5,"column_end":72}},{"value":"/ [Error::ConnectionClosed] if this endpoint is the server.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68113,"byte_end":68174,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68179,"byte_end":68182,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If this endpoint is a client, [Error::ConnectionClosed] will only be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68187,"byte_end":68259,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ returned after the server has closed the underlying connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68264,"byte_end":68331,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68336,"byte_end":68339,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is thus safe to drop the underlying connection as soon as [Error::ConnectionClosed]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68344,"byte_end":68434,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ is returned from `read_message` or `write_pending`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68439,"byte_end":68494,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1817},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68698,"byte_end":68714,"line_start":229,"line_end":229,"column_start":12,"column_end":28},"name":"WebSocketContext","qualname":"::protocol::WebSocketContext","value":"WebSocketContext {  }","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"decl_id":null,"docs":" A context for managing WebSocket stream.\n","sig":null,"attributes":[{"value":"/ A context for managing WebSocket stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":68625,"byte_end":68669,"line_start":227,"line_end":227,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":69324,"byte_end":69327,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocketContext>::new","value":"pub fn new(Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages a post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages a post-handshake stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":69244,"byte_end":69312,"line_start":247,"line_end":247,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":69775,"byte_end":69794,"line_start":261,"line_end":261,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocketContext>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages an post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages an post-handshake stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":69694,"byte_end":69763,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70062,"byte_end":70072,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocketContext>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70021,"byte_end":70050,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70216,"byte_end":70226,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocketContext>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70177,"byte_end":70204,"line_start":273,"line_end":273,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70537,"byte_end":70545,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocketContext>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70288,"byte_end":70333,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70338,"byte_end":70341,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70346,"byte_end":70432,"line_start":280,"line_end":280,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70437,"byte_end":70525,"line_start":281,"line_end":281,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70759,"byte_end":70768,"line_start":289,"line_end":289,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocketContext>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70604,"byte_end":70650,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70655,"byte_end":70658,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70663,"byte_end":70747,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":71016,"byte_end":71028,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocketContext>::read_message","value":"pub fn read_message<Stream>(&mut Self, &mut Stream) -> Result<Message> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Read a message from the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from the provided stream, if possible.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70828,"byte_end":70885,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70890,"byte_end":70893,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function sends pong and close responses automatically.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70898,"byte_end":70961,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ However, it never blocks on write.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":70966,"byte_end":71004,"line_start":296,"line_end":296,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":72336,"byte_end":72349,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocketContext>::write_message","value":"pub fn write_message<Stream>(&mut Self, &mut Stream, Message) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to the provided stream, if possible.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":71805,"byte_end":71860,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":71865,"byte_end":71868,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":71873,"byte_end":71967,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ and Close requests. If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":71972,"byte_end":72067,"line_start":320,"line_end":320,"column_start":5,"column_end":100}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":72072,"byte_end":72163,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":72168,"byte_end":72171,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that only the last pong frame is stored to be sent, and only the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":72176,"byte_end":72249,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ most recent pong frame is sent if multiple pong frames are queued.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":72254,"byte_end":72324,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":73926,"byte_end":73939,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocketContext>::write_pending","value":"pub fn write_pending<Stream>(&mut Self, &mut Stream) -> Result<()> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":73881,"byte_end":73914,"line_start":365,"line_end":365,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":75927,"byte_end":75932,"line_start":409,"line_end":409,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocketContext>::close","value":"pub fn close<Stream>(&mut Self, &mut Stream, Option<CloseFrame>) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":75687,"byte_end":75712,"line_start":404,"line_end":404,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":75717,"byte_end":75720,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":75725,"byte_end":75790,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":75795,"byte_end":75858,"line_start":407,"line_end":407,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write(Message::Close(..))`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":75863,"byte_end":75915,"line_start":408,"line_end":408,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1113},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1149}],"decl_id":null,"docs":" Methods to accept an incoming WebSocket connection on a server.\n","sig":null,"attributes":[{"value":"/ Methods to accept an incoming WebSocket connection on a server.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":132639,"byte_end":132706,"line_start":1,"line_end":1,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133397,"byte_end":133415,"line_start":23,"line_end":23,"column_start":8,"column_end":26},"name":"accept_with_config","qualname":"::server::accept_with_config","value":"pub fn accept_with_config<S: Read + Write>(S, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":132925,"byte_end":132968,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":132969,"byte_end":132972,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":132973,"byte_end":133070,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ used by `accept()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133071,"byte_end":133094,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133095,"byte_end":133098,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133099,"byte_end":133175,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133176,"byte_end":133253,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133254,"byte_end":133346,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133347,"byte_end":133389,"line_start":22,"line_end":22,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133966,"byte_end":133972,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"accept","qualname":"::server::accept","value":"pub fn accept<S: Read + Write>(S)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133620,"byte_end":133663,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133664,"byte_end":133667,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133668,"byte_end":133744,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133745,"byte_end":133822,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133823,"byte_end":133915,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":133916,"byte_end":133958,"line_start":35,"line_end":35,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1146},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134516,"byte_end":134538,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"accept_hdr_with_config","qualname":"::server::accept_hdr_with_config","value":"pub fn accept_hdr_with_config<S: Read + Write,\n                              C: Callback>(S, C, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134122,"byte_end":134165,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134166,"byte_end":134169,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134170,"byte_end":134267,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ used by `accept_hdr()`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134268,"byte_end":134295,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134296,"byte_end":134299,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134300,"byte_end":134375,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134376,"byte_end":134448,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134449,"byte_end":134508,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1149},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":135038,"byte_end":135048,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"accept_hdr","qualname":"::server::accept_hdr","value":"pub fn accept_hdr<S: Read + Write, C: Callback>(S, C)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134774,"byte_end":134817,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134818,"byte_end":134821,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134822,"byte_end":134897,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134898,"byte_end":134970,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/server.rs","byte_start":134971,"byte_end":135030,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":1152},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1849},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1859},{"krate":0,"index":1868},{"krate":0,"index":1170},{"krate":0,"index":1174},{"krate":0,"index":1179}],"decl_id":null,"docs":" Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","sig":null,"attributes":[{"value":"/ Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135233,"byte_end":135316,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135317,"byte_end":135320,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  There is no dependency on actual TLS implementations. Everything like","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135321,"byte_end":135395,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `native_tls` or `openssl` will work as long as there is a TLS stream supporting standard","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135396,"byte_end":135488,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ `Read + Write` traits.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135489,"byte_end":135515,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1850},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135839,"byte_end":135844,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Mode::Plain","value":"Mode::Plain","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" Plain mode (`ws://` URL).\n","sig":null,"attributes":[{"value":"/ Plain mode (`ws://` URL).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135805,"byte_end":135834,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1852},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135883,"byte_end":135886,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Mode::Tls","value":"Mode::Tls","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" TLS mode (`wss://` URL).\n","sig":null,"attributes":[{"value":"/ TLS mode (`wss://` URL).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135850,"byte_end":135878,"line_start":21,"line_end":21,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1849},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135794,"byte_end":135798,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"Mode","qualname":"::stream::Mode","value":"pub enum Mode { Plain, Tls, }","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1852}],"decl_id":null,"docs":" Stream mode, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream mode, either plain TCP or TLS.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135713,"byte_end":135754,"line_start":16,"line_end":16,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1166},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135934,"byte_end":135941,"line_start":26,"line_end":26,"column_start":11,"column_end":18},"name":"NoDelay","qualname":"::stream::NoDelay","value":"NoDelay","parent":null,"children":[{"krate":0,"index":1167}],"decl_id":null,"docs":" Trait to switch TCP_NODELAY.\n","sig":null,"attributes":[{"value":"/ Trait to switch TCP_NODELAY.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135891,"byte_end":135923,"line_start":25,"line_end":25,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136006,"byte_end":136017,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"::stream::NoDelay::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Set the TCP_NODELAY option to the given value.\n","sig":null,"attributes":[{"value":"/ Set the TCP_NODELAY option to the given value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":135948,"byte_end":135998,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136760,"byte_end":136765,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Stream::Plain","value":"Stream::Plain(S)","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Unencrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Unencrypted socket stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136725,"byte_end":136755,"line_start":54,"line_end":54,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136807,"byte_end":136810,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Stream::Tls","value":"Stream::Tls(T)","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Encrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Encrypted socket stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136774,"byte_end":136802,"line_start":56,"line_end":56,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1859},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136706,"byte_end":136712,"line_start":53,"line_end":53,"column_start":10,"column_end":16},"name":"Stream","qualname":"::stream::Stream","value":"pub enum Stream<S, T> { Plain(S), Tls(T), }","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1865}],"decl_id":null,"docs":" Stream, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream, either plain TCP or TLS.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136643,"byte_end":136679,"line_start":51,"line_end":51,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":1183},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208}],"decl_id":null,"docs":" Helper traits to ease non-blocking handling.\n","sig":null,"attributes":[{"value":"/ Helper traits to ease non-blocking handling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":137790,"byte_end":137838,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1198},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138008,"byte_end":138024,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"NonBlockingError","qualname":"::util::NonBlockingError","value":"NonBlockingError: Sized","parent":null,"children":[{"krate":0,"index":1199}],"decl_id":null,"docs":" Non-blocking IO handling.\n","sig":null,"attributes":[{"value":"/ Non-blocking IO handling.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":137968,"byte_end":137997,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138106,"byte_end":138123,"line_start":13,"line_end":13,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"::util::NonBlockingError::into_non_blocking","value":"pub fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":" Convert WouldBlock to None and don't touch other errors.\n","sig":null,"attributes":[{"value":"/ Convert WouldBlock to None and don't touch other errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138038,"byte_end":138098,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1205},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138685,"byte_end":138702,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"name":"NonBlockingResult","qualname":"::util::NonBlockingResult","value":"NonBlockingResult","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":" Non-blocking IO wrapper.","sig":null,"attributes":[{"value":"/ Non-blocking IO wrapper.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138574,"byte_end":138602,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138603,"byte_end":138606,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `Result<T, E: NonBlockingError>`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138607,"byte_end":138674,"line_start":36,"line_end":36,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1206},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138775,"byte_end":138781,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::NonBlockingResult::Result","value":"type Result;","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Type of the converted result: `Result<Option<T>, E>`\n","sig":null,"attributes":[{"value":"/ Type of the converted result: `Result<Option<T>, E>`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138709,"byte_end":138765,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138832,"byte_end":138840,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"no_block","qualname":"::util::NonBlockingResult::no_block","value":"pub fn no_block(Self) -> Self::Result","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Perform the non-block conversion.\n","sig":null,"attributes":[{"value":"/ Perform the non-block conversion.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138787,"byte_end":138824,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1318,"byte_end":1328,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":3127,"byte_end":3137,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14890,"byte_end":14896,"line_start":287,"line_end":287,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15200,"byte_end":15203,"line_start":299,"line_end":299,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15485,"byte_end":15488,"line_start":311,"line_end":311,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15625,"byte_end":15632,"line_start":317,"line_end":317,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15760,"byte_end":15767,"line_start":323,"line_end":323,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18679,"byte_end":18684,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18794,"byte_end":18799,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18927,"byte_end":18932,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19090,"byte_end":19095,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19245,"byte_end":19250,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19370,"byte_end":19375,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19522,"byte_end":19527,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19668,"byte_end":19673,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30678,"byte_end":30693,"line_start":37,"line_end":37,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":31801,"byte_end":31816,"line_start":72,"line_end":72,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":34134,"byte_end":34144,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":36938,"byte_end":36946,"line_start":205,"line_end":205,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":37376,"byte_end":37384,"line_start":216,"line_end":216,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":41935,"byte_end":41944,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":42297,"byte_end":42306,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":47253,"byte_end":47260,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":47687,"byte_end":47694,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49338,"byte_end":49339,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49709,"byte_end":49719,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50578,"byte_end":50593,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":51434,"byte_end":51449,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55212,"byte_end":55228,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55925,"byte_end":55941,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26237,"byte_end":26249,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27492,"byte_end":27506,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27844,"byte_end":27858,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28169,"byte_end":28183,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28236,"byte_end":28250,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98502,"byte_end":98506,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98845,"byte_end":98852,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":99196,"byte_end":99202,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":99408,"byte_end":99414,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":99935,"byte_end":99941,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103972,"byte_end":103981,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":104169,"byte_end":104178,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":105088,"byte_end":105097,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107100,"byte_end":107110,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107322,"byte_end":107332,"line_start":34,"line_end":34,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108033,"byte_end":108044,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108300,"byte_end":108311,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":110261,"byte_end":110272,"line_start":128,"line_end":128,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112608,"byte_end":112613,"line_start":207,"line_end":207,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":117188,"byte_end":117193,"line_start":359,"line_end":359,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":117902,"byte_end":117914,"line_start":392,"line_end":392,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89803,"byte_end":89814,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90610,"byte_end":90621,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90855,"byte_end":90866,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91786,"byte_end":91796,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":122452,"byte_end":122467,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":124689,"byte_end":124706,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127498,"byte_end":127505,"line_start":177,"line_end":177,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130677,"byte_end":130684,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130794,"byte_end":130801,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130913,"byte_end":130920,"line_start":284,"line_end":284,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":131026,"byte_end":131033,"line_start":290,"line_end":290,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":131138,"byte_end":131145,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":131235,"byte_end":131242,"line_start":302,"line_end":302,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61239,"byte_end":61254,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61892,"byte_end":61901,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64185,"byte_end":64194,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":69221,"byte_end":69237,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":85376,"byte_end":85390,"line_start":627,"line_end":627,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":86371,"byte_end":86377,"line_start":654,"line_end":654,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136081,"byte_end":136090,"line_start":31,"line_end":31,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136850,"byte_end":136856,"line_start":60,"line_end":60,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":137105,"byte_end":137111,"line_start":69,"line_end":69,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":137545,"byte_end":137551,"line_start":84,"line_end":84,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138176,"byte_end":138183,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138382,"byte_end":138387,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138900,"byte_end":138909,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":321,"byte_end":327,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":337,"byte_end":343,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":353,"byte_end":358,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":179}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":368,"byte_end":377,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":224}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":25785,"byte_end":25791,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":225}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":25801,"byte_end":25808,"line_start":4,"line_end":4,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":337}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":25818,"byte_end":25824,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":387,"byte_end":395,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":614}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":59121,"byte_end":59126,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":615}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89284,"byte_end":89290,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":616}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":405,"byte_end":411,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1113}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":421,"byte_end":427,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1152}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/lib.rs","byte_start":437,"byte_end":441,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1183}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":1318,"byte_end":1328,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/buffer.rs","byte_start":3127,"byte_end":3137,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1254},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":14890,"byte_end":14896,"line_start":287,"line_end":287,"column_start":28,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":150}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15200,"byte_end":15203,"line_start":299,"line_end":299,"column_start":28,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":20,"index":3215},"to":{"krate":0,"index":150}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15485,"byte_end":15488,"line_start":311,"line_end":311,"column_start":28,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":26,"index":908},"to":{"krate":0,"index":150}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15625,"byte_end":15632,"line_start":317,"line_end":317,"column_start":28,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":308},"to":{"krate":0,"index":150}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/client.rs","byte_start":15760,"byte_end":15767,"line_start":323,"line_end":323,"column_start":46,"column_end":53},"kind":{"Impl":{"id":6}},"from":{"krate":37,"index":280},"to":{"krate":0,"index":150}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18679,"byte_end":18684,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18794,"byte_end":18799,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":18927,"byte_end":18932,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19090,"byte_end":19095,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19245,"byte_end":19250,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19370,"byte_end":19375,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19522,"byte_end":19527,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/error.rs","byte_start":19668,"byte_end":19673,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":30678,"byte_end":30693,"line_start":37,"line_end":37,"column_start":23,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":31801,"byte_end":31816,"line_start":72,"line_end":72,"column_start":41,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1473},"to":{"krate":0,"index":607}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":34134,"byte_end":34144,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":36938,"byte_end":36946,"line_start":205,"line_end":205,"column_start":19,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/client.rs","byte_start":37376,"byte_end":37384,"line_start":216,"line_end":216,"column_start":63,"column_end":71},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":41763,"byte_end":41768,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":41935,"byte_end":41944,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"kind":{"Impl":{"id":37}},"from":{"krate":20,"index":2381},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/headers.rs","byte_start":42297,"byte_end":42306,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":20,"index":2381},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":47253,"byte_end":47260,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":47687,"byte_end":47694,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":48956,"byte_end":48961,"line_start":155,"line_end":155,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":483}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49338,"byte_end":49339,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":486},"to":{"krate":0,"index":483}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":49709,"byte_end":49719,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1485},"to":{"krate":0,"index":483}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":50578,"byte_end":50593,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/server.rs","byte_start":51434,"byte_end":51449,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1492},"to":{"krate":0,"index":607}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55212,"byte_end":55228,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":55925,"byte_end":55941,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/machine.rs","byte_start":58747,"byte_end":58752,"line_start":110,"line_end":110,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":26237,"byte_end":26249,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27492,"byte_end":27506,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":27844,"byte_end":27858,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28169,"byte_end":28183,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/handshake/mod.rs","byte_start":28236,"byte_end":28250,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98502,"byte_end":98506,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":98845,"byte_end":98852,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1610},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":99196,"byte_end":99202,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":99408,"byte_end":99414,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":99935,"byte_end":99941,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":103972,"byte_end":103981,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":104169,"byte_end":104178,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/coding.rs","byte_start":105088,"byte_end":105097,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107100,"byte_end":107110,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":107322,"byte_end":107332,"line_start":34,"line_end":34,"column_start":27,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108033,"byte_end":108044,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":108300,"byte_end":108311,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":110261,"byte_end":110272,"line_start":128,"line_end":128,"column_start":6,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":112608,"byte_end":112613,"line_start":207,"line_end":207,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":117188,"byte_end":117193,"line_start":359,"line_end":359,"column_start":23,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1718},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/frame.rs","byte_start":117902,"byte_end":117914,"line_start":392,"line_end":392,"column_start":6,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":89803,"byte_end":89814,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90610,"byte_end":90621,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":90855,"byte_end":90866,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/frame/mod.rs","byte_start":91786,"byte_end":91796,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":122452,"byte_end":122467,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":124689,"byte_end":124706,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":127498,"byte_end":127505,"line_start":177,"line_end":177,"column_start":6,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130677,"byte_end":130684,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130794,"byte_end":130801,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":130913,"byte_end":130920,"line_start":284,"line_end":284,"column_start":29,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":131026,"byte_end":131033,"line_start":290,"line_end":290,"column_start":24,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":131138,"byte_end":131145,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/message.rs","byte_start":131235,"byte_end":131242,"line_start":302,"line_end":302,"column_start":23,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61239,"byte_end":61254,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1800},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":61892,"byte_end":61901,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":64185,"byte_end":64194,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":69221,"byte_end":69237,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":85376,"byte_end":85390,"line_start":627,"line_end":627,"column_start":6,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/protocol/mod.rs","byte_start":86371,"byte_end":86377,"line_start":654,"line_end":654,"column_start":34,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":1108}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136081,"byte_end":136090,"line_start":31,"line_end":31,"column_start":18,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":1,"index":5090},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":136850,"byte_end":136856,"line_start":60,"line_end":60,"column_start":33,"column_end":39},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1859},"to":{"krate":1,"index":4334}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":137105,"byte_end":137111,"line_start":69,"line_end":69,"column_start":36,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1859},"to":{"krate":1,"index":4395}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/stream.rs","byte_start":137545,"byte_end":137551,"line_start":84,"line_end":84,"column_start":42,"column_end":48},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1859},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138026,"byte_end":138031,"line_start":11,"line_end":11,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":1198}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138176,"byte_end":138183,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":1,"index":3793},"to":{"krate":0,"index":1198}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138382,"byte_end":138387,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1263},"to":{"krate":0,"index":1198}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.14.0/src/util.rs","byte_start":138900,"byte_end":138909,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":2,"index":43308},"to":{"krate":0,"index":1205}}]}