{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0","program":"/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","dusk_jubjub","--edition=2018","/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=a943e5169927d68a","-C","extra-filename=-a943e5169927d68a","--out-dir","/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","-L","dependency=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","--extern","blake2=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libblake2-ae95454dab59dbca.rmeta","--extern","dusk_bls12_381=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libdusk_bls12_381-f917f981e1482d3a.rmeta","--extern","rand_core=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/librand_core-9f0055b65fac4b60.rmeta","--extern","subtle=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libsubtle-6f72c222c8bcd0fd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libdusk_jubjub-a943e5169927d68a.rmeta"},"prelude":{"crate_id":{"name":"dusk_jubjub","disambiguator":[11887999562057446180,0]},"crate_root":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src","external_crates":[{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":17,"id":{"name":"subtle","disambiguator":[13011780876598088794,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","num":18,"id":{"name":"rand_core","disambiguator":[10452021981862493266,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","num":19,"id":{"name":"getrandom","disambiguator":[14157120524841162943,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","num":20,"id":{"name":"cfg_if","disambiguator":[14051682313894696593,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","num":21,"id":{"name":"libc","disambiguator":[10523018658660346655,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":22,"id":{"name":"dusk_bls12_381","disambiguator":[9215213634503669020,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":23,"id":{"name":"serde","disambiguator":[15623860250658395936,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":24,"id":{"name":"byteorder","disambiguator":[3185979014620124472,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":25,"id":{"name":"rayon","disambiguator":[14893943608296716958,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":26,"id":{"name":"either","disambiguator":[4214207807255231193,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":27,"id":{"name":"rayon_core","disambiguator":[4001052072495000127,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":28,"id":{"name":"crossbeam_channel","disambiguator":[2602937708634249574,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":29,"id":{"name":"crossbeam_utils","disambiguator":[6316268856000424831,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":30,"id":{"name":"lazy_static","disambiguator":[2138047805796034603,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":31,"id":{"name":"crossbeam_deque","disambiguator":[4748062661678240586,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":32,"id":{"name":"crossbeam_epoch","disambiguator":[6330569752181341284,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":33,"id":{"name":"scopeguard","disambiguator":[840363116583998361,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":34,"id":{"name":"memoffset","disambiguator":[8261975185547868517,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","num":35,"id":{"name":"num_cpus","disambiguator":[10360744079750983660,0]}}],"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":0,"byte_end":47699,"line_start":1,"line_end":1573,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":22,"index":1590},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1866,"byte_end":1875,"line_start":55,"line_end":55,"column_start":25,"column_end":34},"alias_span":null,"name":"BlsScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1591},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1866,"byte_end":1875,"line_start":55,"line_end":55,"column_start":25,"column_end":34},"alias_span":null,"name":"BlsScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1889,"byte_end":1891,"line_start":56,"line_end":56,"column_start":13,"column_end":15},"alias_span":null,"name":"JubJubScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1889,"byte_end":1891,"line_start":56,"line_end":56,"column_start":13,"column_end":15},"alias_span":null,"name":"JubJubScalar","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":0,"byte_end":47699,"line_start":1,"line_end":1573,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":48},{"krate":0,"index":223},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":543},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":334},{"krate":0,"index":342},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":347},{"krate":0,"index":574},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":359},{"krate":0,"index":584},{"krate":0,"index":588},{"krate":0,"index":592},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":382},{"krate":0,"index":400},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":608},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":405},{"krate":0,"index":410},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":640},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":415},{"krate":0,"index":420},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":672},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":425},{"krate":0,"index":430},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":700},{"krate":0,"index":704},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":435},{"krate":0,"index":440},{"krate":0,"index":717},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":732},{"krate":0,"index":736},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":445},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":460}],"decl_id":null,"docs":" This crate provides an implementation of the **Jubjub** elliptic curve and\n its associated field arithmetic.\n See [`README.md`](https://github.com/zkcrypto/jubjub/blob/master/README.md)","sig":null,"attributes":[{"value":"/ This crate provides an implementation of the **Jubjub** elliptic curve and","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ its associated field arithmetic.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":79,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"/ See [`README.md`](https://github.com/zkcrypto/jubjub/blob/master/README.md)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":116,"byte_end":195,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":230,"byte_end":233,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # API","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":234,"byte_end":243,"line_start":6,"line_end":6,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":244,"byte_end":247,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ * `JubJubAffine` / `JubJubExtended` which are implementations of Jubjub","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":248,"byte_end":323,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/   group arithmetic","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":324,"byte_end":346,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ * `AffineNielsPoint` / `ExtendedNielsPoint` which are pre-processed Jubjub","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":347,"byte_end":425,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/   points","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":426,"byte_end":438,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/ * `BlsScalar`, which is the base field of Jubjub","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":439,"byte_end":491,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ * `Fr`, which is the scalar field of Jubjub","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":492,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/ * `batch_normalize` for converting many `JubJubExtended`s into","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":540,"byte_end":606,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/   `JubJubAffine`s efficiently.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":607,"byte_end":641,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":642,"byte_end":645,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Constant Time","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":646,"byte_end":665,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":666,"byte_end":669,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ All operations are constant time unless explicitly noted; these functions","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":670,"byte_end":747,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ will contain \"vartime\" in their name and they will be documented as variable","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":748,"byte_end":828,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":829,"byte_end":838,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":839,"byte_end":842,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This crate uses the `subtle` crate to perform constant-time operations.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":843,"byte_end":918,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"deny(broken_intra_doc_links)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1017,"byte_end":1049,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1050,"byte_end":1089,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1090,"byte_end":1112,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"deny(unsafe_code)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1113,"byte_end":1134,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"allow(clippy :: suspicious_arithmetic_impl)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1393,"byte_end":1438,"line_start":35,"line_end":35,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53256,"byte_end":53258,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"Fr","qualname":"::fr::Fr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents an element of the scalar field $\\mathbb{F}_r$ of the Jubjub\n elliptic curve construction.\n","sig":null,"attributes":[{"value":"/ Represents an element of the scalar field $\\mathbb{F}_r$ of the Jubjub","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":52871,"byte_end":52945,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ elliptic curve construction.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":52946,"byte_end":52978,"line_start":22,"line_end":22,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57434,"byte_end":57438,"line_start":226,"line_end":226,"column_start":18,"column_end":22},"name":"zero","qualname":"<Fr>::zero","value":"pub const fn zero() -> Fr","parent":null,"children":[],"decl_id":null,"docs":" Returns zero, the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns zero, the additive identity.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57362,"byte_end":57402,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57407,"byte_end":57416,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57562,"byte_end":57565,"line_start":232,"line_end":232,"column_start":18,"column_end":21},"name":"one","qualname":"<Fr>::one","value":"pub const fn one() -> Fr","parent":null,"children":[],"decl_id":null,"docs":" Returns one, the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns one, the multiplicative identity.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57485,"byte_end":57530,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57535,"byte_end":57544,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57660,"byte_end":57666,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"name":"double","qualname":"<Fr>::double","value":"pub const fn double(&Self) -> Fr","parent":null,"children":[],"decl_id":null,"docs":" Doubles this field element.\n","sig":null,"attributes":[{"value":"/ Doubles this field element.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57597,"byte_end":57628,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57633,"byte_end":57642,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57754,"byte_end":57758,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"name":"divn","qualname":"<Fr>::divn","value":"pub fn divn(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" SHR impl\n","sig":null,"attributes":[{"value":"/ SHR impl","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57716,"byte_end":57728,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57733,"byte_end":57742,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":58501,"byte_end":58511,"line_start":272,"line_end":272,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Fr>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> CtOption<Fr>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert a little-endian byte representation of\n a field element into an element of `Fr`, failing if the input\n is not canonical (is not smaller than r).\n","sig":null,"attributes":[{"value":"/ Attempts to convert a little-endian byte representation of","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":58307,"byte_end":58369,"line_start":269,"line_end":269,"column_start":5,"column_end":67}},{"value":"/ a field element into an element of `Fr`, failing if the input","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":58374,"byte_end":58439,"line_start":270,"line_end":270,"column_start":5,"column_end":70}},{"value":"/ is not canonical (is not smaller than r).","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":58444,"byte_end":58489,"line_start":271,"line_end":271,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":59666,"byte_end":59674,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Fr>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Converts an element of `Fr` into a byte representation in\n little-endian byte order.\n","sig":null,"attributes":[{"value":"/ Converts an element of `Fr` into a byte representation in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":59559,"byte_end":59620,"line_start":298,"line_end":298,"column_start":5,"column_end":66}},{"value":"/ little-endian byte order.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":59625,"byte_end":59654,"line_start":299,"line_end":299,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":60299,"byte_end":60314,"line_start":318,"line_end":318,"column_start":12,"column_end":27},"name":"from_bytes_wide","qualname":"<Fr>::from_bytes_wide","value":"pub fn from_bytes_wide(&[u8; ]) -> Fr","parent":null,"children":[],"decl_id":null,"docs":" Converts a 512-bit little endian integer into\n an element of Fr by reducing modulo r.\n","sig":null,"attributes":[{"value":"/ Converts a 512-bit little endian integer into","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":60191,"byte_end":60240,"line_start":316,"line_end":316,"column_start":5,"column_end":54}},{"value":"/ an element of Fr by reducing modulo r.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":60245,"byte_end":60287,"line_start":317,"line_end":317,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":62211,"byte_end":62219,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"name":"from_raw","qualname":"<Fr>::from_raw","value":"pub const fn from_raw([u64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts from an integer represented in little endian\n into its (congruent) `Fr` representation.\n","sig":null,"attributes":[{"value":"/ Converts from an integer represented in little endian","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":62086,"byte_end":62143,"line_start":354,"line_end":354,"column_start":5,"column_end":62}},{"value":"/ into its (congruent) `Fr` representation.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":62148,"byte_end":62193,"line_start":355,"line_end":355,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":62341,"byte_end":62347,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"square","qualname":"<Fr>::square","value":"pub const fn square(&Self) -> Fr","parent":null,"children":[],"decl_id":null,"docs":" Squares this element.\n","sig":null,"attributes":[{"value":"/ Squares this element.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":62284,"byte_end":62309,"line_start":360,"line_end":360,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":62314,"byte_end":62323,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63656,"byte_end":63662,"line_start":396,"line_end":396,"column_start":12,"column_end":18},"name":"random","qualname":"<Fr>::random","value":"pub fn random<T>(&mut T) -> Fr where T: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Generate a valid Scalar choosen uniformly using user-\n provided rng.","sig":null,"attributes":[{"value":"/ Generate a valid Scalar choosen uniformly using user-","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63486,"byte_end":63543,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/ provided rng.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63548,"byte_end":63565,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63570,"byte_end":63573,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ By `rng` we mean any Rng that implements: `Rng` + `CryptoRng`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63578,"byte_end":63644,"line_start":395,"line_end":395,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63925,"byte_end":63929,"line_start":407,"line_end":407,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Fr>::sqrt","value":"pub fn sqrt(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root of this element, if it exists.\n","sig":null,"attributes":[{"value":"/ Computes the square root of this element, if it exists.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":63854,"byte_end":63913,"line_start":406,"line_end":406,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":64593,"byte_end":64596,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"pow","qualname":"<Fr>::pow","value":"pub fn pow(&Self, &[u64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Exponentiates `self` by `by`, where `by` is a\n little-endian order integer exponent.\n","sig":null,"attributes":[{"value":"/ Exponentiates `self` by `by`, where `by` is a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":64486,"byte_end":64535,"line_start":425,"line_end":425,"column_start":5,"column_end":54}},{"value":"/ little-endian order integer exponent.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":64540,"byte_end":64581,"line_start":426,"line_end":426,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65248,"byte_end":65259,"line_start":446,"line_end":446,"column_start":12,"column_end":23},"name":"pow_vartime","qualname":"<Fr>::pow_vartime","value":"pub fn pow_vartime(&Self, &[u64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Exponentiates `self` by `by`, where `by` is a\n little-endian order integer exponent.","sig":null,"attributes":[{"value":"/ Exponentiates `self` by `by`, where `by` is a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":64972,"byte_end":65021,"line_start":440,"line_end":440,"column_start":5,"column_end":54}},{"value":"/ little-endian order integer exponent.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65026,"byte_end":65067,"line_start":441,"line_end":441,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65072,"byte_end":65075,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ **This operation is variable time with respect","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65080,"byte_end":65130,"line_start":443,"line_end":443,"column_start":5,"column_end":55}},{"value":"/ to the exponent.** If the exponent is fixed,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65135,"byte_end":65183,"line_start":444,"line_end":444,"column_start":5,"column_end":53}},{"value":"/ this operation is effectively constant time.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65188,"byte_end":65236,"line_start":445,"line_end":445,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65693,"byte_end":65699,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"invert","qualname":"<Fr>::invert","value":"pub fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the multiplicative inverse of this element,\n failing if the element is zero.\n","sig":null,"attributes":[{"value":"/ Computes the multiplicative inverse of this element,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65585,"byte_end":65641,"line_start":460,"line_end":460,"column_start":5,"column_end":61}},{"value":"/ failing if the element is zero.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":65646,"byte_end":65681,"line_start":461,"line_end":461,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":70941,"byte_end":70944,"line_start":615,"line_end":615,"column_start":18,"column_end":21},"name":"mul","qualname":"<Fr>::mul","value":"pub const fn mul(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies this element by another element\n","sig":null,"attributes":[{"value":"/ Multiplies this element by another element","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":70863,"byte_end":70909,"line_start":613,"line_end":613,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":70914,"byte_end":70923,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":72145,"byte_end":72148,"line_start":643,"line_end":643,"column_start":18,"column_end":21},"name":"sub","qualname":"<Fr>::sub","value":"pub const fn sub(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another element from this element.\n","sig":null,"attributes":[{"value":"/ Subtracts another element from this element.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":72065,"byte_end":72113,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":72118,"byte_end":72127,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":72972,"byte_end":72975,"line_start":662,"line_end":662,"column_start":18,"column_end":21},"name":"add","qualname":"<Fr>::add","value":"pub const fn add(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds this element to another element.\n","sig":null,"attributes":[{"value":"/ Adds this element to another element.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":72899,"byte_end":72940,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":72945,"byte_end":72954,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":73452,"byte_end":73455,"line_start":675,"line_end":675,"column_start":18,"column_end":21},"name":"neg","qualname":"<Fr>::neg","value":"pub const fn neg(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":73395,"byte_end":73420,"line_start":673,"line_end":673,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":73425,"byte_end":73434,"line_start":674,"line_end":674,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74375,"byte_end":74381,"line_start":694,"line_end":694,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Fr>::reduce","value":"pub fn reduce(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Reduces bit representation of numbers, such that\n they can be evaluated in terms of the least significant bit.\n","sig":null,"attributes":[{"value":"/ Reduces bit representation of numbers, such that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74242,"byte_end":74294,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/ they can be evaluated in terms of the least significant bit.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74299,"byte_end":74363,"line_start":693,"line_end":693,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74594,"byte_end":74601,"line_start":701,"line_end":701,"column_start":12,"column_end":19},"name":"is_even","qualname":"<Fr>::is_even","value":"pub fn is_even(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Evaluate if a `Scalar, from Fr` is even or not.\n","sig":null,"attributes":[{"value":"/ Evaluate if a `Scalar, from Fr` is even or not.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74531,"byte_end":74582,"line_start":700,"line_end":700,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74840,"byte_end":74851,"line_start":711,"line_end":711,"column_start":12,"column_end":23},"name":"mod_2_pow_k","qualname":"<Fr>::mod_2_pow_k","value":"pub fn mod_2_pow_k(&Self, u8) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Compute the result from `Scalar (mod 2^k)`.","sig":null,"attributes":[{"value":"/ Compute the result from `Scalar (mod 2^k)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74657,"byte_end":74704,"line_start":705,"line_end":705,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74709,"byte_end":74712,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74717,"byte_end":74729,"line_start":707,"line_end":707,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74734,"byte_end":74737,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ If the given k is > 32 (5 bits) as the value gets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74742,"byte_end":74795,"line_start":709,"line_end":709,"column_start":5,"column_end":58}},{"value":"/ greater than the limb.  ","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74800,"byte_end":74828,"line_start":710,"line_end":710,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75122,"byte_end":75134,"line_start":721,"line_end":721,"column_start":12,"column_end":24},"name":"mods_2_pow_k","qualname":"<Fr>::mods_2_pow_k","value":"pub fn mods_2_pow_k(&Self, u8) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Compute the result from `Scalar (mods k)`.","sig":null,"attributes":[{"value":"/ Compute the result from `Scalar (mods k)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74928,"byte_end":74974,"line_start":715,"line_end":715,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74979,"byte_end":74982,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":74987,"byte_end":74999,"line_start":717,"line_end":717,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75004,"byte_end":75007,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ If the given `k > 32 (5 bits)` || `k == 0` as the value gets","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75012,"byte_end":75076,"line_start":719,"line_end":719,"column_start":5,"column_end":69}},{"value":"/ greater than the limb.   ","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75081,"byte_end":75110,"line_start":720,"line_end":720,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75541,"byte_end":75561,"line_start":734,"line_end":734,"column_start":12,"column_end":32},"name":"compute_windowed_naf","qualname":"<Fr>::compute_windowed_naf","value":"pub fn compute_windowed_naf(&Self, u8) -> [i8; ]","parent":null,"children":[],"decl_id":null,"docs":" Computes the windowed-non-adjacent for a\n given an element in the JubJub Scalar field.\n","sig":null,"attributes":[{"value":"/ Computes the windowed-non-adjacent for a","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75432,"byte_end":75476,"line_start":732,"line_end":732,"column_start":5,"column_end":49}},{"value":"/ given an element in the JubJub Scalar field.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":75481,"byte_end":75529,"line_start":733,"line_end":733,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":223},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"elgamal","qualname":"::elgamal","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":253},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":290}],"decl_id":null,"docs":" Implementation of ElGamal encryption scheme with JubJub\n","sig":null,"attributes":[{"value":"/ Implementation of ElGamal encryption scheme with JubJub","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1764,"byte_end":1823,"line_start":52,"line_end":52,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88922,"byte_end":88935,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"ElgamalCipher","qualname":"::elgamal::ElgamalCipher","value":"ElgamalCipher {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"decl_id":null,"docs":" Tuple for assymetric encryption using ElGamal algorithm.","sig":null,"attributes":[{"value":"/ Tuple for assymetric encryption using ElGamal algorithm.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86761,"byte_end":86821,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86822,"byte_end":86825,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86826,"byte_end":86840,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86841,"byte_end":86844,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86845,"byte_end":86856,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ use dusk_jubjub::elgamal::ElgamalCipher;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86857,"byte_end":86901,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ use dusk_jubjub::{JubJubScalar, GENERATOR_EXTENDED};","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86902,"byte_end":86958,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86959,"byte_end":86962,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86963,"byte_end":86978,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/     // Bob's (sender) secret and message","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":86979,"byte_end":87023,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/     let bob_secret = JubJubScalar::random(&mut rand::thread_rng());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87024,"byte_end":87095,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/     let message = JubJubScalar::random(&mut rand::thread_rng());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87096,"byte_end":87164,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/     let message = GENERATOR_EXTENDED * message;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87165,"byte_end":87216,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87217,"byte_end":87220,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // Alice's (receiver) secret and public","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87221,"byte_end":87268,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/     let alice_secret = JubJubScalar::random(&mut rand::thread_rng());","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87269,"byte_end":87342,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/     let alice_public = GENERATOR_EXTENDED * alice_secret;","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87343,"byte_end":87404,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87405,"byte_end":87408,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     let cipher = ElgamalCipher::encrypt(","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87409,"byte_end":87453,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/         &bob_secret,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87454,"byte_end":87478,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/         &alice_public,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87479,"byte_end":87505,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/         &GENERATOR_EXTENDED,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87506,"byte_end":87538,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/         &message,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87539,"byte_end":87560,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/     );","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87561,"byte_end":87571,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/     let decrypt = cipher.decrypt(&alice_secret);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87572,"byte_end":87624,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87625,"byte_end":87628,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(message, decrypt);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87629,"byte_end":87666,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87667,"byte_end":87672,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87673,"byte_end":87680,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87681,"byte_end":87684,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ 1. Let `p` and `G = α` be defined by the parameters of JubJub.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87685,"byte_end":87752,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ 2. Let `a` be Alice's secret, and `A = G · a`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87753,"byte_end":87803,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ 3. Let `b` be Bob's secret, and `B = G · b`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87804,"byte_end":87852,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87853,"byte_end":87856,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #### Encryption","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87857,"byte_end":87876,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/ Bob should do the following:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87877,"byte_end":87909,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87910,"byte_end":87913,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ 1. Obtain Alice’s authentic public key `A`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87914,"byte_end":87963,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ 2. Represent the message `M` as a point of JubJub defined such as `M = G ·m`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":87964,"byte_end":88045,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ where `m` is a scalar in `JubJubScalar`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88046,"byte_end":88090,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ 3. Compute `γ = G · b` and `δ = M + (A ·b)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88091,"byte_end":88143,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ 4. Send the ciphertext `c = (γ; δ)` to Alice.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88144,"byte_end":88195,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88196,"byte_end":88199,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #### Decryption","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88200,"byte_end":88219,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/ To recover plaintext `M` from `c`, Alice should do the following:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88220,"byte_end":88289,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88290,"byte_end":88293,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Recover `M` by computing `δ - γ · a`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88294,"byte_end":88341,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88342,"byte_end":88345,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ #### Homomorphism","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88346,"byte_end":88367,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/ A function `f` is homomorphic when `f(a · b) = f(a) · f(b)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88368,"byte_end":88434,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88435,"byte_end":88438,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This implementation extends the homomorphic property of ElGamal to addition,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88439,"byte_end":88519,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ subtraction and multiplication.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88520,"byte_end":88555,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88556,"byte_end":88559,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The addition and subtraction are homomorphic with other [`ElgamalCipher`]","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88560,"byte_end":88637,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ structures.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88638,"byte_end":88653,"line_start":60,"line_end":60,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88654,"byte_end":88657,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The multiplication is homomorphic with [`JubJubScalar`] scalars.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88658,"byte_end":88726,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88727,"byte_end":88730,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Being `E` the encrypt and `D` the decrypt functions, here follows an","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88731,"byte_end":88803,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ example: `D{E[x * (a + b)]} == D{x * [E(a) + E(b)]}`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":88804,"byte_end":88860,"line_start":65,"line_end":65,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89065,"byte_end":89068,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<ElgamalCipher>::new","value":"pub fn new(JubJubExtended, JubJubExtended) -> Self","parent":null,"children":[],"decl_id":null,"docs":" [`ElgamalCipher`] constructor\n","sig":null,"attributes":[{"value":"/ [`ElgamalCipher`] constructor","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89020,"byte_end":89053,"line_start":73,"line_end":73,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89213,"byte_end":89218,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"gamma","qualname":"<ElgamalCipher>::gamma","value":"pub fn gamma(&Self) -> &JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Getter for the gamma public key\n","sig":null,"attributes":[{"value":"/ Getter for the gamma public key","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89166,"byte_end":89201,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89325,"byte_end":89330,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"delta","qualname":"<ElgamalCipher>::delta","value":"pub fn delta(&Self) -> &JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Getter for the delta ciphertext\n","sig":null,"attributes":[{"value":"/ Getter for the delta ciphertext","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89278,"byte_end":89313,"line_start":83,"line_end":83,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89532,"byte_end":89539,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"encrypt","qualname":"<ElgamalCipher>::encrypt","value":"pub fn encrypt(&JubJubScalar, &JubJubExtended, &JubJubExtended,\n               &JubJubExtended) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uses assymetric encryption to return a cipher construction.","sig":null,"attributes":[{"value":"/ Uses assymetric encryption to return a cipher construction.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89390,"byte_end":89453,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89458,"byte_end":89461,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The decryption will expect the secret of `public`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89466,"byte_end":89520,"line_start":90,"line_end":90,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89886,"byte_end":89893,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"decrypt","qualname":"<ElgamalCipher>::decrypt","value":"pub fn decrypt(&Self, &JubJubScalar) -> JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Perform the decryption with the provided secret.\n","sig":null,"attributes":[{"value":"/ Perform the decryption with the provided secret.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89822,"byte_end":89874,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":90043,"byte_end":90051,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<ElgamalCipher>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the cipher into bytes\n","sig":null,"attributes":[{"value":"/ Serialize the cipher into bytes","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89996,"byte_end":90031,"line_start":108,"line_end":108,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":90484,"byte_end":90494,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<ElgamalCipher>::from_bytes","value":"pub fn from_bytes([u8; ]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize from a [`ElgamalCipher::to_bytes`] construction\n","sig":null,"attributes":[{"value":"/ Deserialize from a [`ElgamalCipher::to_bytes`] construction","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":90409,"byte_end":90472,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1970,"byte_end":1976,"line_start":61,"line_end":61,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::Scalar","value":"Fr","parent":null,"children":[],"decl_id":null,"docs":" A better name than Fr.\n","sig":null,"attributes":[{"value":"/ A better name than Fr.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1934,"byte_end":1960,"line_start":60,"line_end":60,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2337,"byte_end":2349,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"JubJubAffine","qualname":"::JubJubAffine","value":"JubJubAffine {  }","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"decl_id":null,"docs":" This represents a Jubjub point in the affine `(x, y)`\n coordinates.\n","sig":null,"attributes":[{"value":"/ This represents a Jubjub point in the affine `(x, y)`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2175,"byte_end":2232,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ coordinates.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2233,"byte_end":2249,"line_start":69,"line_end":69,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":314},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3725,"byte_end":3734,"line_start":122,"line_end":122,"column_start":11,"column_end":20},"name":"GENERATOR","qualname":"::GENERATOR","value":"JubJubAffine","parent":null,"children":[],"decl_id":null,"docs":" Use a fixed generator point.\n The point is then reduced according to the prime field. We need only to\n state the coordinates, so users can exploit its properties\n which are proven by tests, checking:\n - It lies on the curve,\n - Is of prime order,\n - Is not the identity point.\n Using:\n     x = 0x3fd2814c43ac65a6f1fbf02d0fd6cce62e3ebb21fd6c54ed4df7b7ffec7beaca\n","sig":null,"attributes":[{"value":"/ Use a fixed generator point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3247,"byte_end":3279,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/ The point is then reduced according to the prime field. We need only to","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3280,"byte_end":3355,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/ state the coordinates, so users can exploit its properties","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3356,"byte_end":3418,"line_start":114,"line_end":114,"column_start":1,"column_end":63}},{"value":"/ which are proven by tests, checking:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3419,"byte_end":3459,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/ - It lies on the curve,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3460,"byte_end":3487,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/ - Is of prime order,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3488,"byte_end":3512,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/ - Is not the identity point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3513,"byte_end":3545,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"/ Using:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3546,"byte_end":3556,"line_start":119,"line_end":119,"column_start":1,"column_end":11}},{"value":"/     x = 0x3fd2814c43ac65a6f1fbf02d0fd6cce62e3ebb21fd6c54ed4df7b7ffec7beaca","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":3557,"byte_end":3635,"line_start":120,"line_end":120,"column_start":1,"column_end":79}}]},{"kind":"Const","id":{"krate":0,"index":315},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4117,"byte_end":4135,"line_start":138,"line_end":138,"column_start":11,"column_end":29},"name":"GENERATOR_EXTENDED","qualname":"::GENERATOR_EXTENDED","value":"JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" [`GENERATOR`] in [`JubJubExtended`] form\n","sig":null,"attributes":[{"value":"/ [`GENERATOR`] in [`JubJubExtended`] form","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4062,"byte_end":4106,"line_start":137,"line_end":137,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":316},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4697,"byte_end":4711,"line_start":152,"line_end":152,"column_start":11,"column_end":25},"name":"GENERATOR_NUMS","qualname":"::GENERATOR_NUMS","value":"JubJubAffine","parent":null,"children":[],"decl_id":null,"docs":" GENERATOR NUMS which is obtained following the specs in:\n https://app.gitbook.com/@dusk-network/s/specs/specifications/poseidon/pedersen-commitment-scheme\n The counter = 18 and the hash function used to compute it was blake2b\n Using:\n     x = 0x5e67b8f316f414f7bd9514c773fd4456931e316a39fe4541921710179df76377\n","sig":null,"attributes":[{"value":"/ GENERATOR NUMS which is obtained following the specs in:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4282,"byte_end":4342,"line_start":146,"line_end":146,"column_start":1,"column_end":61}},{"value":"/ https://app.gitbook.com/@dusk-network/s/specs/specifications/poseidon/pedersen-commitment-scheme","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4343,"byte_end":4443,"line_start":147,"line_end":147,"column_start":1,"column_end":101}},{"value":"/ The counter = 18 and the hash function used to compute it was blake2b","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4444,"byte_end":4517,"line_start":148,"line_end":148,"column_start":1,"column_end":74}},{"value":"/ Using:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4518,"byte_end":4528,"line_start":149,"line_end":149,"column_start":1,"column_end":11}},{"value":"/     x = 0x5e67b8f316f414f7bd9514c773fd4456931e316a39fe4541921710179df76377","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":4529,"byte_end":4607,"line_start":150,"line_end":150,"column_start":1,"column_end":79}}]},{"kind":"Const","id":{"krate":0,"index":317},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5105,"byte_end":5128,"line_start":168,"line_end":168,"column_start":11,"column_end":34},"name":"GENERATOR_NUMS_EXTENDED","qualname":"::GENERATOR_NUMS_EXTENDED","value":"JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" [`GENERATOR_NUMS`] in [`JubJubExtended`] form\n","sig":null,"attributes":[{"value":"/ [`GENERATOR_NUMS`] in [`JubJubExtended`] form","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5045,"byte_end":5094,"line_start":167,"line_end":167,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":6124,"byte_end":6138,"line_start":195,"line_end":195,"column_start":12,"column_end":26},"name":"JubJubExtended","qualname":"::JubJubExtended","value":"JubJubExtended {  }","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"decl_id":null,"docs":" This represents an extended point `(X, Y, Z, T1, T2)`\n with `Z` nonzero, corresponding to the affine point\n `(X/Z, Y/Z)`. We always have `T1 * T2 = XY/Z`.","sig":null,"attributes":[{"value":"/ This represents an extended point `(X, Y, Z, T1, T2)`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5555,"byte_end":5612,"line_start":182,"line_end":182,"column_start":1,"column_end":58}},{"value":"/ with `Z` nonzero, corresponding to the affine point","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5613,"byte_end":5668,"line_start":183,"line_end":183,"column_start":1,"column_end":56}},{"value":"/ `(X/Z, Y/Z)`. We always have `T1 * T2 = XY/Z`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5669,"byte_end":5719,"line_start":184,"line_end":184,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5720,"byte_end":5723,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ You can do the following things with a point in this","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5724,"byte_end":5780,"line_start":186,"line_end":186,"column_start":1,"column_end":57}},{"value":"/ form:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5781,"byte_end":5790,"line_start":187,"line_end":187,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5791,"byte_end":5794,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ * Convert it into a point in the affine form.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5795,"byte_end":5844,"line_start":189,"line_end":189,"column_start":1,"column_end":50}},{"value":"/ * Add it to an `JubJubExtended`, `AffineNielsPoint` or `ExtendedNielsPoint`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5845,"byte_end":5925,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ * Double it using `double()`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5926,"byte_end":5959,"line_start":191,"line_end":191,"column_start":1,"column_end":34}},{"value":"/ * Compare it with another extended point using `PartialEq` or `ct_eq()`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":5960,"byte_end":6036,"line_start":192,"line_end":192,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":9125,"byte_end":9141,"line_start":293,"line_end":293,"column_start":12,"column_end":28},"name":"AffineNielsPoint","qualname":"::AffineNielsPoint","value":"AffineNielsPoint {  }","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":" This is a pre-processed version of an affine point `(x, y)`\n in the form `(y + x, y - x, x * y * 2d)`. This can be added to an\n [`JubJubExtended`](crate::JubJubExtended).\n","sig":null,"attributes":[{"value":"/ This is a pre-processed version of an affine point `(x, y)`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":8903,"byte_end":8966,"line_start":289,"line_end":289,"column_start":1,"column_end":64}},{"value":"/ in the form `(y + x, y - x, x * y * 2d)`. This can be added to an","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":8967,"byte_end":9036,"line_start":290,"line_end":290,"column_start":1,"column_end":70}},{"value":"/ [`JubJubExtended`](crate::JubJubExtended).","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":9037,"byte_end":9083,"line_start":291,"line_end":291,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":9324,"byte_end":9332,"line_start":301,"line_end":301,"column_start":18,"column_end":26},"name":"identity","qualname":"<AffineNielsPoint>::identity","value":"pub const fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs this point from the neutral element `(0, 1)`.\n","sig":null,"attributes":[{"value":"/ Constructs this point from the neutral element `(0, 1)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":9246,"byte_end":9306,"line_start":300,"line_end":300,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":10452,"byte_end":10465,"line_start":338,"line_end":338,"column_start":12,"column_end":25},"name":"multiply_bits","qualname":"<AffineNielsPoint>::multiply_bits","value":"pub fn multiply_bits(&Self, &[u8; ]) -> JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Multiplies this point by the specific little-endian bit pattern in the\n given byte array, ignoring the highest four bits.\n","sig":null,"attributes":[{"value":"/ Multiplies this point by the specific little-endian bit pattern in the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":10308,"byte_end":10382,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ given byte array, ignoring the highest four bits.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":10387,"byte_end":10440,"line_start":337,"line_end":337,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":574},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":11520,"byte_end":11538,"line_start":374,"line_end":374,"column_start":12,"column_end":30},"name":"ExtendedNielsPoint","qualname":"::ExtendedNielsPoint","value":"ExtendedNielsPoint {  }","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" This is a pre-processed version of an extended point `(X, Y, Z, T1, T2)`\n in the form `(Y + X, Y - X, Z, T1 * T2 * 2d)`.\n","sig":null,"attributes":[{"value":"/ This is a pre-processed version of an extended point `(X, Y, Z, T1, T2)`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":11351,"byte_end":11427,"line_start":371,"line_end":371,"column_start":1,"column_end":77}},{"value":"/ in the form `(Y + X, Y - X, Z, T1 * T2 * 2d)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":11428,"byte_end":11478,"line_start":372,"line_end":372,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":12356,"byte_end":12364,"line_start":402,"line_end":402,"column_start":18,"column_end":26},"name":"identity","qualname":"<ExtendedNielsPoint>::identity","value":"pub const fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs this point from the neutral element `(0, 1)`.\n","sig":null,"attributes":[{"value":"/ Constructs this point from the neutral element `(0, 1)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":12278,"byte_end":12338,"line_start":401,"line_end":401,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":13523,"byte_end":13536,"line_start":440,"line_end":440,"column_start":12,"column_end":25},"name":"multiply_bits","qualname":"<ExtendedNielsPoint>::multiply_bits","value":"pub fn multiply_bits(&Self, &[u8; ]) -> JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Multiplies this point by the specific little-endian bit pattern in the\n given byte array, ignoring the highest four bits.\n","sig":null,"attributes":[{"value":"/ Multiplies this point by the specific little-endian bit pattern in the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":13379,"byte_end":13453,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ given byte array, ignoring the highest four bits.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":13458,"byte_end":13511,"line_start":439,"line_end":439,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":364},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":13916,"byte_end":13925,"line_start":456,"line_end":456,"column_start":11,"column_end":20},"name":"EDWARDS_D","qualname":"::EDWARDS_D","value":"BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" `d = -(10240/10241)`\n","sig":null,"attributes":[{"value":"/ `d = -(10240/10241)`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":13881,"byte_end":13905,"line_start":455,"line_end":455,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":365},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14090,"byte_end":14100,"line_start":464,"line_end":464,"column_start":11,"column_end":21},"name":"EDWARDS_D2","qualname":"::EDWARDS_D2","value":"BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" `2*EDWARDS_D`\n","sig":null,"attributes":[{"value":"/ `2*EDWARDS_D`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14062,"byte_end":14079,"line_start":463,"line_end":463,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14323,"byte_end":14331,"line_start":473,"line_end":473,"column_start":18,"column_end":26},"name":"identity","qualname":"<JubJubAffine>::identity","value":"pub const fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs the neutral element `(0, 1)`.\n","sig":null,"attributes":[{"value":"/ Constructs the neutral element `(0, 1)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14261,"byte_end":14305,"line_start":472,"line_end":472,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14547,"byte_end":14562,"line_start":482,"line_end":482,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<JubJubAffine>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Multiplies this point by the cofactor, producing an\n `JubJubExtended`\n","sig":null,"attributes":[{"value":"/ Multiplies this point by the cofactor, producing an","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14455,"byte_end":14510,"line_start":480,"line_end":480,"column_start":5,"column_end":60}},{"value":"/ `JubJubExtended`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14515,"byte_end":14535,"line_start":481,"line_end":481,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14714,"byte_end":14728,"line_start":487,"line_end":487,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<JubJubAffine>::is_small_order","value":"pub fn is_small_order(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is of small order.\n","sig":null,"attributes":[{"value":"/ Determines if this point is of small order.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14655,"byte_end":14702,"line_start":486,"line_end":486,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14915,"byte_end":14930,"line_start":493,"line_end":493,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<JubJubAffine>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is torsion free and so is\n in the prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Determines if this point is torsion free and so is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14812,"byte_end":14866,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ in the prime order subgroup.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14871,"byte_end":14903,"line_start":492,"line_end":492,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15287,"byte_end":15301,"line_start":501,"line_end":501,"column_start":12,"column_end":26},"name":"is_prime_order","qualname":"<JubJubAffine>::is_prime_order","value":"pub fn is_prime_order(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is prime order, or in other words that\n the smallest scalar multiplied by this point that produces the\n identity is `r`. This is equivalent to checking that the point\n is both torsion free and not the identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is prime order, or in other words that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15015,"byte_end":15082,"line_start":497,"line_end":497,"column_start":5,"column_end":72}},{"value":"/ the smallest scalar multiplied by this point that produces the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15087,"byte_end":15153,"line_start":498,"line_end":498,"column_start":5,"column_end":71}},{"value":"/ identity is `r`. This is equivalent to checking that the point","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15158,"byte_end":15224,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/ is both torsion free and not the identity.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15229,"byte_end":15275,"line_start":500,"line_end":500,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15514,"byte_end":15522,"line_start":507,"line_end":507,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<JubJubAffine>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Converts this element into its byte representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its byte representation.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15447,"byte_end":15502,"line_start":506,"line_end":506,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15918,"byte_end":15928,"line_start":521,"line_end":521,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<JubJubAffine>::from_bytes","value":"pub fn from_bytes([u8; ]) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to interpret a byte representation of an\n affine point, failing if the element is not on\n the curve or non-canonical.\n","sig":null,"attributes":[{"value":"/ Attempts to interpret a byte representation of an","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15762,"byte_end":15815,"line_start":518,"line_end":518,"column_start":5,"column_end":58}},{"value":"/ affine point, failing if the element is not on","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15820,"byte_end":15870,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/ the curve or non-canonical.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":15875,"byte_end":15906,"line_start":520,"line_end":520,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17451,"byte_end":17456,"line_start":561,"line_end":561,"column_start":12,"column_end":17},"name":"get_x","qualname":"<JubJubAffine>::get_x","value":"pub fn get_x(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `x`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `x`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17394,"byte_end":17439,"line_start":560,"line_end":560,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17562,"byte_end":17567,"line_start":566,"line_end":566,"column_start":12,"column_end":17},"name":"get_y","qualname":"<JubJubAffine>::get_y","value":"pub fn get_y(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `y`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `y`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17505,"byte_end":17550,"line_start":565,"line_end":565,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17743,"byte_end":17751,"line_start":572,"line_end":572,"column_start":18,"column_end":26},"name":"to_niels","qualname":"<JubJubAffine>::to_niels","value":"pub const fn to_niels(&Self) -> AffineNielsPoint","parent":null,"children":[],"decl_id":null,"docs":" Performs a pre-processing step that produces an `AffineNielsPoint`\n for use in multiple additions.\n","sig":null,"attributes":[{"value":"/ Performs a pre-processing step that produces an `AffineNielsPoint`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17616,"byte_end":17686,"line_start":570,"line_end":570,"column_start":5,"column_end":75}},{"value":"/ for use in multiple additions.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":17691,"byte_end":17725,"line_start":571,"line_end":571,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18146,"byte_end":18164,"line_start":582,"line_end":582,"column_start":18,"column_end":36},"name":"from_raw_unchecked","qualname":"<JubJubAffine>::from_raw_unchecked","value":"pub const fn from_raw_unchecked(BlsScalar, BlsScalar) -> JubJubAffine","parent":null,"children":[],"decl_id":null,"docs":" Constructs an JubJubAffine given `x` and `y` without checking\n that the point is on the curve.\n","sig":null,"attributes":[{"value":"/ Constructs an JubJubAffine given `x` and `y` without checking","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18023,"byte_end":18088,"line_start":580,"line_end":580,"column_start":5,"column_end":70}},{"value":"/ that the point is on the curve.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18093,"byte_end":18128,"line_start":581,"line_end":581,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18691,"byte_end":18696,"line_start":603,"line_end":603,"column_start":12,"column_end":17},"name":"get_x","qualname":"<JubJubExtended>::get_x","value":"pub fn get_x(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `x`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `x`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18634,"byte_end":18679,"line_start":602,"line_end":602,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18802,"byte_end":18807,"line_start":608,"line_end":608,"column_start":12,"column_end":17},"name":"get_y","qualname":"<JubJubExtended>::get_y","value":"pub fn get_y(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `y`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `y`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18745,"byte_end":18790,"line_start":607,"line_end":607,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18913,"byte_end":18918,"line_start":613,"line_end":613,"column_start":12,"column_end":17},"name":"get_z","qualname":"<JubJubExtended>::get_z","value":"pub fn get_z(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `z`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `z`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18856,"byte_end":18901,"line_start":612,"line_end":612,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19025,"byte_end":19031,"line_start":618,"line_end":618,"column_start":12,"column_end":18},"name":"get_t1","qualname":"<JubJubExtended>::get_t1","value":"pub fn get_t1(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `t1`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `t1`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18967,"byte_end":19013,"line_start":617,"line_end":617,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19139,"byte_end":19145,"line_start":623,"line_end":623,"column_start":12,"column_end":18},"name":"get_t2","qualname":"<JubJubExtended>::get_t2","value":"pub fn get_t2(&Self) -> BlsScalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the `t2`-coordinate of this point.\n","sig":null,"attributes":[{"value":"/ Returns the `t2`-coordinate of this point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19081,"byte_end":19127,"line_start":622,"line_end":622,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19280,"byte_end":19288,"line_start":628,"line_end":628,"column_start":18,"column_end":26},"name":"identity","qualname":"<JubJubExtended>::identity","value":"pub const fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an extended point from the neutral element `(0, 1)`.\n","sig":null,"attributes":[{"value":"/ Constructs an extended point from the neutral element `(0, 1)`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19195,"byte_end":19262,"line_start":627,"line_end":627,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19574,"byte_end":19585,"line_start":639,"line_end":639,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<JubJubExtended>::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is the identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is the identity.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19517,"byte_end":19562,"line_start":638,"line_end":638,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19845,"byte_end":19859,"line_start":647,"line_end":647,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<JubJubExtended>::is_small_order","value":"pub fn is_small_order(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is of small order.\n","sig":null,"attributes":[{"value":"/ Determines if this point is of small order.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":19786,"byte_end":19833,"line_start":646,"line_end":646,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20305,"byte_end":20320,"line_start":657,"line_end":657,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<JubJubExtended>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is torsion free and so is contained\n in the prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Determines if this point is torsion free and so is contained","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20192,"byte_end":20256,"line_start":655,"line_end":655,"column_start":5,"column_end":69}},{"value":"/ in the prime order subgroup.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20261,"byte_end":20293,"line_start":656,"line_end":656,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20678,"byte_end":20692,"line_start":665,"line_end":665,"column_start":12,"column_end":26},"name":"is_prime_order","qualname":"<JubJubExtended>::is_prime_order","value":"pub fn is_prime_order(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determines if this point is prime order, or in other words that\n the smallest scalar multiplied by this point that produces the\n identity is `r`. This is equivalent to checking that the point\n is both torsion free and not the identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is prime order, or in other words that","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20406,"byte_end":20473,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/ the smallest scalar multiplied by this point that produces the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20478,"byte_end":20544,"line_start":662,"line_end":662,"column_start":5,"column_end":71}},{"value":"/ identity is `r`. This is equivalent to checking that the point","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20549,"byte_end":20615,"line_start":663,"line_end":663,"column_start":5,"column_end":71}},{"value":"/ is both torsion free and not the identity.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20620,"byte_end":20666,"line_start":664,"line_end":664,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20838,"byte_end":20853,"line_start":670,"line_end":670,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<JubJubExtended>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Multiplies this element by the cofactor `8`.\n","sig":null,"attributes":[{"value":"/ Multiplies this element by the cofactor `8`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20778,"byte_end":20826,"line_start":669,"line_end":669,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21055,"byte_end":21063,"line_start":676,"line_end":676,"column_start":12,"column_end":20},"name":"to_niels","qualname":"<JubJubExtended>::to_niels","value":"pub fn to_niels(&Self) -> ExtendedNielsPoint","parent":null,"children":[],"decl_id":null,"docs":" Performs a pre-processing step that produces an `ExtendedNielsPoint`\n for use in multiple additions.\n","sig":null,"attributes":[{"value":"/ Performs a pre-processing step that produces an `ExtendedNielsPoint`","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":20932,"byte_end":21004,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/ for use in multiple additions.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21009,"byte_end":21043,"line_start":675,"line_end":675,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21401,"byte_end":21415,"line_start":687,"line_end":687,"column_start":12,"column_end":26},"name":"to_hash_inputs","qualname":"<JubJubExtended>::to_hash_inputs","value":"pub fn to_hash_inputs(&Self) -> [BlsScalar; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns two scalars suitable for hashing that represent the\n Extended Point.\n","sig":null,"attributes":[{"value":"/ Returns two scalars suitable for hashing that represent the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21302,"byte_end":21365,"line_start":685,"line_end":685,"column_start":5,"column_end":68}},{"value":"/ Extended Point.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21370,"byte_end":21389,"line_start":686,"line_end":686,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21823,"byte_end":21829,"line_start":697,"line_end":697,"column_start":12,"column_end":18},"name":"double","qualname":"<JubJubExtended>::double","value":"pub fn double(&Self) -> JubJubExtended","parent":null,"children":[],"decl_id":null,"docs":" Computes the doubling of a point more efficiently than a point can\n be added to itself.\n","sig":null,"attributes":[{"value":"/ Computes the doubling of a point more efficiently than a point can","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21713,"byte_end":21783,"line_start":695,"line_end":695,"column_start":5,"column_end":75}},{"value":"/ be added to itself.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":21788,"byte_end":21811,"line_start":696,"line_end":696,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31477,"byte_end":31492,"line_start":1021,"line_end":1021,"column_start":8,"column_end":23},"name":"batch_normalize","qualname":"::batch_normalize","value":"pub fn batch_normalize<'a>(&'a mut [JubJubExtended]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This takes a mutable slice of `JubJubExtended`s and \"normalizes\" them using\n only a single inversion for the entire batch. This normalization results in\n all of the points having a Z-coordinate of one. Further, an iterator is\n returned which can be used to obtain `JubJubAffine`s for each element in the\n slice.","sig":null,"attributes":[{"value":"/ This takes a mutable slice of `JubJubExtended`s and \"normalizes\" them using","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31069,"byte_end":31148,"line_start":1014,"line_end":1014,"column_start":1,"column_end":80}},{"value":"/ only a single inversion for the entire batch. This normalization results in","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31149,"byte_end":31228,"line_start":1015,"line_end":1015,"column_start":1,"column_end":80}},{"value":"/ all of the points having a Z-coordinate of one. Further, an iterator is","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31229,"byte_end":31304,"line_start":1016,"line_end":1016,"column_start":1,"column_end":76}},{"value":"/ returned which can be used to obtain `JubJubAffine`s for each element in the","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31305,"byte_end":31385,"line_start":1017,"line_end":1017,"column_start":1,"column_end":81}},{"value":"/ slice.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31386,"byte_end":31396,"line_start":1018,"line_end":1018,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31397,"byte_end":31400,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ This costs 5 multiplications per element, and a field inversion.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":31401,"byte_end":31469,"line_start":1020,"line_end":1020,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":47607,"byte_end":47611,"line_start":1571,"line_end":1571,"column_start":8,"column_end":12},"name":"dhke","qualname":"::dhke","value":"pub fn dhke(&Fr, &JubJubExtended) -> JubJubAffine","parent":null,"children":[],"decl_id":null,"docs":" Compute a shared secret `secret · public` using DHKE protocol\n","sig":null,"attributes":[{"value":"/ Compute a shared secret `secret · public` using DHKE protocol","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":47533,"byte_end":47599,"line_start":1570,"line_end":1570,"column_start":1,"column_end":66}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53302,"byte_end":53304,"line_start":30,"line_end":30,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53554,"byte_end":53556,"line_start":41,"line_end":41,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53648,"byte_end":53650,"line_start":47,"line_end":47,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53936,"byte_end":53945,"line_start":57,"line_end":57,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":54421,"byte_end":54423,"line_start":73,"line_end":73,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":54531,"byte_end":54533,"line_start":79,"line_end":79,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":54666,"byte_end":54668,"line_start":86,"line_end":86,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55050,"byte_end":55052,"line_start":97,"line_end":97,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55183,"byte_end":55185,"line_start":104,"line_end":104,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55304,"byte_end":55306,"line_start":110,"line_end":110,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55422,"byte_end":55424,"line_start":116,"line_end":116,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":56137,"byte_end":56139,"line_start":149,"line_end":149,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57286,"byte_end":57288,"line_start":217,"line_end":217,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57353,"byte_end":57355,"line_start":223,"line_end":223,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89000,"byte_end":89013,"line_start":72,"line_end":72,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91379,"byte_end":91392,"line_start":159,"line_end":159,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91511,"byte_end":91524,"line_start":167,"line_end":167,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91835,"byte_end":91848,"line_start":181,"line_end":181,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91967,"byte_end":91980,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":92469,"byte_end":92482,"line_start":211,"line_end":211,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":92616,"byte_end":92629,"line_start":217,"line_end":217,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2404,"byte_end":2416,"line_start":77,"line_end":77,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2700,"byte_end":2712,"line_start":91,"line_end":91,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2845,"byte_end":2857,"line_start":97,"line_end":97,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2986,"byte_end":2998,"line_start":103,"line_end":103,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":6260,"byte_end":6274,"line_start":203,"line_end":203,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":6650,"byte_end":6664,"line_start":215,"line_end":215,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":7138,"byte_end":7152,"line_start":227,"line_end":227,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":7261,"byte_end":7275,"line_start":233,"line_end":233,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":7719,"byte_end":7733,"line_start":251,"line_end":251,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":8131,"byte_end":8143,"line_start":265,"line_end":265,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":8785,"byte_end":8797,"line_start":283,"line_end":283,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":9223,"byte_end":9239,"line_start":299,"line_end":299,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":10839,"byte_end":10855,"line_start":353,"line_end":353,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":11666,"byte_end":11684,"line_start":381,"line_end":381,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":12253,"byte_end":12271,"line_start":400,"line_end":400,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14242,"byte_end":14254,"line_start":471,"line_end":471,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18613,"byte_end":18627,"line_start":601,"line_end":601,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":30237,"byte_end":30251,"line_start":980,"line_end":980,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":30802,"byte_end":30814,"line_start":1000,"line_end":1000,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":30941,"byte_end":30955,"line_start":1007,"line_end":1007,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":1832,"byte_end":1839,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":223}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53302,"byte_end":53304,"line_start":30,"line_end":30,"column_start":21,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53554,"byte_end":53556,"line_start":41,"line_end":41,"column_start":20,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53648,"byte_end":53650,"line_start":47,"line_end":47,"column_start":19,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":53936,"byte_end":53945,"line_start":57,"line_end":57,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":22,"index":1590},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":54421,"byte_end":54423,"line_start":73,"line_end":73,"column_start":25,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":461},"to":{"krate":17,"index":57}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":54531,"byte_end":54533,"line_start":79,"line_end":79,"column_start":20,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":54666,"byte_end":54668,"line_start":86,"line_end":86,"column_start":34,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":461},"to":{"krate":17,"index":65}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55050,"byte_end":55052,"line_start":97,"line_end":97,"column_start":23,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55183,"byte_end":55185,"line_start":104,"line_end":104,"column_start":26,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55304,"byte_end":55306,"line_start":110,"line_end":110,"column_start":21,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2578}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":55422,"byte_end":55424,"line_start":116,"line_end":116,"column_start":14,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2567}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":56137,"byte_end":56139,"line_start":149,"line_end":149,"column_start":14,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2974}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57286,"byte_end":57288,"line_start":217,"line_end":217,"column_start":18,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/fr.rs","byte_start":57353,"byte_end":57355,"line_start":223,"line_end":223,"column_start":6,"column_end":8},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":89000,"byte_end":89013,"line_start":72,"line_end":72,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91379,"byte_end":91392,"line_start":159,"line_end":159,"column_start":14,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91511,"byte_end":91524,"line_start":167,"line_end":167,"column_start":20,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2978}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91835,"byte_end":91848,"line_start":181,"line_end":181,"column_start":14,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2952}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":91967,"byte_end":91980,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":92469,"byte_end":92482,"line_start":211,"line_end":211,"column_start":34,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2986}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/elgamal.rs","byte_start":92616,"byte_end":92629,"line_start":217,"line_end":217,"column_start":42,"column_end":55},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2986}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2404,"byte_end":2416,"line_start":77,"line_end":77,"column_start":14,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2974}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2700,"byte_end":2712,"line_start":91,"line_end":91,"column_start":25,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":535},"to":{"krate":17,"index":57}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2845,"byte_end":2857,"line_start":97,"line_end":97,"column_start":20,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":2986,"byte_end":2998,"line_start":103,"line_end":103,"column_start":34,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":535},"to":{"krate":17,"index":65}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":6260,"byte_end":6274,"line_start":203,"line_end":203,"column_start":25,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":543},"to":{"krate":17,"index":57}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":6650,"byte_end":6664,"line_start":215,"line_end":215,"column_start":34,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":543},"to":{"krate":17,"index":65}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":7138,"byte_end":7152,"line_start":227,"line_end":227,"column_start":20,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":7261,"byte_end":7275,"line_start":233,"line_end":233,"column_start":14,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":2974}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":7719,"byte_end":7733,"line_start":251,"line_end":251,"column_start":29,"column_end":43},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":8131,"byte_end":8143,"line_start":265,"line_end":265,"column_start":39,"column_end":51},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":8785,"byte_end":8797,"line_start":283,"line_end":283,"column_start":31,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":9223,"byte_end":9239,"line_start":299,"line_end":299,"column_start":6,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":10839,"byte_end":10855,"line_start":353,"line_end":353,"column_start":34,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":554},"to":{"krate":17,"index":65}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":11666,"byte_end":11684,"line_start":381,"line_end":381,"column_start":34,"column_end":52},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":574},"to":{"krate":17,"index":65}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":12253,"byte_end":12271,"line_start":400,"line_end":400,"column_start":6,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":14242,"byte_end":14254,"line_start":471,"line_end":471,"column_start":6,"column_end":18},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":18613,"byte_end":18627,"line_start":601,"line_end":601,"column_start":6,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":30237,"byte_end":30251,"line_start":980,"line_end":980,"column_start":6,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":30802,"byte_end":30814,"line_start":1000,"line_end":1000,"column_start":18,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/dusk-jubjub-0.5.0/src/lib.rs","byte_start":30941,"byte_end":30955,"line_start":1007,"line_end":1007,"column_start":18,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":2858}}]}