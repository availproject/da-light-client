{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6","program":"/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","utf8","/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=8fb0a11501bd08e8","-C","extra-filename=-8fb0a11501bd08e8","--out-dir","/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","-L","dependency=/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/kroos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/kroos/Matic/pb-light/avail-rust-light-client/target/rls/debug/deps/libutf8-8fb0a11501bd08e8.rmeta"},"prelude":{"crate_id":{"name":"utf8","disambiguator":[15236078090395286678,0]},"crate_root":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src","external_crates":[{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}}],"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":0,"byte_end":6425,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":37,"byte_end":49,"line_start":4,"line_end":4,"column_start":16,"column_end":28},"alias_span":null,"name":"LossyDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":66,"byte_end":80,"line_start":5,"line_end":5,"column_start":16,"column_end":30},"alias_span":null,"name":"BufReadDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":82,"byte_end":101,"line_start":5,"line_end":5,"column_start":32,"column_end":51},"alias_span":null,"name":"BufReadDecoderError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":0,"byte_end":6425,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":16},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":112},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7258,"byte_end":7270,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"LossyDecoder","qualname":"::lossy::LossyDecoder","value":"LossyDecoder {  }","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" A push-based, lossy decoder for UTF-8.\n Errors are replaced with the U+FFFD replacement character.","sig":null,"attributes":[{"value":"/ A push-based, lossy decoder for UTF-8.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6442,"byte_end":6484,"line_start":3,"line_end":3,"column_start":1,"column_end":43}},{"value":"/ Errors are replaced with the U+FFFD replacement character.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6485,"byte_end":6547,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6548,"byte_end":6551,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Users “push” bytes into the decoder, which in turn “pushes” `&str` slices into a callback.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6552,"byte_end":6654,"line_start":6,"line_end":6,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6655,"byte_end":6658,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ For example, `String::from_utf8_lossy` (but returning `String` instead of `Cow`)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6659,"byte_end":6743,"line_start":8,"line_end":8,"column_start":1,"column_end":85}},{"value":"/ can be rewritten as:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6744,"byte_end":6768,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6769,"byte_end":6772,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6773,"byte_end":6784,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ fn string_from_utf8_lossy(input: &[u8]) -> String {","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6785,"byte_end":6840,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/     let mut string = String::new();","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6841,"byte_end":6880,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/     utf8::LossyDecoder::new(|s| string.push_str(s)).feed(input);","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6881,"byte_end":6949,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/     string","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6950,"byte_end":6964,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6965,"byte_end":6970,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6971,"byte_end":6978,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6979,"byte_end":6982,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note:** Dropping the decoder signals the end of the input:","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":6983,"byte_end":7047,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ If the last input chunk ended with an incomplete byte sequence for a code point,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7048,"byte_end":7132,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ this is an error and a replacement character is emitted.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7133,"byte_end":7193,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/ Use `std::mem::forget` to inhibit this behavior.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7194,"byte_end":7246,"line_start":22,"line_end":22,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7447,"byte_end":7450,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<LossyDecoder<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder from a callback.\n","sig":null,"attributes":[{"value":"/ Create a new decoder from a callback.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7380,"byte_end":7421,"line_start":29,"line_end":29,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7426,"byte_end":7435,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":8017,"byte_end":8021,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"feed","qualname":"<LossyDecoder<F>>::feed","value":"pub fn feed(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Feed one chunk of input into the decoder.","sig":null,"attributes":[{"value":"/ Feed one chunk of input into the decoder.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7671,"byte_end":7716,"line_start":41,"line_end":41,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7721,"byte_end":7724,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ The input is decoded lossily","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7729,"byte_end":7761,"line_start":43,"line_end":43,"column_start":5,"column_end":37}},{"value":"/ and the callback called once or more with `&str` string slices.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7766,"byte_end":7833,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7838,"byte_end":7841,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If the UTF-8 byte sequence for one code point was split into this bytes chunk","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7846,"byte_end":7927,"line_start":46,"line_end":46,"column_start":5,"column_end":86}},{"value":"/ and previous bytes chunks, it will be correctly pieced back together.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7932,"byte_end":8005,"line_start":47,"line_end":47,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9628,"byte_end":9642,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"BufReadDecoder","qualname":"::read::BufReadDecoder","value":"BufReadDecoder {  }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Wraps a `std::io::BufRead` buffered byte stream and decode it as UTF-8.\n","sig":null,"attributes":[{"value":"/ Wraps a `std::io::BufRead` buffered byte stream and decode it as UTF-8.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9541,"byte_end":9616,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":103},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10003,"byte_end":10022,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidByteSequence","qualname":"::read::BufReadDecoderError::InvalidByteSequence","value":"BufReadDecoderError::InvalidByteSequence(&'a [u8])","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Represents one UTF-8 error in the byte stream.","sig":null,"attributes":[{"value":"/ Represents one UTF-8 error in the byte stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9788,"byte_end":9838,"line_start":16,"line_end":16,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9843,"byte_end":9846,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ In lossy decoding, each such error should be replaced with U+FFFD.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9851,"byte_end":9921,"line_start":18,"line_end":18,"column_start":5,"column_end":75}},{"value":"/ (See `BufReadDecoder::next_lossy` and `BufReadDecoderError::lossy`.)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9926,"byte_end":9998,"line_start":19,"line_end":19,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":106},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10092,"byte_end":10094,"line_start":23,"line_end":23,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::BufReadDecoderError::Io","value":"BufReadDecoderError::Io(io::Error)","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" An I/O error from the underlying byte stream\n","sig":null,"attributes":[{"value":"/ An I/O error from the underlying byte stream","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10039,"byte_end":10087,"line_start":22,"line_end":22,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":101},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":9758,"byte_end":9777,"line_start":15,"line_end":15,"column_start":10,"column_end":29},"name":"BufReadDecoderError","qualname":"::read::BufReadDecoderError","value":"pub enum BufReadDecoderError<'a> {\n    InvalidByteSequence(&'a [u8]),\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10197,"byte_end":10202,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"lossy","qualname":"<BufReadDecoderError>::lossy","value":"pub fn lossy(Self) -> Result<&'static str, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Replace UTF-8 errors with U+FFFD\n","sig":null,"attributes":[{"value":"/ Replace UTF-8 errors with U+FFFD","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10149,"byte_end":10185,"line_start":27,"line_end":27,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11242,"byte_end":11262,"line_start":58,"line_end":58,"column_start":12,"column_end":32},"name":"read_to_string_lossy","qualname":"<BufReadDecoder<B>>::read_to_string_lossy","value":"pub fn read_to_string_lossy(B) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" This is to `Read::read_to_string` what `String::from_utf8_lossy` is to `String::from_utf8`.\n","sig":null,"attributes":[{"value":"/ This is to `Read::read_to_string` what `String::from_utf8_lossy` is to `String::from_utf8`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11135,"byte_end":11230,"line_start":57,"line_end":57,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11527,"byte_end":11530,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReadDecoder<B>>::new","value":"pub fn new(B) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11780,"byte_end":11790,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"next_lossy","qualname":"<BufReadDecoder<B>>::next_lossy","value":"pub fn next_lossy(&mut Self) -> Option<io::Result<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Same as `BufReadDecoder::next_strict`, but replace UTF-8 errors with U+FFFD.\n","sig":null,"attributes":[{"value":"/ Same as `BufReadDecoder::next_strict`, but replace UTF-8 errors with U+FFFD.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11688,"byte_end":11768,"line_start":75,"line_end":75,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":12328,"byte_end":12339,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"next_strict","qualname":"<BufReadDecoder<B>>::next_strict","value":"pub fn next_strict(&mut Self) -> Option<Result<&str, BufReadDecoderError>>","parent":null,"children":[],"decl_id":null,"docs":" Decode and consume the next chunk of UTF-8 input.","sig":null,"attributes":[{"value":"/ Decode and consume the next chunk of UTF-8 input.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11914,"byte_end":11967,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11972,"byte_end":11975,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be called repeatedly until it returns `None`,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11980,"byte_end":12056,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ which represents EOF from the underlying byte stream.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":12061,"byte_end":12118,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"/ This is similar to `Iterator::next`,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":12123,"byte_end":12163,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"/ except that decoded chunks borrow the decoder (~iterator)","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":12168,"byte_end":12229,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ so they need to be handled or copied before the next chunk can start decoding.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":12234,"byte_end":12316,"line_start":86,"line_end":86,"column_start":5,"column_end":87}}]},{"kind":"Const","id":{"krate":0,"index":86},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":275,"byte_end":296,"line_start":13,"line_end":13,"column_start":11,"column_end":32},"name":"REPLACEMENT_CHARACTER","qualname":"::REPLACEMENT_CHARACTER","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" The replacement character, U+FFFD. In lossy decoding, insert it for every decoding error.\n","sig":null,"attributes":[{"value":"/ The replacement character, U+FFFD. In lossy decoding, insert it for every decoding error.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":171,"byte_end":264,"line_start":12,"line_end":12,"column_start":1,"column_end":94}}]},{"kind":"StructVariant","id":{"krate":0,"index":114},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":514,"byte_end":521,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::DecodeError::Invalid","value":"DecodeError::Invalid { valid_prefix, invalid_sequence, remaining_input }","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" In lossy decoding insert `valid_prefix`, then `\"\\u{FFFD}\"`,\n then call `decode()` again with `remaining_input`.\n","sig":null,"attributes":[{"value":"/ In lossy decoding insert `valid_prefix`, then `\"\\u{FFFD}\"`,","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":387,"byte_end":450,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/ then call `decode()` again with `remaining_input`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":455,"byte_end":509,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":118},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":800,"byte_end":810,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::DecodeError::Incomplete","value":"DecodeError::Incomplete { valid_prefix, incomplete_suffix }","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Call the `incomplete_suffix.try_complete` method with more input when available.\n If no more input is available, this is an invalid byte sequence.\n","sig":null,"attributes":[{"value":"/ Call the `incomplete_suffix.try_complete` method with more input when available.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":638,"byte_end":722,"line_start":25,"line_end":25,"column_start":5,"column_end":89}},{"value":"/ If no more input is available, this is an invalid byte sequence.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":727,"byte_end":795,"line_start":26,"line_end":26,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":112},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":365,"byte_end":376,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::DecodeError","value":"pub enum DecodeError<'a> {\n    Invalid {\n        valid_prefix: &'a str,\n        invalid_sequence: &'a [u8],\n        remaining_input: &'a [u8],\n    },\n    Incomplete {\n        valid_prefix: &'a str,\n        incomplete_suffix: Incomplete,\n    },\n}","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":129},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":2082,"byte_end":2092,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"Incomplete","qualname":"::Incomplete","value":"Incomplete { buffer, buffer_len }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":130},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":2103,"byte_end":2109,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"buffer","qualname":"::Incomplete::buffer","value":"[u8; 4]","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":132},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":2128,"byte_end":2138,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"buffer_len","qualname":"::Incomplete::buffer_len","value":"u8","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":92},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":2154,"byte_end":2160,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"pub fn decode(&[u8]) -> Result<&str, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3091,"byte_end":3096,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"empty","qualname":"<Incomplete>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3219,"byte_end":3227,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Incomplete>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3292,"byte_end":3295,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Incomplete>::new","value":"pub fn new(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3847,"byte_end":3859,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"try_complete","qualname":"<Incomplete>::try_complete","value":"pub fn try_complete<'input>(&mut Self, &'input [u8])\n-> Option<(Result<&str, &[u8]>, &'input [u8])>","parent":null,"children":[],"decl_id":null,"docs":" * `None`: still incomplete, call `try_complete` again with more input.\n   If no more input is available, this is invalid byte sequence.\n * `Some((result, remaining_input))`: We’re done with this `Incomplete`.\n   To keep decoding, pass `remaining_input` to `decode()`.\n","sig":null,"attributes":[{"value":"/ * `None`: still incomplete, call `try_complete` again with more input.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3541,"byte_end":3615,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/   If no more input is available, this is invalid byte sequence.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3620,"byte_end":3687,"line_start":124,"line_end":124,"column_start":5,"column_end":72}},{"value":"/ * `Some((result, remaining_input))`: We’re done with this `Incomplete`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3692,"byte_end":3769,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/   To keep decoding, pass `remaining_input` to `decode()`.","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3774,"byte_end":3835,"line_start":126,"line_end":126,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7358,"byte_end":7370,"line_start":28,"line_end":28,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":9274,"byte_end":9286,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10119,"byte_end":10138,"line_start":26,"line_end":26,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10456,"byte_end":10475,"line_start":36,"line_end":36,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10846,"byte_end":10865,"line_start":47,"line_end":47,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11111,"byte_end":11125,"line_start":56,"line_end":56,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":919,"byte_end":930,"line_start":33,"line_end":33,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":2021,"byte_end":2032,"line_start":63,"line_end":63,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3067,"byte_end":3077,"line_start":101,"line_end":101,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":7358,"byte_end":7370,"line_start":28,"line_end":28,"column_start":22,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":5},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lossy.rs","byte_start":9274,"byte_end":9286,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":5},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10119,"byte_end":10138,"line_start":26,"line_end":26,"column_start":10,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10456,"byte_end":10475,"line_start":36,"line_end":36,"column_start":27,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":10846,"byte_end":10865,"line_start":47,"line_end":47,"column_start":20,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":101},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/read.rs","byte_start":11111,"byte_end":11125,"line_start":56,"line_end":56,"column_start":18,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":919,"byte_end":930,"line_start":33,"line_end":33,"column_start":27,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":2021,"byte_end":2032,"line_start":63,"line_end":63,"column_start":20,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":112},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/Users/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.6/src/lib.rs","byte_start":3067,"byte_end":3077,"line_start":101,"line_end":101,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":129},"to":{"krate":4294967295,"index":4294967295}}]}