{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8","program":"/home/kroos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=bd010fd65022cf4c","-C","extra-filename=-bd010fd65022cf4c","--out-dir","/home/kroos/matic/da-light-client/target/rls/debug/deps","-L","dependency=/home/kroos/matic/da-light-client/target/rls/debug/deps","--extern","bytes=/home/kroos/matic/da-light-client/target/rls/debug/deps/libbytes-1af1b0bdb80529c2.rmeta","--extern","futures_core=/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_core-65cfe993150441d8.rmeta","--extern","futures_sink=/home/kroos/matic/da-light-client/target/rls/debug/deps/libfutures_sink-5b3dc88208f6b9c3.rmeta","--extern","log=/home/kroos/matic/da-light-client/target/rls/debug/deps/liblog-a026ca4a371fce43.rmeta","--extern","pin_project_lite=/home/kroos/matic/da-light-client/target/rls/debug/deps/libpin_project_lite-91fe008bf6d90681.rmeta","--extern","tokio=/home/kroos/matic/da-light-client/target/rls/debug/deps/libtokio-78ffa0755a65596f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kroos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kroos/matic/da-light-client/target/rls/debug/deps/libtokio_util-bd010fd65022cf4c.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[12039293183140309084,0]},"crate_root":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src","external_crates":[{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12183244430281887400,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[8357241026203332200,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12366212805520858122,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16942624007396114565,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9146905573849924534,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3984974423095474310,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17062249482329071005,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9650074992516280531,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11294981568525771845,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2937232846550133502,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[916118139006228645,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10588692737450637690,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[6136648393888539129,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12981437011810194475,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[148412131477461657,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9709332217955803794,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10989117992165357727,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2143393700537892828,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[11382580725447476280,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":20,"id":{"name":"futures_core","disambiguator":[12492735441175144551,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[7263832051999693957,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[4149410764104114501,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[12361626427670245489,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":24,"id":{"name":"instant","disambiguator":[10533871297861593396,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[1967106275440090275,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":26,"id":{"name":"lock_api","disambiguator":[17313832574061649613,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":27,"id":{"name":"scopeguard","disambiguator":[15523100853799486295,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":28,"id":{"name":"parking_lot_core","disambiguator":[12246819619283427138,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":29,"id":{"name":"smallvec","disambiguator":[8013787763173615274,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":30,"id":{"name":"libc","disambiguator":[17227270739937170455,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":31,"id":{"name":"pin_project_lite","disambiguator":[14294970681396424519,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":32,"id":{"name":"mio","disambiguator":[17721637346149004945,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":33,"id":{"name":"log","disambiguator":[9279222388630044704,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":34,"id":{"name":"bytes","disambiguator":[550512058244518972,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":35,"id":{"name":"once_cell","disambiguator":[7153384871017013797,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":36,"id":{"name":"tokio_macros","disambiguator":[15874672019627103164,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":37,"id":{"name":"memchr","disambiguator":[17847222840850926038,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":38,"id":{"name":"num_cpus","disambiguator":[12956806617209645264,0]}},{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":39,"id":{"name":"signal_hook_registry","disambiguator":[5703611103074318093,0]}}],"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451062,"byte_end":14451072,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451111,"byte_end":14451118,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451157,"byte_end":14451164,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451326,"byte_end":14451332,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451334,"byte_end":14451345,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451393,"byte_end":14451403,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451452,"byte_end":14451463,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451525,"byte_end":14451545,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451547,"byte_end":14451572,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451621,"byte_end":14451631,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451633,"byte_end":14451648,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451713,"byte_end":14451730,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451732,"byte_end":14451754,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6717,"byte_end":6726,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6728,"byte_end":6745,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6747,"byte_end":6772,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6835,"byte_end":6845,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6892,"byte_end":6905,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6948,"byte_end":6965,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14440790,"byte_end":14440843,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14440844,"byte_end":14440847,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14440848,"byte_end":14440923,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14440924,"byte_end":14440989,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14440990,"byte_end":14440993,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14440994,"byte_end":14441074,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441075,"byte_end":14441150,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441151,"byte_end":14441199,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441200,"byte_end":14441203,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441204,"byte_end":14441227,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441228,"byte_end":14441231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441232,"byte_end":14441311,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441312,"byte_end":14441391,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441392,"byte_end":14441463,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441464,"byte_end":14441534,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441535,"byte_end":14441613,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441614,"byte_end":14441690,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441691,"byte_end":14441724,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441725,"byte_end":14441728,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441729,"byte_end":14441809,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441810,"byte_end":14441890,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441891,"byte_end":14441941,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441942,"byte_end":14441945,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441946,"byte_end":14441997,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14441998,"byte_end":14442047,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442048,"byte_end":14442099,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442100,"byte_end":14442103,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442104,"byte_end":14442169,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442170,"byte_end":14442173,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442174,"byte_end":14442251,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442252,"byte_end":14442293,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442294,"byte_end":14442297,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442298,"byte_end":14442378,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442379,"byte_end":14442458,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442459,"byte_end":14442537,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442538,"byte_end":14442617,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442618,"byte_end":14442632,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442633,"byte_end":14442636,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442637,"byte_end":14442716,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442717,"byte_end":14442796,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442797,"byte_end":14442814,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442815,"byte_end":14442818,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442819,"byte_end":14442896,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442897,"byte_end":14442976,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14442977,"byte_end":14443054,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443055,"byte_end":14443125,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443126,"byte_end":14443175,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443176,"byte_end":14443179,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443180,"byte_end":14443193,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443194,"byte_end":14443226,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443227,"byte_end":14443294,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443295,"byte_end":14443409,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443410,"byte_end":14443447,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443448,"byte_end":14443509,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443510,"byte_end":14443559,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443560,"byte_end":14443563,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443564,"byte_end":14443605,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443606,"byte_end":14443616,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443617,"byte_end":14443701,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443702,"byte_end":14443758,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443759,"byte_end":14443762,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443763,"byte_end":14443784,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443785,"byte_end":14443852,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443853,"byte_end":14443881,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443882,"byte_end":14443895,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443896,"byte_end":14443914,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443915,"byte_end":14443924,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443925,"byte_end":14443928,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443929,"byte_end":14443988,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14443989,"byte_end":14444013,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444014,"byte_end":14444023,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444024,"byte_end":14444029,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444030,"byte_end":14444038,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444039,"byte_end":14444046,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444047,"byte_end":14444121,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444122,"byte_end":14444125,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444126,"byte_end":14444148,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444149,"byte_end":14444152,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444153,"byte_end":14444230,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444231,"byte_end":14444307,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444308,"byte_end":14444387,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444388,"byte_end":14444442,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444443,"byte_end":14444446,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444447,"byte_end":14444491,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444492,"byte_end":14444499,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444500,"byte_end":14444535,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444536,"byte_end":14444567,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444568,"byte_end":14444571,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444572,"byte_end":14444601,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444602,"byte_end":14444605,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444606,"byte_end":14444645,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444646,"byte_end":14444649,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444650,"byte_end":14444688,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444689,"byte_end":14444716,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444717,"byte_end":14444753,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444754,"byte_end":14444757,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444758,"byte_end":14444776,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444777,"byte_end":14444799,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444800,"byte_end":14444830,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444831,"byte_end":14444885,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444886,"byte_end":14444916,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444917,"byte_end":14444974,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14444975,"byte_end":14445007,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445008,"byte_end":14445021,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445022,"byte_end":14445025,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445026,"byte_end":14445060,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445061,"byte_end":14445105,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445106,"byte_end":14445158,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445159,"byte_end":14445226,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445227,"byte_end":14445230,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445231,"byte_end":14445305,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445306,"byte_end":14445372,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445373,"byte_end":14445402,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445403,"byte_end":14445450,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445451,"byte_end":14445503,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445504,"byte_end":14445575,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445576,"byte_end":14445595,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445596,"byte_end":14445609,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445610,"byte_end":14445613,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445614,"byte_end":14445653,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445654,"byte_end":14445709,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445710,"byte_end":14445728,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445729,"byte_end":14445805,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445806,"byte_end":14445872,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445873,"byte_end":14445925,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445926,"byte_end":14445929,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14445930,"byte_end":14446010,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446011,"byte_end":14446036,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446037,"byte_end":14446069,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446070,"byte_end":14446083,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446084,"byte_end":14446087,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446088,"byte_end":14446160,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446161,"byte_end":14446187,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446188,"byte_end":14446239,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446240,"byte_end":14446276,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446277,"byte_end":14446280,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446281,"byte_end":14446359,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446360,"byte_end":14446403,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446404,"byte_end":14446451,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446452,"byte_end":14446488,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446489,"byte_end":14446533,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446534,"byte_end":14446590,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446591,"byte_end":14446639,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446640,"byte_end":14446662,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446663,"byte_end":14446681,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446682,"byte_end":14446695,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446696,"byte_end":14446705,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446706,"byte_end":14446711,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446712,"byte_end":14446719,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446720,"byte_end":14446723,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446724,"byte_end":14446747,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446748,"byte_end":14446751,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446752,"byte_end":14446830,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446831,"byte_end":14446904,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446905,"byte_end":14446981,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14446982,"byte_end":14447062,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447063,"byte_end":14447079,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447080,"byte_end":14447083,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447084,"byte_end":14447164,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447165,"byte_end":14447244,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447245,"byte_end":14447325,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447326,"byte_end":14447398,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447399,"byte_end":14447402,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447403,"byte_end":14447480,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447481,"byte_end":14447559,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447560,"byte_end":14447633,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447634,"byte_end":14447700,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447701,"byte_end":14447704,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447705,"byte_end":14447718,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447719,"byte_end":14447752,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447753,"byte_end":14447787,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447788,"byte_end":14447825,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447826,"byte_end":14447893,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447894,"byte_end":14447929,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447930,"byte_end":14447991,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14447992,"byte_end":14448038,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448039,"byte_end":14448100,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448101,"byte_end":14448104,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448105,"byte_end":14448133,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448134,"byte_end":14448137,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448138,"byte_end":14448179,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448180,"byte_end":14448190,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448191,"byte_end":14448215,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448216,"byte_end":14448290,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448291,"byte_end":14448333,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448334,"byte_end":14448348,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448349,"byte_end":14448406,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448407,"byte_end":14448456,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448457,"byte_end":14448471,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448472,"byte_end":14448509,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448510,"byte_end":14448561,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448562,"byte_end":14448608,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448609,"byte_end":14448639,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448640,"byte_end":14448654,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448655,"byte_end":14448664,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448665,"byte_end":14448670,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448671,"byte_end":14448678,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448679,"byte_end":14448686,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448687,"byte_end":14448762,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448763,"byte_end":14448836,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448837,"byte_end":14448879,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448880,"byte_end":14448883,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448884,"byte_end":14448906,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448907,"byte_end":14448910,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448911,"byte_end":14448988,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14448989,"byte_end":14449065,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449066,"byte_end":14449142,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449143,"byte_end":14449166,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449167,"byte_end":14449170,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449171,"byte_end":14449216,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449217,"byte_end":14449224,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449225,"byte_end":14449260,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449261,"byte_end":14449285,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449286,"byte_end":14449289,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449290,"byte_end":14449319,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449320,"byte_end":14449323,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449324,"byte_end":14449363,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449364,"byte_end":14449367,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449368,"byte_end":14449414,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449415,"byte_end":14449451,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449452,"byte_end":14449455,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449456,"byte_end":14449547,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449548,"byte_end":14449622,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449623,"byte_end":14449645,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449646,"byte_end":14449679,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449680,"byte_end":14449727,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449728,"byte_end":14449780,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449781,"byte_end":14449856,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449857,"byte_end":14449876,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449877,"byte_end":14449890,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449891,"byte_end":14449894,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449895,"byte_end":14449947,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14449948,"byte_end":14450025,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450026,"byte_end":14450090,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450091,"byte_end":14450094,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450095,"byte_end":14450138,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450139,"byte_end":14450179,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450180,"byte_end":14450183,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450184,"byte_end":14450241,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450242,"byte_end":14450288,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450289,"byte_end":14450340,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450341,"byte_end":14450359,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450360,"byte_end":14450369,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450370,"byte_end":14450375,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450376,"byte_end":14450383,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450384,"byte_end":14450387,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450388,"byte_end":14450427,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450428,"byte_end":14450469,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450470,"byte_end":14450506,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450507,"byte_end":14450539,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450540,"byte_end":14450636,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450637,"byte_end":14450688,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450689,"byte_end":14450742,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450743,"byte_end":14450786,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450787,"byte_end":14450831,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450832,"byte_end":14450880,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450881,"byte_end":14450929,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450930,"byte_end":14450976,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14450977,"byte_end":14451016,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453040,"byte_end":14453050,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14451883,"byte_end":14451968,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14451969,"byte_end":14451972,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14451973,"byte_end":14452011,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452012,"byte_end":14452050,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452051,"byte_end":14452054,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452055,"byte_end":14452068,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452069,"byte_end":14452072,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452073,"byte_end":14452154,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452155,"byte_end":14452158,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452159,"byte_end":14452198,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452199,"byte_end":14452232,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452233,"byte_end":14452262,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452263,"byte_end":14452266,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452267,"byte_end":14452274,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452275,"byte_end":14452293,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452294,"byte_end":14452324,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452325,"byte_end":14452349,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452350,"byte_end":14452357,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452358,"byte_end":14452387,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452388,"byte_end":14452440,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452441,"byte_end":14452444,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452445,"byte_end":14452463,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452464,"byte_end":14452481,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452482,"byte_end":14452562,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452563,"byte_end":14452597,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452598,"byte_end":14452651,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452652,"byte_end":14452663,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452664,"byte_end":14452671,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452672,"byte_end":14452677,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452678,"byte_end":14452725,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452726,"byte_end":14452779,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452780,"byte_end":14452838,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452839,"byte_end":14452918,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452919,"byte_end":14452931,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452932,"byte_end":14452939,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452940,"byte_end":14452947,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14452948,"byte_end":14452951,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453152,"byte_end":14453155,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453079,"byte_end":14453140,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455156,"byte_end":14455163,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14453870,"byte_end":14453905,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14453906,"byte_end":14453909,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14453910,"byte_end":14453979,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14453980,"byte_end":14454059,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454060,"byte_end":14454132,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454133,"byte_end":14454157,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454158,"byte_end":14454161,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454162,"byte_end":14454230,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454231,"byte_end":14454308,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454309,"byte_end":14454370,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454371,"byte_end":14454374,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454375,"byte_end":14454436,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454437,"byte_end":14454499,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454500,"byte_end":14454503,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454504,"byte_end":14454567,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454568,"byte_end":14454631,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454632,"byte_end":14454711,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454712,"byte_end":14454786,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454787,"byte_end":14454806,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454807,"byte_end":14454810,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454811,"byte_end":14454879,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454880,"byte_end":14454942,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14454943,"byte_end":14455018,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455019,"byte_end":14455059,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455060,"byte_end":14455063,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455064,"byte_end":14455100,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455101,"byte_end":14455145,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455211,"byte_end":14455215,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455170,"byte_end":14455201,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455981,"byte_end":14455986,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455222,"byte_end":14455274,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455279,"byte_end":14455282,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455287,"byte_end":14455356,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455361,"byte_end":14455431,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455436,"byte_end":14455482,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455487,"byte_end":14455490,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455495,"byte_end":14455571,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455576,"byte_end":14455651,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455656,"byte_end":14455731,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455736,"byte_end":14455776,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455781,"byte_end":14455784,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455789,"byte_end":14455863,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455868,"byte_end":14455914,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455919,"byte_end":14455922,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14455927,"byte_end":14455971,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458922,"byte_end":14458928,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456010,"byte_end":14456075,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456080,"byte_end":14456083,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456088,"byte_end":14456162,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456167,"byte_end":14456239,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456244,"byte_end":14456317,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456322,"byte_end":14456365,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456370,"byte_end":14456373,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456378,"byte_end":14456451,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456456,"byte_end":14456519,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456524,"byte_end":14456599,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456604,"byte_end":14456679,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456684,"byte_end":14456707,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456712,"byte_end":14456715,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456720,"byte_end":14456792,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456797,"byte_end":14456871,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456876,"byte_end":14456946,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456951,"byte_end":14456954,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14456959,"byte_end":14457027,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457032,"byte_end":14457103,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457108,"byte_end":14457188,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457193,"byte_end":14457205,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457210,"byte_end":14457213,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457218,"byte_end":14457288,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457293,"byte_end":14457368,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457373,"byte_end":14457410,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457415,"byte_end":14457418,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457423,"byte_end":14457459,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457464,"byte_end":14457508,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457513,"byte_end":14457516,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457521,"byte_end":14457544,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457549,"byte_end":14457552,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457557,"byte_end":14457631,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457636,"byte_end":14457710,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457715,"byte_end":14457768,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457773,"byte_end":14457776,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457781,"byte_end":14457852,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457857,"byte_end":14457927,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457932,"byte_end":14457948,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457953,"byte_end":14457956,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457961,"byte_end":14457974,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14457979,"byte_end":14457997,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458002,"byte_end":14458007,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458012,"byte_end":14458038,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458043,"byte_end":14458080,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458085,"byte_end":14458090,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458095,"byte_end":14458116,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458121,"byte_end":14458126,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458131,"byte_end":14458161,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458166,"byte_end":14458180,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458185,"byte_end":14458216,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458221,"byte_end":14458254,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458259,"byte_end":14458262,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458267,"byte_end":14458360,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458365,"byte_end":14458383,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458388,"byte_end":14458391,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458396,"byte_end":14458468,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458473,"byte_end":14458533,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458538,"byte_end":14458590,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458595,"byte_end":14458657,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458662,"byte_end":14458729,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458734,"byte_end":14458737,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458742,"byte_end":14458770,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458775,"byte_end":14458784,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458789,"byte_end":14458794,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458799,"byte_end":14458806,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458811,"byte_end":14458814,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458819,"byte_end":14458888,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14458893,"byte_end":14458914,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460094,"byte_end":14460104,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459009,"byte_end":14459081,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459086,"byte_end":14459135,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459140,"byte_end":14459143,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459148,"byte_end":14459216,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459221,"byte_end":14459288,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459293,"byte_end":14459361,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459366,"byte_end":14459442,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459447,"byte_end":14459513,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459518,"byte_end":14459521,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459526,"byte_end":14459594,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459599,"byte_end":14459674,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459679,"byte_end":14459754,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459759,"byte_end":14459831,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459836,"byte_end":14459878,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459883,"byte_end":14459886,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459891,"byte_end":14459966,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14459971,"byte_end":14460049,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460054,"byte_end":14460086,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461712,"byte_end":14461718,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460522,"byte_end":14460602,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460607,"byte_end":14460683,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460688,"byte_end":14460691,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460696,"byte_end":14460771,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460776,"byte_end":14460846,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460851,"byte_end":14460922,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14460927,"byte_end":14460999,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461004,"byte_end":14461062,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461067,"byte_end":14461070,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461075,"byte_end":14461144,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461149,"byte_end":14461224,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461229,"byte_end":14461305,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461310,"byte_end":14461332,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461337,"byte_end":14461340,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461345,"byte_end":14461418,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461423,"byte_end":14461496,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461501,"byte_end":14461577,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461582,"byte_end":14461585,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461590,"byte_end":14461626,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461631,"byte_end":14461663,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14461668,"byte_end":14461704,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462052,"byte_end":14462059,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14461897,"byte_end":14461969,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14461970,"byte_end":14461990,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14461991,"byte_end":14461994,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14461995,"byte_end":14462041,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462324,"byte_end":14462329,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462072,"byte_end":14462104,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462109,"byte_end":14462112,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462117,"byte_end":14462194,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462199,"byte_end":14462255,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462260,"byte_end":14462263,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462268,"byte_end":14462314,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462680,"byte_end":14462686,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462353,"byte_end":14462398,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462403,"byte_end":14462406,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462411,"byte_end":14462485,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462490,"byte_end":14462570,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462575,"byte_end":14462613,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462618,"byte_end":14462621,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14462626,"byte_end":14462672,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473503,"byte_end":14473509,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1508}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475282,"byte_end":14475285,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473651,"byte_end":14473731,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473736,"byte_end":14473817,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473822,"byte_end":14473825,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473830,"byte_end":14473905,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473910,"byte_end":14473980,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473985,"byte_end":14474054,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474059,"byte_end":14474131,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474136,"byte_end":14474194,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474199,"byte_end":14474202,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474207,"byte_end":14474278,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474283,"byte_end":14474360,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474365,"byte_end":14474441,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474446,"byte_end":14474468,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474473,"byte_end":14474476,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474481,"byte_end":14474554,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474559,"byte_end":14474632,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474637,"byte_end":14474713,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474718,"byte_end":14474721,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474726,"byte_end":14474802,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474807,"byte_end":14474883,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474888,"byte_end":14474963,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14474968,"byte_end":14475003,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475008,"byte_end":14475011,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475016,"byte_end":14475052,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475057,"byte_end":14475089,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475094,"byte_end":14475131,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475136,"byte_end":14475174,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475179,"byte_end":14475270,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476893,"byte_end":14476906,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475498,"byte_end":14475578,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475583,"byte_end":14475664,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475669,"byte_end":14475718,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475723,"byte_end":14475726,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475731,"byte_end":14475806,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475811,"byte_end":14475881,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475886,"byte_end":14475955,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14475960,"byte_end":14476032,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476037,"byte_end":14476095,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476100,"byte_end":14476103,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476108,"byte_end":14476179,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476184,"byte_end":14476261,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476266,"byte_end":14476342,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476347,"byte_end":14476369,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476374,"byte_end":14476377,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476382,"byte_end":14476455,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476460,"byte_end":14476533,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476538,"byte_end":14476614,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476619,"byte_end":14476622,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476627,"byte_end":14476663,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476668,"byte_end":14476700,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476705,"byte_end":14476742,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476747,"byte_end":14476785,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14476790,"byte_end":14476881,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479009,"byte_end":14479019,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477432,"byte_end":14477512,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477517,"byte_end":14477598,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477603,"byte_end":14477606,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477611,"byte_end":14477686,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477691,"byte_end":14477761,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477766,"byte_end":14477837,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477842,"byte_end":14477914,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477919,"byte_end":14477977,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477982,"byte_end":14477985,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477990,"byte_end":14478061,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478066,"byte_end":14478143,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478148,"byte_end":14478224,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478229,"byte_end":14478251,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478256,"byte_end":14478259,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478264,"byte_end":14478343,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478348,"byte_end":14478425,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478430,"byte_end":14478433,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478438,"byte_end":14478511,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478516,"byte_end":14478589,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478594,"byte_end":14478670,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478675,"byte_end":14478678,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478683,"byte_end":14478719,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478724,"byte_end":14478756,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478761,"byte_end":14478799,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478804,"byte_end":14478842,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478847,"byte_end":14478901,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14478906,"byte_end":14478997,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479654,"byte_end":14479661,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479371,"byte_end":14479434,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479439,"byte_end":14479452,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479457,"byte_end":14479460,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479465,"byte_end":14479540,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479545,"byte_end":14479615,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479620,"byte_end":14479642,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480005,"byte_end":14480012,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479714,"byte_end":14479785,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479790,"byte_end":14479803,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479808,"byte_end":14479811,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479816,"byte_end":14479891,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479896,"byte_end":14479966,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14479971,"byte_end":14479993,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480375,"byte_end":14480386,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480077,"byte_end":14480155,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480160,"byte_end":14480173,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480178,"byte_end":14480181,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480186,"byte_end":14480261,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480266,"byte_end":14480336,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480341,"byte_end":14480363,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480733,"byte_end":14480738,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480482,"byte_end":14480540,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480545,"byte_end":14480558,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480563,"byte_end":14480566,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480571,"byte_end":14480645,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480650,"byte_end":14480721,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481050,"byte_end":14481059,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480791,"byte_end":14480857,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480862,"byte_end":14480875,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480880,"byte_end":14480883,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480888,"byte_end":14480962,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14480967,"byte_end":14481038,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481179,"byte_end":14481190,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481124,"byte_end":14481167,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481325,"byte_end":14481340,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481262,"byte_end":14481313,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481480,"byte_end":14481492,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481424,"byte_end":14481468,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481629,"byte_end":14481645,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481565,"byte_end":14481617,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481995,"byte_end":14482005,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481730,"byte_end":14481793,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481798,"byte_end":14481801,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481806,"byte_end":14481881,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481886,"byte_end":14481956,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14481961,"byte_end":14481983,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482377,"byte_end":14482387,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482055,"byte_end":14482129,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482134,"byte_end":14482175,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482180,"byte_end":14482183,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482188,"byte_end":14482263,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482268,"byte_end":14482338,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482343,"byte_end":14482365,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484361,"byte_end":14484372,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484046,"byte_end":14484117,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484118,"byte_end":14484190,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484191,"byte_end":14484251,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484252,"byte_end":14484255,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484256,"byte_end":14484292,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484310,"byte_end":14484349,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484458,"byte_end":14484460,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484385,"byte_end":14484449,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484492,"byte_end":14484497,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484470,"byte_end":14484483,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484562,"byte_end":14484570,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484507,"byte_end":14484553,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484657,"byte_end":14484666,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484587,"byte_end":14484648,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484899,"byte_end":14484902,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484847,"byte_end":14484887,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14485631,"byte_end":14485641,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1467}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14485892,"byte_end":14485895,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14485824,"byte_end":14485880,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486243,"byte_end":14486256,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486127,"byte_end":14486209,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486214,"byte_end":14486231,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486970,"byte_end":14486977,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486683,"byte_end":14486746,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486751,"byte_end":14486768,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486773,"byte_end":14486776,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486781,"byte_end":14486856,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486861,"byte_end":14486931,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486936,"byte_end":14486958,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487325,"byte_end":14487332,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487030,"byte_end":14487101,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487106,"byte_end":14487123,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487128,"byte_end":14487131,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487136,"byte_end":14487211,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487216,"byte_end":14487286,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487291,"byte_end":14487313,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487699,"byte_end":14487710,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487397,"byte_end":14487475,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487480,"byte_end":14487497,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487502,"byte_end":14487505,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487510,"byte_end":14487585,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487590,"byte_end":14487660,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487665,"byte_end":14487687,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488075,"byte_end":14488085,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487806,"byte_end":14487873,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487878,"byte_end":14487881,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487886,"byte_end":14487961,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14487966,"byte_end":14488036,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488041,"byte_end":14488063,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488197,"byte_end":14488204,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488135,"byte_end":14488185,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488327,"byte_end":14488338,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488257,"byte_end":14488315,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488458,"byte_end":14488469,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488403,"byte_end":14488446,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488599,"byte_end":14488614,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488536,"byte_end":14488587,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14490715,"byte_end":14490726,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14490933,"byte_end":14490936,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14490864,"byte_end":14490921,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491494,"byte_end":14491501,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491206,"byte_end":14491269,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491274,"byte_end":14491292,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491297,"byte_end":14491300,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491305,"byte_end":14491380,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491385,"byte_end":14491455,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491460,"byte_end":14491482,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491850,"byte_end":14491857,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491554,"byte_end":14491625,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491630,"byte_end":14491648,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491653,"byte_end":14491656,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491661,"byte_end":14491736,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491741,"byte_end":14491811,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491816,"byte_end":14491838,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492225,"byte_end":14492236,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491922,"byte_end":14492000,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492005,"byte_end":14492023,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492028,"byte_end":14492031,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492036,"byte_end":14492111,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492116,"byte_end":14492186,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492191,"byte_end":14492213,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492602,"byte_end":14492612,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492332,"byte_end":14492400,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492405,"byte_end":14492408,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492413,"byte_end":14492488,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492493,"byte_end":14492563,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492568,"byte_end":14492590,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492724,"byte_end":14492731,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492662,"byte_end":14492712,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492854,"byte_end":14492865,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492784,"byte_end":14492842,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492986,"byte_end":14492998,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14492930,"byte_end":14492974,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14493129,"byte_end":14493145,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14493065,"byte_end":14493117,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1233},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1009},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14494672,"byte_end":14494724,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14494725,"byte_end":14494728,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14494729,"byte_end":14494799,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14494800,"byte_end":14494858,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14494859,"byte_end":14494931,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14494932,"byte_end":14495002,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495003,"byte_end":14495070,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495071,"byte_end":14495074,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495075,"byte_end":14495096,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495097,"byte_end":14495100,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495101,"byte_end":14495176,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495177,"byte_end":14495248,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495249,"byte_end":14495320,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495321,"byte_end":14495391,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495392,"byte_end":14495432,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495433,"byte_end":14495436,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495437,"byte_end":14495444,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495445,"byte_end":14495488,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495489,"byte_end":14495547,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495548,"byte_end":14495551,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495552,"byte_end":14495607,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495608,"byte_end":14495650,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495651,"byte_end":14495656,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495657,"byte_end":14495709,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495710,"byte_end":14495715,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495716,"byte_end":14495738,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495739,"byte_end":14495746,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495747,"byte_end":14495750,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495751,"byte_end":14495823,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495824,"byte_end":14495895,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495896,"byte_end":14495915,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495916,"byte_end":14495919,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495920,"byte_end":14495931,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495932,"byte_end":14495981,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14495982,"byte_end":14496031,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496032,"byte_end":14496081,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496082,"byte_end":14496089,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496090,"byte_end":14496093,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496094,"byte_end":14496132,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496133,"byte_end":14496136,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496137,"byte_end":14496144,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496145,"byte_end":14496188,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496189,"byte_end":14496247,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496248,"byte_end":14496251,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496252,"byte_end":14496277,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496278,"byte_end":14496299,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496300,"byte_end":14496303,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496304,"byte_end":14496380,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496381,"byte_end":14496390,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496391,"byte_end":14496433,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496434,"byte_end":14496439,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496440,"byte_end":14496513,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496514,"byte_end":14496561,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496562,"byte_end":14496565,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496566,"byte_end":14496603,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496604,"byte_end":14496618,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496619,"byte_end":14496624,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496625,"byte_end":14496632,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496633,"byte_end":14496636,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496637,"byte_end":14496679,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496680,"byte_end":14496683,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496684,"byte_end":14496695,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496696,"byte_end":14496735,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496736,"byte_end":14496775,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496776,"byte_end":14496815,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496816,"byte_end":14496823,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496824,"byte_end":14496827,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496828,"byte_end":14496842,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496843,"byte_end":14496846,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496847,"byte_end":14496922,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496923,"byte_end":14496996,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14496997,"byte_end":14497063,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497064,"byte_end":14497133,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497134,"byte_end":14497199,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497200,"byte_end":14497203,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497204,"byte_end":14497220,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497221,"byte_end":14497224,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497225,"byte_end":14497301,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497302,"byte_end":14497343,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497344,"byte_end":14497347,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497348,"byte_end":14497355,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497356,"byte_end":14497387,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497388,"byte_end":14497438,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497439,"byte_end":14497480,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497481,"byte_end":14497516,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497517,"byte_end":14497565,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497566,"byte_end":14497597,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497598,"byte_end":14497646,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497647,"byte_end":14497696,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497697,"byte_end":14497719,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497720,"byte_end":14497727,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497728,"byte_end":14497750,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497751,"byte_end":14497758,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497759,"byte_end":14497762,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497763,"byte_end":14497811,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497812,"byte_end":14497815,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497816,"byte_end":14497827,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497828,"byte_end":14497880,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497881,"byte_end":14497946,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14497947,"byte_end":14498012,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498013,"byte_end":14498078,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498079,"byte_end":14498086,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498087,"byte_end":14498090,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498091,"byte_end":14498167,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498168,"byte_end":14498242,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498243,"byte_end":14498315,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498316,"byte_end":14498392,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498393,"byte_end":14498435,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498436,"byte_end":14498439,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498440,"byte_end":14498456,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498457,"byte_end":14498460,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498461,"byte_end":14498536,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498537,"byte_end":14498578,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498579,"byte_end":14498582,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498583,"byte_end":14498590,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498591,"byte_end":14498622,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498623,"byte_end":14498673,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498674,"byte_end":14498715,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498716,"byte_end":14498751,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498752,"byte_end":14498800,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498801,"byte_end":14498832,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498833,"byte_end":14498881,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498882,"byte_end":14498941,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498942,"byte_end":14498964,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498965,"byte_end":14498972,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498973,"byte_end":14498995,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14498996,"byte_end":14499003,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499004,"byte_end":14499007,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499008,"byte_end":14499056,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499057,"byte_end":14499060,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499061,"byte_end":14499072,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499073,"byte_end":14499122,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499123,"byte_end":14499177,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499178,"byte_end":14499232,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499233,"byte_end":14499287,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499288,"byte_end":14499295,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499296,"byte_end":14499299,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499300,"byte_end":14499373,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499374,"byte_end":14499441,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499442,"byte_end":14499445,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499446,"byte_end":14499462,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499463,"byte_end":14499466,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499467,"byte_end":14499543,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499544,"byte_end":14499616,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499617,"byte_end":14499656,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499657,"byte_end":14499660,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499661,"byte_end":14499668,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499669,"byte_end":14499700,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499701,"byte_end":14499751,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499752,"byte_end":14499793,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499794,"byte_end":14499829,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499830,"byte_end":14499878,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499879,"byte_end":14499910,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499911,"byte_end":14499958,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499959,"byte_end":14499979,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14499980,"byte_end":14500002,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500003,"byte_end":14500010,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500011,"byte_end":14500033,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500034,"byte_end":14500041,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500042,"byte_end":14500045,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500046,"byte_end":14500094,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500095,"byte_end":14500098,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500099,"byte_end":14500110,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500111,"byte_end":14500163,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500164,"byte_end":14500229,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500230,"byte_end":14500295,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500296,"byte_end":14500361,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500362,"byte_end":14500369,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500370,"byte_end":14500373,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500374,"byte_end":14500446,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500447,"byte_end":14500522,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500523,"byte_end":14500595,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500596,"byte_end":14500672,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500673,"byte_end":14500746,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500747,"byte_end":14500750,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500751,"byte_end":14500767,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500768,"byte_end":14500771,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500772,"byte_end":14500846,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500847,"byte_end":14500914,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500915,"byte_end":14500918,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500919,"byte_end":14500926,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500927,"byte_end":14500958,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14500959,"byte_end":14501009,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501010,"byte_end":14501051,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501052,"byte_end":14501087,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501088,"byte_end":14501136,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501137,"byte_end":14501168,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501169,"byte_end":14501217,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501218,"byte_end":14501238,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501239,"byte_end":14501261,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501262,"byte_end":14501269,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501270,"byte_end":14501292,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501293,"byte_end":14501300,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501301,"byte_end":14501304,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501305,"byte_end":14501353,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501354,"byte_end":14501357,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501358,"byte_end":14501369,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501370,"byte_end":14501396,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501397,"byte_end":14501442,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501443,"byte_end":14501488,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501489,"byte_end":14501534,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501535,"byte_end":14501538,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501539,"byte_end":14501567,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501568,"byte_end":14501613,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501614,"byte_end":14501659,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501660,"byte_end":14501705,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501706,"byte_end":14501713,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501714,"byte_end":14501717,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501718,"byte_end":14501790,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501791,"byte_end":14501867,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501868,"byte_end":14501938,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14501939,"byte_end":14502008,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502009,"byte_end":14502046,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502047,"byte_end":14502050,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502051,"byte_end":14502125,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502126,"byte_end":14502180,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502181,"byte_end":14502184,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502185,"byte_end":14502201,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502202,"byte_end":14502205,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502206,"byte_end":14502279,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502280,"byte_end":14502356,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502357,"byte_end":14502431,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502432,"byte_end":14502445,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502446,"byte_end":14502449,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502450,"byte_end":14502457,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502458,"byte_end":14502489,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502490,"byte_end":14502540,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502541,"byte_end":14502582,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502583,"byte_end":14502618,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502619,"byte_end":14502668,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502669,"byte_end":14502700,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502701,"byte_end":14502749,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502750,"byte_end":14502794,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502795,"byte_end":14502817,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502818,"byte_end":14502825,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502826,"byte_end":14502848,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502849,"byte_end":14502856,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502857,"byte_end":14502860,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502861,"byte_end":14502909,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502910,"byte_end":14502913,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502914,"byte_end":14502925,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502926,"byte_end":14502952,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14502953,"byte_end":14503003,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503004,"byte_end":14503054,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503055,"byte_end":14503105,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503106,"byte_end":14503109,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503110,"byte_end":14503130,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503131,"byte_end":14503161,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503162,"byte_end":14503192,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503193,"byte_end":14503223,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503224,"byte_end":14503231,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503232,"byte_end":14503235,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503236,"byte_end":14503309,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503310,"byte_end":14503385,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503386,"byte_end":14503458,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503459,"byte_end":14503497,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503498,"byte_end":14503501,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503502,"byte_end":14503576,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503577,"byte_end":14503653,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503654,"byte_end":14503727,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503728,"byte_end":14503756,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503757,"byte_end":14503760,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503761,"byte_end":14503777,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503778,"byte_end":14503781,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503782,"byte_end":14503855,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503856,"byte_end":14503932,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14503933,"byte_end":14504007,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504008,"byte_end":14504080,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504081,"byte_end":14504092,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504093,"byte_end":14504096,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504097,"byte_end":14504104,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504105,"byte_end":14504136,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504137,"byte_end":14504187,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504188,"byte_end":14504229,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504230,"byte_end":14504265,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504266,"byte_end":14504315,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504316,"byte_end":14504347,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504348,"byte_end":14504413,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504414,"byte_end":14504434,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504435,"byte_end":14504457,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504458,"byte_end":14504465,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504466,"byte_end":14504473,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504474,"byte_end":14504477,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504478,"byte_end":14504526,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504527,"byte_end":14504530,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504531,"byte_end":14504542,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504543,"byte_end":14504569,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504570,"byte_end":14504620,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504621,"byte_end":14504671,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504672,"byte_end":14504722,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504723,"byte_end":14504726,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504727,"byte_end":14504747,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504748,"byte_end":14504778,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504779,"byte_end":14504809,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504810,"byte_end":14504840,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504841,"byte_end":14504848,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504849,"byte_end":14504852,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504853,"byte_end":14504926,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14504927,"byte_end":14505001,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505002,"byte_end":14505076,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505077,"byte_end":14505150,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505151,"byte_end":14505227,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505228,"byte_end":14505261,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505262,"byte_end":14505265,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505266,"byte_end":14505282,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505283,"byte_end":14505286,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505287,"byte_end":14505361,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505362,"byte_end":14505429,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505430,"byte_end":14505433,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505434,"byte_end":14505441,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505442,"byte_end":14505473,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505474,"byte_end":14505524,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505525,"byte_end":14505566,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505567,"byte_end":14505602,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505603,"byte_end":14505651,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505652,"byte_end":14505683,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505684,"byte_end":14505731,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505732,"byte_end":14505778,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505779,"byte_end":14505801,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505802,"byte_end":14505809,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505810,"byte_end":14505832,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505833,"byte_end":14505840,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505841,"byte_end":14505844,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505845,"byte_end":14505893,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505894,"byte_end":14505897,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505898,"byte_end":14505909,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505910,"byte_end":14505966,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14505967,"byte_end":14506028,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506029,"byte_end":14506090,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506091,"byte_end":14506152,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506153,"byte_end":14506160,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506161,"byte_end":14506164,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506165,"byte_end":14506239,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506240,"byte_end":14506260,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506261,"byte_end":14506264,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506265,"byte_end":14506279,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506280,"byte_end":14506283,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506284,"byte_end":14506359,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506360,"byte_end":14506432,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506433,"byte_end":14506501,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506502,"byte_end":14506578,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506579,"byte_end":14506620,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506621,"byte_end":14506624,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506625,"byte_end":14506695,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506696,"byte_end":14506714,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506715,"byte_end":14506718,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506719,"byte_end":14506726,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506727,"byte_end":14506759,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506760,"byte_end":14506810,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506811,"byte_end":14506855,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506856,"byte_end":14506869,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506870,"byte_end":14506905,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506906,"byte_end":14506937,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506938,"byte_end":14506961,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506962,"byte_end":14506969,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506970,"byte_end":14506992,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14506993,"byte_end":14507000,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507001,"byte_end":14507004,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507005,"byte_end":14507055,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507056,"byte_end":14507059,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507060,"byte_end":14507071,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507072,"byte_end":14507105,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507106,"byte_end":14507139,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507140,"byte_end":14507173,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507174,"byte_end":14507181,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507182,"byte_end":14507185,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507186,"byte_end":14507255,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507256,"byte_end":14507293,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507294,"byte_end":14507333,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507334,"byte_end":14507379,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507380,"byte_end":14507427,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507428,"byte_end":14507458,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507459,"byte_end":14507492,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508054,"byte_end":14508061,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507736,"byte_end":14507791,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507792,"byte_end":14507795,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507796,"byte_end":14507871,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507872,"byte_end":14507952,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14507953,"byte_end":14508012,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508732,"byte_end":14508757,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508647,"byte_end":14508720,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509102,"byte_end":14509122,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508778,"byte_end":14508852,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508853,"byte_end":14508856,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508857,"byte_end":14508936,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508937,"byte_end":14508980,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508981,"byte_end":14508984,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14508985,"byte_end":14509038,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509039,"byte_end":14509042,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509043,"byte_end":14509073,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509466,"byte_end":14509469,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509375,"byte_end":14509454,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509696,"byte_end":14509703,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509593,"byte_end":14509668,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509673,"byte_end":14509684,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509925,"byte_end":14509941,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509753,"byte_end":14509794,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509799,"byte_end":14509802,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509807,"byte_end":14509880,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509885,"byte_end":14509913,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510362,"byte_end":14510382,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510006,"byte_end":14510040,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510045,"byte_end":14510048,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510053,"byte_end":14510123,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510128,"byte_end":14510203,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510208,"byte_end":14510280,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14510285,"byte_end":14510350,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515638,"byte_end":14515641,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515096,"byte_end":14515171,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515176,"byte_end":14515187,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515192,"byte_end":14515195,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515200,"byte_end":14515214,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515219,"byte_end":14515222,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515227,"byte_end":14515234,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515239,"byte_end":14515270,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515275,"byte_end":14515323,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515328,"byte_end":14515331,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515336,"byte_end":14515377,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515382,"byte_end":14515417,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515422,"byte_end":14515453,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515458,"byte_end":14515489,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515494,"byte_end":14515523,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515528,"byte_end":14515548,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515553,"byte_end":14515575,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515580,"byte_end":14515587,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515592,"byte_end":14515614,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515619,"byte_end":14515626,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516826,"byte_end":14516836,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516305,"byte_end":14516354,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516359,"byte_end":14516362,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516367,"byte_end":14516399,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516404,"byte_end":14516407,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516412,"byte_end":14516480,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516485,"byte_end":14516488,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516493,"byte_end":14516507,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516512,"byte_end":14516515,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516520,"byte_end":14516527,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516532,"byte_end":14516563,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516568,"byte_end":14516616,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516621,"byte_end":14516624,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516629,"byte_end":14516670,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516675,"byte_end":14516710,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516715,"byte_end":14516736,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516741,"byte_end":14516763,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516768,"byte_end":14516775,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516780,"byte_end":14516802,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516807,"byte_end":14516814,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517468,"byte_end":14517481,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516935,"byte_end":14516987,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14516992,"byte_end":14516995,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517000,"byte_end":14517038,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517043,"byte_end":14517046,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517051,"byte_end":14517119,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517124,"byte_end":14517127,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517132,"byte_end":14517146,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517151,"byte_end":14517154,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517159,"byte_end":14517166,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517171,"byte_end":14517202,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517207,"byte_end":14517255,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517260,"byte_end":14517263,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517268,"byte_end":14517309,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517314,"byte_end":14517349,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517354,"byte_end":14517378,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517383,"byte_end":14517405,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517410,"byte_end":14517417,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517422,"byte_end":14517444,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517449,"byte_end":14517456,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518114,"byte_end":14518127,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517581,"byte_end":14517633,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517638,"byte_end":14517641,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517646,"byte_end":14517684,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517689,"byte_end":14517692,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517697,"byte_end":14517765,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517770,"byte_end":14517773,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517778,"byte_end":14517792,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517797,"byte_end":14517800,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517805,"byte_end":14517812,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517817,"byte_end":14517848,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517853,"byte_end":14517901,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517906,"byte_end":14517909,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517914,"byte_end":14517955,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14517960,"byte_end":14517995,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518000,"byte_end":14518024,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518029,"byte_end":14518051,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518056,"byte_end":14518063,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518068,"byte_end":14518090,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518095,"byte_end":14518102,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519208,"byte_end":14519224,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518296,"byte_end":14518325,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518330,"byte_end":14518333,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518338,"byte_end":14518410,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518415,"byte_end":14518440,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518445,"byte_end":14518448,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518453,"byte_end":14518525,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518530,"byte_end":14518599,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518604,"byte_end":14518677,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518682,"byte_end":14518694,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518699,"byte_end":14518702,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518707,"byte_end":14518782,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518787,"byte_end":14518848,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518853,"byte_end":14518856,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518861,"byte_end":14518875,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518880,"byte_end":14518883,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518888,"byte_end":14518895,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518900,"byte_end":14518931,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518936,"byte_end":14518984,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518989,"byte_end":14518992,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14518997,"byte_end":14519038,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519043,"byte_end":14519078,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519083,"byte_end":14519118,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519123,"byte_end":14519145,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519150,"byte_end":14519157,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519162,"byte_end":14519184,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519189,"byte_end":14519196,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519885,"byte_end":14519904,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519321,"byte_end":14519384,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519389,"byte_end":14519392,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519397,"byte_end":14519448,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519453,"byte_end":14519456,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519461,"byte_end":14519529,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519534,"byte_end":14519537,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519542,"byte_end":14519556,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519561,"byte_end":14519564,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519569,"byte_end":14519576,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519581,"byte_end":14519612,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519617,"byte_end":14519665,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519670,"byte_end":14519673,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519678,"byte_end":14519719,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519724,"byte_end":14519759,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519764,"byte_end":14519795,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519800,"byte_end":14519822,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519827,"byte_end":14519834,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519839,"byte_end":14519861,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14519866,"byte_end":14519873,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520563,"byte_end":14520582,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520073,"byte_end":14520139,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520144,"byte_end":14520147,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520152,"byte_end":14520207,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520212,"byte_end":14520215,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520220,"byte_end":14520234,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520239,"byte_end":14520242,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520247,"byte_end":14520254,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520259,"byte_end":14520290,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520295,"byte_end":14520343,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520348,"byte_end":14520351,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520356,"byte_end":14520397,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520402,"byte_end":14520437,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520442,"byte_end":14520473,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520478,"byte_end":14520500,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520505,"byte_end":14520512,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520517,"byte_end":14520539,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520544,"byte_end":14520551,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521136,"byte_end":14521153,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520685,"byte_end":14520758,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520763,"byte_end":14520781,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520786,"byte_end":14520789,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520794,"byte_end":14520808,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520813,"byte_end":14520816,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520821,"byte_end":14520828,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520833,"byte_end":14520864,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520869,"byte_end":14520917,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520922,"byte_end":14520925,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520930,"byte_end":14520971,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14520976,"byte_end":14521011,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521016,"byte_end":14521046,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521051,"byte_end":14521073,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521078,"byte_end":14521085,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521090,"byte_end":14521112,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521117,"byte_end":14521124,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521803,"byte_end":14521811,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521254,"byte_end":14521317,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521322,"byte_end":14521325,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521330,"byte_end":14521391,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521396,"byte_end":14521399,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521404,"byte_end":14521458,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521463,"byte_end":14521466,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521471,"byte_end":14521485,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521490,"byte_end":14521493,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521498,"byte_end":14521505,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521510,"byte_end":14521541,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521546,"byte_end":14521594,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521599,"byte_end":14521602,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521607,"byte_end":14521648,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521653,"byte_end":14521688,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521693,"byte_end":14521713,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521718,"byte_end":14521740,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521745,"byte_end":14521752,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521757,"byte_end":14521779,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521784,"byte_end":14521791,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522331,"byte_end":14522340,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521909,"byte_end":14521972,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521977,"byte_end":14521980,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14521985,"byte_end":14521999,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522004,"byte_end":14522007,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522012,"byte_end":14522019,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522024,"byte_end":14522072,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522077,"byte_end":14522098,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522103,"byte_end":14522138,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522143,"byte_end":14522174,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522179,"byte_end":14522210,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522215,"byte_end":14522244,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522249,"byte_end":14522269,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522274,"byte_end":14522295,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522300,"byte_end":14522307,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522312,"byte_end":14522319,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522996,"byte_end":14523004,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522492,"byte_end":14522545,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522550,"byte_end":14522553,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522558,"byte_end":14522572,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522577,"byte_end":14522580,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522585,"byte_end":14522592,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522597,"byte_end":14522628,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522633,"byte_end":14522681,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522686,"byte_end":14522689,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522694,"byte_end":14522735,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522740,"byte_end":14522775,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522780,"byte_end":14522811,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522816,"byte_end":14522847,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522852,"byte_end":14522881,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522886,"byte_end":14522906,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522911,"byte_end":14522933,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522938,"byte_end":14522945,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522950,"byte_end":14522972,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14522977,"byte_end":14522984,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523577,"byte_end":14523586,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523168,"byte_end":14523222,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523227,"byte_end":14523230,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523235,"byte_end":14523249,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523254,"byte_end":14523257,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523262,"byte_end":14523269,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523274,"byte_end":14523306,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523311,"byte_end":14523361,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523366,"byte_end":14523410,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523415,"byte_end":14523450,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523455,"byte_end":14523486,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523491,"byte_end":14523514,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523519,"byte_end":14523526,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523531,"byte_end":14523553,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523558,"byte_end":14523565,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524195,"byte_end":14524205,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523747,"byte_end":14523796,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523801,"byte_end":14523804,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523809,"byte_end":14523823,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523828,"byte_end":14523831,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523836,"byte_end":14523843,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523848,"byte_end":14523893,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523898,"byte_end":14523948,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14523953,"byte_end":14524009,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524014,"byte_end":14524027,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524032,"byte_end":14524067,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524072,"byte_end":14524103,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524108,"byte_end":14524132,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524137,"byte_end":14524144,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524149,"byte_end":14524171,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524176,"byte_end":14524183,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14525584,"byte_end":14525594,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14525341,"byte_end":14525428,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14525429,"byte_end":14525432,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14525433,"byte_end":14525471,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14525472,"byte_end":14525510,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526694,"byte_end":14526697,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526275,"byte_end":14526335,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526340,"byte_end":14526343,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526348,"byte_end":14526358,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526363,"byte_end":14526366,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526371,"byte_end":14526443,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526448,"byte_end":14526521,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526526,"byte_end":14526593,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526598,"byte_end":14526601,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526606,"byte_end":14526682,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527828,"byte_end":14527847,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526855,"byte_end":14526915,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526920,"byte_end":14526923,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526928,"byte_end":14526991,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526996,"byte_end":14527074,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527079,"byte_end":14527146,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527151,"byte_end":14527223,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527228,"byte_end":14527298,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527303,"byte_end":14527326,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527331,"byte_end":14527334,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527339,"byte_end":14527349,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527354,"byte_end":14527357,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527362,"byte_end":14527437,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527442,"byte_end":14527515,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527520,"byte_end":14527596,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527601,"byte_end":14527674,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527679,"byte_end":14527749,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527754,"byte_end":14527757,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527762,"byte_end":14527816,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528413,"byte_end":14528423,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14527975,"byte_end":14528025,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528030,"byte_end":14528033,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528038,"byte_end":14528045,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528050,"byte_end":14528069,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528074,"byte_end":14528112,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528117,"byte_end":14528120,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528125,"byte_end":14528159,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528164,"byte_end":14528211,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528216,"byte_end":14528223,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528228,"byte_end":14528235,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528240,"byte_end":14528278,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528283,"byte_end":14528286,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528291,"byte_end":14528344,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528349,"byte_end":14528389,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528394,"byte_end":14528401,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532749,"byte_end":14532770,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532703,"byte_end":14532744,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532806,"byte_end":14532808,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532776,"byte_end":14532801,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1283},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532681,"byte_end":14532696,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532598,"byte_end":14532654,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534730,"byte_end":14534747,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533544,"byte_end":14533685,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533686,"byte_end":14533689,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533690,"byte_end":14533728,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533729,"byte_end":14533767,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533768,"byte_end":14533771,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533772,"byte_end":14533785,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533786,"byte_end":14533853,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533854,"byte_end":14533857,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533858,"byte_end":14533891,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533892,"byte_end":14533921,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533922,"byte_end":14533925,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533926,"byte_end":14533933,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533934,"byte_end":14533990,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14533991,"byte_end":14534025,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534026,"byte_end":14534029,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534030,"byte_end":14534035,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534036,"byte_end":14534083,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534084,"byte_end":14534137,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534138,"byte_end":14534215,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534216,"byte_end":14534251,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534252,"byte_end":14534273,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534274,"byte_end":14534324,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534325,"byte_end":14534388,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534389,"byte_end":14534452,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534453,"byte_end":14534516,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534517,"byte_end":14534573,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534574,"byte_end":14534623,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534624,"byte_end":14534636,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534637,"byte_end":14534644,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534645,"byte_end":14534652,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14534653,"byte_end":14534656,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536082,"byte_end":14536085,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535640,"byte_end":14535708,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535713,"byte_end":14535716,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535721,"byte_end":14535731,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535736,"byte_end":14535739,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535744,"byte_end":14535823,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535828,"byte_end":14535902,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535907,"byte_end":14535974,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535979,"byte_end":14535982,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535987,"byte_end":14536070,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537396,"byte_end":14537415,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536365,"byte_end":14536433,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536438,"byte_end":14536441,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536446,"byte_end":14536516,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536521,"byte_end":14536607,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536612,"byte_end":14536682,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536687,"byte_end":14536764,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536769,"byte_end":14536839,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536844,"byte_end":14536867,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536872,"byte_end":14536875,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536880,"byte_end":14536890,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536895,"byte_end":14536898,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536903,"byte_end":14536985,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14536990,"byte_end":14537063,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537068,"byte_end":14537145,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537150,"byte_end":14537223,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537228,"byte_end":14537303,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537308,"byte_end":14537311,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537316,"byte_end":14537384,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538203,"byte_end":14538213,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537672,"byte_end":14537723,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537728,"byte_end":14537731,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537736,"byte_end":14537743,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537748,"byte_end":14537767,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537772,"byte_end":14537817,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537822,"byte_end":14537825,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537830,"byte_end":14537902,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537907,"byte_end":14537954,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537959,"byte_end":14537966,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537971,"byte_end":14537978,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14537983,"byte_end":14538028,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538033,"byte_end":14538036,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538041,"byte_end":14538134,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538139,"byte_end":14538179,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538184,"byte_end":14538191,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542309,"byte_end":14542331,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542262,"byte_end":14542304,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542367,"byte_end":14542369,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542337,"byte_end":14542362,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1315},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542233,"byte_end":14542255,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542149,"byte_end":14542206,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6625,"byte_end":6655,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40554,"byte_end":40563,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40377,"byte_end":40441,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40442,"byte_end":40525,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40826,"byte_end":40832,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40639,"byte_end":40713,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40718,"byte_end":40788,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40793,"byte_end":40814,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8652,"byte_end":8669,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7434,"byte_end":7511,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7512,"byte_end":7522,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7523,"byte_end":7526,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7527,"byte_end":7592,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7593,"byte_end":7667,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7668,"byte_end":7671,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7672,"byte_end":7755,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7756,"byte_end":7759,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7760,"byte_end":7774,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7775,"byte_end":7778,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7779,"byte_end":7792,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7793,"byte_end":7815,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7816,"byte_end":7856,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7857,"byte_end":7860,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7861,"byte_end":7879,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7880,"byte_end":7901,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7902,"byte_end":7947,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7948,"byte_end":7989,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7990,"byte_end":7993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7994,"byte_end":8045,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8109,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8131,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8181,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8182,"byte_end":8228,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8250,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8251,"byte_end":8268,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8350,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8351,"byte_end":8373,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8374,"byte_end":8391,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8392,"byte_end":8405,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8406,"byte_end":8417,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8418,"byte_end":8421,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8422,"byte_end":8455,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8456,"byte_end":8531,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8532,"byte_end":8559,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8560,"byte_end":8571,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8572,"byte_end":8575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8576,"byte_end":8626,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8632,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8633,"byte_end":8640,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9089,"byte_end":9114,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8936,"byte_end":9010,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9011,"byte_end":9028,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9029,"byte_end":9077,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11622,"byte_end":11625,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11547,"byte_end":11610,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13678,"byte_end":13689,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12415,"byte_end":12486,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12491,"byte_end":12524,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12529,"byte_end":12532,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12537,"byte_end":12608,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12645,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12650,"byte_end":12653,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12672,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12677,"byte_end":12680,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12685,"byte_end":12698,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12725,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12730,"byte_end":12770,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12775,"byte_end":12778,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12783,"byte_end":12801,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12806,"byte_end":12827,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12832,"byte_end":12877,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12882,"byte_end":12928,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12933,"byte_end":12936,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12941,"byte_end":12992,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12997,"byte_end":13060,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13065,"byte_end":13086,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13091,"byte_end":13139,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13144,"byte_end":13190,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13195,"byte_end":13216,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13221,"byte_end":13238,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13243,"byte_end":13324,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13329,"byte_end":13351,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13356,"byte_end":13373,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13378,"byte_end":13391,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13396,"byte_end":13407,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13412,"byte_end":13415,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13420,"byte_end":13453,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13458,"byte_end":13533,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13538,"byte_end":13565,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13570,"byte_end":13581,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13586,"byte_end":13589,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13594,"byte_end":13644,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13654,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13659,"byte_end":13666,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16264,"byte_end":16270,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16075,"byte_end":16147,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16152,"byte_end":16172,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16177,"byte_end":16180,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16185,"byte_end":16252,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16398,"byte_end":16410,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16322,"byte_end":16386,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16561,"byte_end":16570,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16475,"byte_end":16549,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16972,"byte_end":16982,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16809,"byte_end":16850,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16855,"byte_end":16858,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16863,"byte_end":16935,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16940,"byte_end":16960,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71142,"byte_end":71152,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71004,"byte_end":71061,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71062,"byte_end":71065,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71066,"byte_end":71113,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71875,"byte_end":71878,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71833,"byte_end":71863,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72593,"byte_end":72603,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72081,"byte_end":72110,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72115,"byte_end":72118,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72123,"byte_end":72199,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72204,"byte_end":72273,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72278,"byte_end":72296,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72301,"byte_end":72304,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72309,"byte_end":72380,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72385,"byte_end":72458,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72463,"byte_end":72537,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72542,"byte_end":72581,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74124,"byte_end":74138,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73027,"byte_end":73108,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73113,"byte_end":73159,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73164,"byte_end":73167,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73172,"byte_end":73220,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73225,"byte_end":73228,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73233,"byte_end":73317,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73322,"byte_end":73381,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73386,"byte_end":73471,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73476,"byte_end":73495,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73500,"byte_end":73579,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73584,"byte_end":73587,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73592,"byte_end":73667,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73672,"byte_end":73748,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73753,"byte_end":73808,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73813,"byte_end":73887,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73892,"byte_end":73965,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73970,"byte_end":74004,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74009,"byte_end":74012,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74017,"byte_end":74093,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74098,"byte_end":74112,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74772,"byte_end":74780,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74524,"byte_end":74589,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74594,"byte_end":74597,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74602,"byte_end":74675,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74680,"byte_end":74690,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74695,"byte_end":74698,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74703,"byte_end":74760,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74892,"byte_end":74901,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74834,"byte_end":74880,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75242,"byte_end":75253,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75043,"byte_end":75077,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75082,"byte_end":75085,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75090,"byte_end":75163,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75168,"byte_end":75230,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75558,"byte_end":75567,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75358,"byte_end":75393,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75398,"byte_end":75401,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75406,"byte_end":75479,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75484,"byte_end":75546,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76267,"byte_end":76284,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75718,"byte_end":75787,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75792,"byte_end":75795,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75800,"byte_end":75870,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75875,"byte_end":75948,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75953,"byte_end":75999,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76004,"byte_end":76007,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76012,"byte_end":76087,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76092,"byte_end":76166,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76171,"byte_end":76197,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76202,"byte_end":76205,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76210,"byte_end":76255,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76450,"byte_end":76460,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76337,"byte_end":76384,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76389,"byte_end":76392,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76397,"byte_end":76438,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78972,"byte_end":78985,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78841,"byte_end":78914,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78915,"byte_end":78918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78919,"byte_end":78960,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79179,"byte_end":79182,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79134,"byte_end":79167,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79346,"byte_end":79351,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79309,"byte_end":79334,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79457,"byte_end":79468,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79403,"byte_end":79445,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79583,"byte_end":79593,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79538,"byte_end":79571,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80327,"byte_end":80339,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79654,"byte_end":79702,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79707,"byte_end":79710,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79715,"byte_end":79756,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79761,"byte_end":79764,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79769,"byte_end":79831,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79896,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79901,"byte_end":79961,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79966,"byte_end":79969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79974,"byte_end":80049,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80054,"byte_end":80122,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80127,"byte_end":80203,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80208,"byte_end":80276,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80281,"byte_end":80315,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81767,"byte_end":81784,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81483,"byte_end":81535,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81540,"byte_end":81543,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81548,"byte_end":81624,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81629,"byte_end":81663,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81668,"byte_end":81671,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81676,"byte_end":81755,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82244,"byte_end":82255,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81857,"byte_end":81899,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81904,"byte_end":81907,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81912,"byte_end":81985,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81990,"byte_end":82030,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82035,"byte_end":82038,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82043,"byte_end":82113,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82118,"byte_end":82152,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82232,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83398,"byte_end":83415,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83198,"byte_end":83255,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83256,"byte_end":83259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83260,"byte_end":83327,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83328,"byte_end":83386,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83593,"byte_end":83596,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83510,"byte_end":83581,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84177,"byte_end":84180,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83962,"byte_end":84014,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84019,"byte_end":84022,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84027,"byte_end":84099,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84104,"byte_end":84165,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84623,"byte_end":84630,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84382,"byte_end":84434,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84439,"byte_end":84442,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84447,"byte_end":84520,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84525,"byte_end":84595,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84600,"byte_end":84611,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86470,"byte_end":86477,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86406,"byte_end":86458,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86763,"byte_end":86767,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86708,"byte_end":86751,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1406},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":87880,"byte_end":87915,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89862,"byte_end":89866,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89875,"byte_end":89880,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1406},"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89843,"byte_end":89849,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1412}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88092,"byte_end":88198,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88199,"byte_end":88202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88203,"byte_end":88293,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88294,"byte_end":88297,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88298,"byte_end":88333,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88334,"byte_end":88337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88338,"byte_end":88351,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88352,"byte_end":88355,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88356,"byte_end":88393,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88394,"byte_end":88397,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88398,"byte_end":88417,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88418,"byte_end":88460,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88461,"byte_end":88511,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88512,"byte_end":88563,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88564,"byte_end":88582,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88583,"byte_end":88604,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88605,"byte_end":88647,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88648,"byte_end":88681,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88682,"byte_end":88698,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88699,"byte_end":88793,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88794,"byte_end":88804,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88805,"byte_end":88808,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88809,"byte_end":88856,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88857,"byte_end":88862,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88863,"byte_end":88870,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88871,"byte_end":88874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89075,"byte_end":89078,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89079,"byte_end":89165,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89166,"byte_end":89176,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89177,"byte_end":89180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89181,"byte_end":89188,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89189,"byte_end":89224,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89225,"byte_end":89267,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89268,"byte_end":89318,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89319,"byte_end":89370,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89371,"byte_end":89374,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89375,"byte_end":89393,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89394,"byte_end":89415,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89416,"byte_end":89458,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89459,"byte_end":89506,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89507,"byte_end":89523,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89524,"byte_end":89573,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89574,"byte_end":89584,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89585,"byte_end":89588,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89589,"byte_end":89622,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89623,"byte_end":89663,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89664,"byte_end":89696,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89697,"byte_end":89702,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89703,"byte_end":89710,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89711,"byte_end":89733,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453062,"byte_end":14453072,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453223,"byte_end":14453233,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453560,"byte_end":14453570,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14463749,"byte_end":14463758,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14463958,"byte_end":14463968,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464119,"byte_end":14464128,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464451,"byte_end":14464461,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464707,"byte_end":14464715,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464812,"byte_end":14464820,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464931,"byte_end":14464939,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14465039,"byte_end":14465047,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14465157,"byte_end":14465167,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14470749,"byte_end":14470759,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473595,"byte_end":14473601,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477413,"byte_end":14477419,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482734,"byte_end":14482740,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14483056,"byte_end":14483062,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14483777,"byte_end":14483783,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484823,"byte_end":14484834,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14485761,"byte_end":14485771,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486660,"byte_end":14486670,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488767,"byte_end":14488777,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14489090,"byte_end":14489100,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14489826,"byte_end":14489836,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14490815,"byte_end":14490826,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491182,"byte_end":14491193,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14493302,"byte_end":14493313,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14494077,"byte_end":14494088,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14494329,"byte_end":14494340,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509348,"byte_end":14509368,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14512702,"byte_end":14512722,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14513608,"byte_end":14513628,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14514969,"byte_end":14514989,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515082,"byte_end":14515089,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524688,"byte_end":14524695,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524821,"byte_end":14524846,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14525004,"byte_end":14525029,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14525164,"byte_end":14525189,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526258,"byte_end":14526268,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528810,"byte_end":14528820,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532196,"byte_end":14532206,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532529,"byte_end":14532539,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532846,"byte_end":14532861,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14533143,"byte_end":14533158,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14533275,"byte_end":14533290,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535616,"byte_end":14535633,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538282,"byte_end":14538299,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14541591,"byte_end":14541608,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14541972,"byte_end":14541989,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542407,"byte_end":14542429,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542758,"byte_end":14542780,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542911,"byte_end":14542933,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14451474,"byte_end":14451490,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453062,"byte_end":14453072,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453223,"byte_end":14453233,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14453560,"byte_end":14453570,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14463749,"byte_end":14463758,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14463958,"byte_end":14463968,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464119,"byte_end":14464128,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464451,"byte_end":14464461,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464707,"byte_end":14464715,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464812,"byte_end":14464820,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2591}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14464931,"byte_end":14464939,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14465039,"byte_end":14465047,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2591}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14465157,"byte_end":14465167,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1555},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14470749,"byte_end":14470759,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1555},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14473595,"byte_end":14473601,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14477413,"byte_end":14477419,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14482734,"byte_end":14482740,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1505},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14483056,"byte_end":14483062,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1505},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14483777,"byte_end":14483783,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14484823,"byte_end":14484834,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14485761,"byte_end":14485771,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14486660,"byte_end":14486670,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14488767,"byte_end":14488777,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1464},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14489090,"byte_end":14489100,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1464},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14489826,"byte_end":14489836,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14490815,"byte_end":14490826,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14491182,"byte_end":14491193,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14493302,"byte_end":14493313,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1423},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14494077,"byte_end":14494088,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1423},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14494329,"byte_end":14494340,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14509348,"byte_end":14509368,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14512702,"byte_end":14512722,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14513608,"byte_end":14513628,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14514969,"byte_end":14514989,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14515082,"byte_end":14515089,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524688,"byte_end":14524695,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14524821,"byte_end":14524846,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14525004,"byte_end":14525029,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14525164,"byte_end":14525189,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14526258,"byte_end":14526268,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14528810,"byte_end":14528820,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532196,"byte_end":14532206,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532529,"byte_end":14532539,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14532846,"byte_end":14532861,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14533143,"byte_end":14533158,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14533275,"byte_end":14533290,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14535616,"byte_end":14535633,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14538282,"byte_end":14538299,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14541591,"byte_end":14541608,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14541972,"byte_end":14541989,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542407,"byte_end":14542429,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542758,"byte_end":14542780,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14542911,"byte_end":14542933,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1398},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1406},"to":{"krate":22,"index":227}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1406},"to":{"krate":22,"index":185}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1406},"to":{"krate":22,"index":266}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1406},"to":{"krate":22,"index":306}},{"span":{"file_name":"/home/kroos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1406},"to":{"krate":20,"index":96}}]}